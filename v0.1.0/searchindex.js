Search.setIndex({"alltitles": {"Note": [[6, null], [7, null], [9, null], [9, null], [9, null], [9, null], [9, null], [9, null], [9, null], [10, null], [11, null], [12, null], [12, null]], "Welcome to QuAIRKit\u2019s documentation!": [[0, null]], "quairkit.ansatz": [[1, null]], "quairkit.ansatz.container": [[2, null]], "quairkit.ansatz.layer": [[3, null]], "quairkit.circuit": [[4, null]], "quairkit.core": [[5, null]], "quairkit.core.base": [[6, null]], "quairkit.core.hamiltonian": [[7, null]], "quairkit.core.state": [[8, null]], "quairkit.core.state.backend": [[9, null]], "quairkit.core.state.backend.density_matrix": [[10, null]], "quairkit.core.state.backend.state_vector": [[11, null]], "quairkit.core.state.state": [[12, null]], "quairkit.core.visual": [[13, null]], "quairkit.database": [[14, null]], "quairkit.database.hamiltonian": [[15, null]], "quairkit.database.matrix": [[16, null]], "quairkit.database.random": [[17, null]], "quairkit.database.representation": [[18, null]], "quairkit.database.set": [[19, null]], "quairkit.database.state": [[20, null]], "quairkit.loss": [[21, null]], "quairkit.loss.distance": [[22, null]], "quairkit.loss.measure": [[23, null]], "quairkit.operator": [[24, null]], "quairkit.operator.channel": [[25, null]], "quairkit.operator.channel.base": [[26, null]], "quairkit.operator.channel.common": [[27, null]], "quairkit.operator.channel.custom": [[28, null]], "quairkit.operator.gate": [[29, null]], "quairkit.operator.gate.base": [[30, null]], "quairkit.operator.gate.custom": [[31, null]], "quairkit.operator.gate.encoding": [[32, null]], "quairkit.operator.gate.multi_qubit_gate": [[33, null]], "quairkit.operator.gate.single_qubit_gate": [[34, null]], "quairkit.operator.gate.visual": [[35, null]], "quairkit.operator.special": [[36, null]], "quairkit.qinfo": [[37, null]]}, "docurls": ["index.html", "quairkit.ansatz.html", "quairkit.ansatz.container.html", "quairkit.ansatz.layer.html", "quairkit.circuit.html", "quairkit.core.html", "quairkit.core.base.html", "quairkit.core.hamiltonian.html", "quairkit.core.state.html", "quairkit.core.state.backend.html", "quairkit.core.state.backend.density_matrix.html", "quairkit.core.state.backend.state_vector.html", "quairkit.core.state.state.html", "quairkit.core.visual.html", "quairkit.database.html", "quairkit.database.hamiltonian.html", "quairkit.database.matrix.html", "quairkit.database.random.html", "quairkit.database.representation.html", "quairkit.database.set.html", "quairkit.database.state.html", "quairkit.loss.html", "quairkit.loss.distance.html", "quairkit.loss.measure.html", "quairkit.operator.html", "quairkit.operator.channel.html", "quairkit.operator.channel.base.html", "quairkit.operator.channel.common.html", "quairkit.operator.channel.custom.html", "quairkit.operator.gate.html", "quairkit.operator.gate.base.html", "quairkit.operator.gate.custom.html", "quairkit.operator.gate.encoding.html", "quairkit.operator.gate.multi_qubit_gate.html", "quairkit.operator.gate.single_qubit_gate.html", "quairkit.operator.gate.visual.html", "quairkit.operator.special.html", "quairkit.qinfo.html"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2}, "indexentries": {"are_qubits() (quairkit.core.state.backend.state method)": [[9, "quairkit.core.state.backend.State.are_qubits", false]], "are_qutrits() (quairkit.core.state.backend.state method)": [[9, "quairkit.core.state.backend.State.are_qutrits", false]], "backend (class in quairkit.core.base)": [[6, "quairkit.core.base.Backend", false]], "backend (quairkit.core.state.backend.state property)": [[9, "quairkit.core.state.backend.State.backend", false]], "bra (quairkit.core.state.backend.state property)": [[9, "quairkit.core.state.backend.State.bra", false]], "check() (quairkit.core.state.backend.state static method)": [[9, "quairkit.core.state.backend.State.check", false]], "clone() (quairkit.core.state.backend.state method)": [[9, "quairkit.core.state.backend.State.clone", false]], "coefficients (quairkit.core.hamiltonian.hamiltonian property)": [[7, "quairkit.core.hamiltonian.Hamiltonian.coefficients", false]], "construct_h_matrix() (quairkit.core.hamiltonian.hamiltonian method)": [[7, "quairkit.core.hamiltonian.Hamiltonian.construct_h_matrix", false]], "data (quairkit.core.state.backend.state property)": [[9, "quairkit.core.state.backend.State.data", false]], "decompose_pauli_words() (quairkit.core.hamiltonian.hamiltonian method)": [[7, "quairkit.core.hamiltonian.Hamiltonian.decompose_pauli_words", false]], "decompose_with_sites() (quairkit.core.hamiltonian.hamiltonian method)": [[7, "quairkit.core.hamiltonian.Hamiltonian.decompose_with_sites", false]], "density_matrix (quairkit.core.state.backend.state property)": [[9, "quairkit.core.state.backend.State.density_matrix", false]], "device (quairkit.core.state.backend.state property)": [[9, "quairkit.core.state.backend.State.device", false]], "dim (quairkit.core.state.backend.state property)": [[9, "quairkit.core.state.backend.State.dim", false]], "dtype (quairkit.core.state.backend.state property)": [[9, "quairkit.core.state.backend.State.dtype", false]], "evolve() (quairkit.core.state.backend.state method)": [[9, "quairkit.core.state.backend.State.evolve", false]], "expand() (quairkit.core.state.backend.state method)": [[9, "quairkit.core.state.backend.State.expand", false]], "expand_as() (quairkit.core.state.backend.state method)": [[9, "quairkit.core.state.backend.State.expand_as", false]], "expec_val() (quairkit.core.state.backend.state method)": [[9, "quairkit.core.state.backend.State.expec_val", false]], "fit() (quairkit.core.state.backend.state method)": [[9, "quairkit.core.state.backend.State.fit", false]], "get_backend() (in module quairkit.core.base)": [[6, "quairkit.core.base.get_backend", false]], "get_device() (in module quairkit.core.base)": [[6, "quairkit.core.base.get_device", false]], "get_dtype() (in module quairkit.core.base)": [[6, "quairkit.core.base.get_dtype", false]], "get_float_dtype() (in module quairkit.core.base)": [[6, "quairkit.core.base.get_float_dtype", false]], "get_seed() (in module quairkit.core.base)": [[6, "quairkit.core.base.get_seed", false]], "hamiltonian (class in quairkit.core.hamiltonian)": [[7, "quairkit.core.hamiltonian.Hamiltonian", false]], "image_to_density_matrix() (in module quairkit.core.state.state)": [[12, "quairkit.core.state.state.image_to_density_matrix", false]], "index_select() (quairkit.core.state.backend.state method)": [[9, "quairkit.core.state.backend.State.index_select", false]], "ket (quairkit.core.state.backend.state property)": [[9, "quairkit.core.state.backend.State.ket", false]], "matrix (quairkit.core.hamiltonian.hamiltonian property)": [[7, "quairkit.core.hamiltonian.Hamiltonian.matrix", false]], "measure() (quairkit.core.state.backend.state method)": [[9, "quairkit.core.state.backend.State.measure", false]], "mixedstate (class in quairkit.core.state.backend.density_matrix)": [[10, "quairkit.core.state.backend.density_matrix.MixedState", false]], "module": [[5, "module-quairkit.core", false], [6, "module-quairkit.core.base", false], [7, "module-quairkit.core.hamiltonian", false], [8, "module-quairkit.core.state", false], [9, "module-quairkit.core.state.backend", false], [10, "module-quairkit.core.state.backend.density_matrix", false], [11, "module-quairkit.core.state.backend.state_vector", false], [12, "module-quairkit.core.state.state", false]], "n_qubits (quairkit.core.hamiltonian.hamiltonian property)": [[7, "quairkit.core.hamiltonian.Hamiltonian.n_qubits", false]], "n_terms (quairkit.core.hamiltonian.hamiltonian property)": [[7, "quairkit.core.hamiltonian.Hamiltonian.n_terms", false]], "normalize() (quairkit.core.state.backend.state method)": [[9, "quairkit.core.state.backend.State.normalize", false]], "num_qubits (quairkit.core.state.backend.state property)": [[9, "quairkit.core.state.backend.State.num_qubits", false]], "num_systems (quairkit.core.state.backend.state property)": [[9, "quairkit.core.state.backend.State.num_systems", false]], "numel() (quairkit.core.state.backend.state method)": [[9, "quairkit.core.state.backend.State.numel", false]], "numpy() (quairkit.core.state.backend.state method)": [[9, "quairkit.core.state.backend.State.numpy", false]], "operator (class in quairkit.core.base)": [[6, "quairkit.core.base.Operator", false]], "pauli_str (quairkit.core.hamiltonian.hamiltonian property)": [[7, "quairkit.core.hamiltonian.Hamiltonian.pauli_str", false]], "pauli_words (quairkit.core.hamiltonian.hamiltonian property)": [[7, "quairkit.core.hamiltonian.Hamiltonian.pauli_words", false]], "pauli_words_matrix (quairkit.core.hamiltonian.hamiltonian property)": [[7, "quairkit.core.hamiltonian.Hamiltonian.pauli_words_matrix", false]], "pauli_words_r (quairkit.core.hamiltonian.hamiltonian property)": [[7, "quairkit.core.hamiltonian.Hamiltonian.pauli_words_r", false]], "purestate (class in quairkit.core.state.backend.state_vector)": [[11, "quairkit.core.state.backend.state_vector.PureState", false]], "quairkit.core": [[5, "module-quairkit.core", false]], "quairkit.core.base": [[6, "module-quairkit.core.base", false]], "quairkit.core.hamiltonian": [[7, "module-quairkit.core.hamiltonian", false]], "quairkit.core.state": [[8, "module-quairkit.core.state", false]], "quairkit.core.state.backend": [[9, "module-quairkit.core.state.backend", false]], "quairkit.core.state.backend.density_matrix": [[10, "module-quairkit.core.state.backend.density_matrix", false]], "quairkit.core.state.backend.state_vector": [[11, "module-quairkit.core.state.backend.state_vector", false]], "quairkit.core.state.state": [[12, "module-quairkit.core.state.state", false]], "rank (quairkit.core.state.backend.state property)": [[9, "quairkit.core.state.backend.State.rank", false]], "reset_sequence() (quairkit.core.state.backend.state method)": [[9, "quairkit.core.state.backend.State.reset_sequence", false]], "set_backend() (in module quairkit.core.base)": [[6, "quairkit.core.base.set_backend", false]], "set_device() (in module quairkit.core.base)": [[6, "quairkit.core.base.set_device", false]], "set_dtype() (in module quairkit.core.base)": [[6, "quairkit.core.base.set_dtype", false]], "set_seed() (in module quairkit.core.base)": [[6, "quairkit.core.base.set_seed", false]], "sigx_p (quairkit.core.hamiltonian.spinops property)": [[7, "quairkit.core.hamiltonian.SpinOps.sigx_p", false]], "sigy_p (quairkit.core.hamiltonian.spinops property)": [[7, "quairkit.core.hamiltonian.SpinOps.sigy_p", false]], "sigz_p (quairkit.core.hamiltonian.spinops property)": [[7, "quairkit.core.hamiltonian.SpinOps.sigz_p", false]], "sites (quairkit.core.hamiltonian.hamiltonian property)": [[7, "quairkit.core.hamiltonian.Hamiltonian.sites", false]], "spinops (class in quairkit.core.hamiltonian)": [[7, "quairkit.core.hamiltonian.SpinOps", false]], "state (class in quairkit.core.state.backend)": [[9, "quairkit.core.state.backend.State", false]], "system_dim (quairkit.core.state.backend.state property)": [[9, "quairkit.core.state.backend.State.system_dim", false]], "system_seq (quairkit.core.state.backend.density_matrix.mixedstate property)": [[10, "quairkit.core.state.backend.density_matrix.MixedState.system_seq", false]], "system_seq (quairkit.core.state.backend.state property)": [[9, "quairkit.core.state.backend.State.system_seq", false]], "system_seq (quairkit.core.state.backend.state_vector.purestate property)": [[11, "quairkit.core.state.backend.state_vector.PureState.system_seq", false]], "tensor_state() (in module quairkit.core.state.state)": [[12, "quairkit.core.state.state.tensor_state", false]], "terms (quairkit.core.hamiltonian.hamiltonian property)": [[7, "quairkit.core.hamiltonian.Hamiltonian.terms", false]], "to() (quairkit.core.state.backend.state method)": [[9, "quairkit.core.state.backend.State.to", false]], "to_state() (in module quairkit.core.state.state)": [[12, "quairkit.core.state.state.to_state", false]], "trace() (quairkit.core.state.backend.state method)": [[9, "quairkit.core.state.backend.State.trace", false]], "transform() (quairkit.core.state.backend.state method)": [[9, "quairkit.core.state.backend.State.transform", false]], "vec (quairkit.core.state.backend.state property)": [[9, "quairkit.core.state.backend.State.vec", false]]}, "objects": {"quairkit": [[5, 0, 0, 1, "core", ""]], "quairkit.core": [[6, 0, 0, 1, "base", ""], [7, 0, 0, 1, "hamiltonian", ""], [8, 0, 0, 1, "state", ""]], "quairkit.core.base": [[6, 1, 1, 0, "Backend", "Backend classifier in the QuAIRKit."], [6, 1, 1, 0, "Operator", "The basic class to implement the operation in QuAIRKit."], [6, 3, 1, 0, "get_backend", "Get the current backend of QuAIRKit."], [6, 3, 1, 0, "get_device", "Get the current device to save the tensor."], [6, 3, 1, 0, "get_dtype", "Return currently used data type."], [6, 3, 1, 0, "get_float_dtype", "Return currently used float data type."], [6, 3, 1, 0, "get_seed", "Get the currently used seed of QuAIRKit."], [6, 3, 1, 0, "set_backend", "Set the backend implementation of QuAIRKit."], [6, 3, 1, 0, "set_device", "Set the device to save the tensor."], [6, 3, 1, 0, "set_dtype", "Set the data type ."], [6, 3, 1, 0, "set_seed", "Set the global seed of QuAIRKit."]], "quairkit.core.base.Backend.__init__": [[6, 2, 2, "quairkit.core.base.Backend", "*values", "Backend classifier in the QuAIRKit."], [6, 2, 2, "quairkit.core.base.Backend", "boundary=None", "Backend classifier in the QuAIRKit."], [6, 2, 2, "quairkit.core.base.Backend", "module=None", "Backend classifier in the QuAIRKit."], [6, 2, 2, "quairkit.core.base.Backend", "names=&lt;not given&gt;", "Backend classifier in the QuAIRKit."], [6, 2, 2, "quairkit.core.base.Backend", "qualname=None", "Backend classifier in the QuAIRKit."], [6, 2, 2, "quairkit.core.base.Backend", "start=1", "Backend classifier in the QuAIRKit."], [6, 2, 2, "quairkit.core.base.Backend", "type=None", "Backend classifier in the QuAIRKit."], [6, 2, 2, "quairkit.core.base.Backend", "value", "Backend classifier in the QuAIRKit."]], "quairkit.core.base.Operator.__init__": [[6, 2, 2, 0, "backend", "The backend implementation of the operator. Defaults to None, which means to use the default backend implementation."], [6, 2, 2, 0, "dtype", "The data type of the operator. Defaults to None, which means to use the default data type."]], "quairkit.core.base.set_backend": [[6, 2, 2, 0, "backend", "The name of the backend."]], "quairkit.core.base.set_device": [[6, 2, 2, 0, "device", "The name of the device."]], "quairkit.core.base.set_dtype": [[6, 2, 2, 0, "dtype", "The dtype can be complex64 and complex128."]], "quairkit.core.base.set_seed": [[6, 2, 2, 0, "seed", "the random seed used in QuAIRKit."]], "quairkit.core.hamiltonian": [[7, 1, 1, 0, "Hamiltonian", "Hamiltonian class in QuAIRKit."], [7, 1, 1, 0, "SpinOps", "The spin operators in matrix forms, could be used to construct Hamiltonian matrix or spin observables."]], "quairkit.core.hamiltonian.Hamiltonian": [[7, 4, 1, 0, "coefficients", "The coefficient of each term in the Hamiltonian, i.e. [1.0, 2.0]."], [7, 5, 1, 0, "construct_h_matrix", "Construct a matrix form of the Hamiltonian in Z-basis."], [7, 5, 1, 0, "decompose_pauli_words", "Decompose pauli_str into coefficients and Pauli strings."], [7, 5, 1, 0, "decompose_with_sites", "Decompose pauli_str into coefficients, a simplified form of Pauli strings, and the indices of qubits on which the Pauli operators act on."], [7, 4, 1, 0, "matrix", "The matrix form of the Hamiltonian."], [7, 4, 1, 0, "n_qubits", "Number of qubits."], [7, 4, 1, 0, "n_terms", "Number of terms of the hamiltonian."], [7, 4, 1, 0, "pauli_str", "The Pauli string corresponding to the hamiltonian."], [7, 4, 1, 0, "pauli_words", "The Pauli word of each term, i.e. ['ZIZ', 'IIX']."], [7, 4, 1, 0, "pauli_words_matrix", "The list of matrices with respect to simplied Pauli words."], [7, 4, 1, 0, "pauli_words_r", "A list of Pauli word (exclude I), i.e. ['ZXZZ', 'Z', 'X']."], [7, 4, 1, 0, "sites", "A list of qubits index corresponding to the hamiltonian."], [7, 4, 1, 0, "terms", "All items in hamiltonian, i.e. [['Z0, Z1'], ['I']]."]], "quairkit.core.hamiltonian.Hamiltonian.__init__": [[7, 2, 2, 0, "compress", "Determines whether the input list will be automatically merged (e.g."], [7, 2, 2, 0, "pauli_str", "A list of Hamiltonian information, e.g."]], "quairkit.core.hamiltonian.Hamiltonian.construct_h_matrix": [[7, 2, 2, 0, "qubit_num", "The number of qubits."]], "quairkit.core.hamiltonian.SpinOps": [[7, 4, 1, 0, "sigx_p", "A list of S^x_i operators, different elements correspond to different indices i."], [7, 4, 1, 0, "sigy_p", "A list of S^y_i operators, different elements correspond to different indices i."], [7, 4, 1, 0, "sigz_p", "A list of S^z_i operators, different elements correspond to different indices i."]], "quairkit.core.hamiltonian.SpinOps.__init__": [[7, 2, 2, 0, "size", "Size of the system (number of qubits)."], [7, 2, 2, 0, "use_sparse", "Decide whether to use the sparse matrix to calculate."]], "quairkit.core.state": [[9, 0, 0, 1, "backend", ""], [12, 0, 0, 1, "state", ""]], "quairkit.core.state.backend": [[9, 1, 1, 0, "State", "The abstract base class for quantum states in QuAIRKit."], [10, 0, 0, 1, "density_matrix", ""], [11, 0, 0, 1, "state_vector", ""]], "quairkit.core.state.backend.State": [[9, 5, 1, 0, "are_qubits", "Whether all systems are qubits"], [9, 5, 1, 0, "are_qutrits", "Whether all systems are qutrits"], [9, 4, 1, 0, "backend", "The backend of this state."], [9, 4, 1, 0, "bra", "Dagger of the ket form."], [9, 5, 1, 0, "check", "Assert whether the input data is valid for the specific State class."], [9, 5, 1, 0, "clone", "Return a copy of the quantum state."], [9, 4, 1, 0, "data", "The data tensor of this state"], [9, 4, 1, 0, "density_matrix", "The density matrix representation of this state."], [9, 4, 1, 0, "device", "The device of this state"], [9, 4, 1, 0, "dim", "The dimension of this state"], [9, 4, 1, 0, "dtype", "The data type of this state"], [9, 5, 1, 0, "evolve", "Evolve this state with unitary operators."], [9, 5, 1, 0, "expand", "Expand the batch dimension of the State."], [9, 5, 1, 0, "expand_as", "Expand this tensor to the same size as other."], [9, 5, 1, 0, "expec_val", "The expectation value of the observable with respect to the quantum state."], [9, 5, 1, 0, "fit", "Convert the data to the specified backend."], [9, 5, 1, 0, "index_select", "Indexing elements from the State batch along the given dimension."], [9, 4, 1, 0, "ket", "The ket form of this state"], [9, 5, 1, 0, "measure", "Measure the quantum state"], [9, 5, 1, 0, "normalize", "Normalize this state"], [9, 4, 1, 0, "num_qubits", "The number of qubits of this state, when all systems are qubits"], [9, 4, 1, 0, "num_systems", "The number of systems"], [9, 5, 1, 0, "numel", "The number of elements in this data"], [9, 5, 1, 0, "numpy", "Get the data in numpy."], [9, 4, 1, 0, "rank", "The rank of the state."], [9, 5, 1, 0, "reset_sequence", "reset the system order to default sequence i.e. from 1 to n."], [9, 4, 1, 0, "system_dim", "The list of dimensions for each system"], [9, 4, 1, 0, "system_seq", "The system order of this state"], [9, 5, 1, 0, "to", "Change the property of the data tensor, and return a copy of this State"], [9, 5, 1, 0, "trace", "(Partial) trace of the state"], [9, 5, 1, 0, "transform", "Apply a general linear operator to the state."], [9, 4, 1, 0, "vec", "\\textrm{vec}(|i \\rangle\\langle j|)=|j, i \\rangle"]], "quairkit.core.state.backend.State.__init__": [[9, 2, 2, 0, "data", "tensor array for quantum state(s)."], [9, 2, 2, 0, "sys_dim", "a list of dimensions for each system."], [9, 2, 2, 0, "system_seq", "the system order of this state."]], "quairkit.core.state.backend.State.check": [[9, 2, 2, 0, "data", "tensor array for quantum state(s)."], [9, 2, 2, 0, "sys_dim", "(list of) dimension(s) of the systems, can be a list of integers or an integer."]], "quairkit.core.state.backend.State.evolve": [[9, 2, 2, 0, "sys_idx", "the system indices to be acted on."], [9, 2, 2, 0, "unitary", "the unitary operator."]], "quairkit.core.state.backend.State.expand": [[9, 2, 2, 0, "batch_dim", "the new batch dimension"]], "quairkit.core.state.backend.State.expand_as": [[9, 2, 2, 0, "other", "the state/tensor to be expanded to."]], "quairkit.core.state.backend.State.expec_val": [[9, 2, 2, 0, "decompose", "If decompose is True, it will return the expectation value of each term."], [9, 2, 2, 0, "hamiltonian", "Input observable."], [9, 2, 2, "quairkit.core.state.backend.State.expec_val", "shots", "The expectation value of the observable with respect to the quantum state."]], "quairkit.core.state.backend.State.fit": [[9, 2, 2, 0, "state_backend", "the target backend of the state."]], "quairkit.core.state.backend.State.index_select": [[9, 2, 2, 0, "dim", "the dimension in which we index"], [9, 2, 2, 0, "index", "the 1-D tensor containing the indices to index"]], "quairkit.core.state.backend.State.measure": [[9, 2, 2, 0, "is_povm", "whether the measurement is a POVM."], [9, 2, 2, 0, "keep_state", "whether to keep the state after measurement."], [9, 2, 2, 0, "measured_op", "measurement operator."], [9, 2, 2, 0, "sys_idx", "the system indices to be measured."]], "quairkit.core.state.backend.State.to": [[9, 2, 2, 0, "device", "the new device of the state."], [9, 2, 2, 0, "dtype", "the new data type of the state."]], "quairkit.core.state.backend.State.trace": [[9, 2, 2, 0, "sys_idx", "the subsystem indices to be traced out."]], "quairkit.core.state.backend.State.transform": [[9, 2, 2, 0, "op", "the input operator."], [9, 2, 2, 0, "repr_type", "the representation type of input operator."], [9, 2, 2, 0, "sys_idx", "the qubit indices to be applied."]], "quairkit.core.state.backend.density_matrix": [[10, 1, 1, 0, "MixedState", "The mixed state class."]], "quairkit.core.state.backend.density_matrix.MixedState": [[10, 4, 1, 0, "system_seq", "The system order of this state"]], "quairkit.core.state.backend.density_matrix.MixedState.__init__": [[10, 2, 2, 0, "data", "tensor array (in density matrix representation) for quantum mixed state(s)."], [10, 2, 2, 0, "sys_dim", "a list of dimensions for each system."], [10, 2, 2, 0, "system_seq", "the system order of this state."]], "quairkit.core.state.backend.state_vector": [[11, 1, 1, 0, "PureState", "The pure state class."]], "quairkit.core.state.backend.state_vector.PureState": [[11, 4, 1, 0, "system_seq", "The system order of this state"]], "quairkit.core.state.backend.state_vector.PureState.__init__": [[11, 2, 2, 0, "data", "tensor array in vector representation for quantum pure state(s)."], [11, 2, 2, 0, "sys_dim", "a list of dimensions for each system."], [11, 2, 2, 0, "system_seq", "the system order of this state."]], "quairkit.core.state.state": [[12, 3, 1, 0, "image_to_density_matrix", "Encode image to density matrix"], [12, 3, 1, 0, "tensor_state", "calculate tensor product (kronecker product) between at least two state. This function automatically returns State instance"], [12, 3, 1, 0, "to_state", "The function to generate a specified state instance."]], "quairkit.core.state.state.image_to_density_matrix": [[12, 2, 2, 0, "image_filepath", "Path to the image file."]], "quairkit.core.state.state.tensor_state": [[12, 2, 2, 0, "args", "other states"], [12, 2, 2, 0, "state_a", "State"], [12, 2, 2, 0, "state_b", "State"]], "quairkit.core.state.state.to_state": [[12, 2, 2, 0, "data", "a representation of the quantum state in allowable backend, or an instance of the State class."], [12, 2, 2, 0, "dtype", "Used to specify the data dtype of the data."], [12, 2, 2, 0, "state_backend", "The backend of the state."], [12, 2, 2, 0, "sys_dim", "(list of) dimension(s) of the systems, can be a list of integers or an integer."]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "parameter", "Python parameter"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "method", "Python method"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:parameter", "3": "py:function", "4": "py:property", "5": "py:method"}, "terms": {"": [7, 9, 10, 11, 12], "0": [7, 9], "1": [6, 7, 9, 10, 11, 12], "2": [7, 12], "3": 7, "A": 7, "For": 12, "If": [7, 9], "The": [6, 7, 8, 9, 10, 11, 12], "_data": 9, "about": 9, "abstract": 9, "act": [7, 9], "after": 9, "all": [7, 9], "allow": 12, "along": 9, "also": 9, "an": [9, 12], "anoth": 10, "ansatz": 0, "appli": 9, "ar": [9, 12], "are_qubit": 9, "are_qutrit": 9, "arg": 12, "arrai": [9, 10, 11], "assert": 9, "automat": [7, 12], "avail": 9, "backend": [5, 6, 8, 12], "base": [5, 9, 24, 25, 29], "basi": [7, 9], "basic": 6, "batch": [9, 12], "batch_dim": 9, "between": 12, "bool": [7, 9], "both": 9, "boundari": 6, "bra": 9, "broadcast": 9, "calcul": [7, 12], "call": 10, "can": [6, 7, 9, 12], "cannot": 9, "care": 12, "case": 9, "chang": 9, "channel": 24, "check": [7, 9], "circuit": 0, "class": [6, 7, 8, 9, 10, 11, 12], "classifi": 6, "clone": 9, "coeffici": 7, "collaps": 9, "common": [12, 24, 25], "complex128": 6, "complex64": 6, "compress": 7, "comput": 9, "consid": 9, "construct": 7, "construct_h_matrix": 7, "contain": [1, 7, 9], "convert": 9, "copi": 9, "core": 0, "correspond": [7, 9], "could": 7, "creat": 7, "cuda": 6, "current": [6, 9], "custom": [24, 25, 29], "d": [9, 10, 11, 12], "d1": 12, "dagger": 9, "data": [6, 9, 10, 11, 12], "databas": 0, "datatyp": 12, "decid": 7, "decompos": [7, 9], "decompose_pauli_word": 7, "decompose_with_sit": 7, "default": [6, 7, 9, 10, 11, 12], "densiti": [9, 10, 12], "density_matrix": [8, 9, 12], "detail": 9, "determin": [7, 12], "devic": [6, 9], "differ": 7, "dim": 9, "dimens": [9, 10, 11, 12], "distanc": 21, "distinguish": 9, "dn": 12, "docstr": 9, "doe": 9, "dtype": [6, 9, 12], "e": [7, 9], "each": [7, 9, 10, 11], "element": [7, 9], "encod": [12, 24, 29], "error": 9, "evolv": 9, "exampl": 12, "exclud": 7, "expand": 9, "expand_a": 9, "expec_v": 9, "expect": [9, 10], "fals": [7, 9], "file": [10, 11, 12], "first": 12, "fit": 9, "float": [6, 7], "follow": [6, 7], "form": [7, 9, 10, 11], "format": 9, "from": [9, 10, 11], "function": [5, 6, 9, 10, 12], "g": 7, "gate": 24, "gener": [9, 12], "get": [6, 9], "get_backend": [5, 6], "get_devic": [5, 6], "get_dtyp": [5, 6], "get_float_dtyp": [5, 6], "get_se": [5, 6], "given": [6, 9], "global": [6, 12], "go": 0, "hamiltonian": [5, 9, 14], "here": 9, "home": 0, "howev": 9, "i": [6, 7, 9, 10, 11, 12], "iix": 7, "imag": 12, "image_filepath": 12, "image_to_density_matrix": [8, 12], "implement": [6, 8, 9], "index": [7, 9], "index_select": 9, "indic": [7, 9], "inform": [7, 9], "init": 10, "input": [7, 9, 10, 12], "instanc": 12, "instanti": 7, "int": [6, 7, 9, 10, 11, 12], "integ": [9, 12], "is_povm": 9, "is_xxx": 9, "item": 7, "iter": 7, "its": 9, "j": 9, "keep": 9, "keep_stat": 9, "ket": 9, "krau": 9, "kroneck": 12, "langl": 9, "layer": 1, "least": 12, "legitimaci": 7, "linalg": 12, "linear": 9, "list": [7, 9, 10, 11, 12], "loss": 0, "mai": 9, "matric": 7, "matrix": [7, 9, 10, 12, 14], "mean": [6, 10, 12], "measur": [9, 21], "measured_op": 9, "memori": 9, "merg": 7, "messag": 9, "mix": [9, 10], "mixedst": [9, 10], "modul": [6, 7, 8, 9], "more": 9, "multi_qubit_g": [24, 29], "n": [9, 10, 11], "n_qubit": 7, "n_term": 7, "name": [6, 9], "ndarrai": [7, 9, 12], "need": 12, "new": 9, "nkron": 12, "none": [6, 7, 9, 10, 11, 12], "normal": 9, "num_qubit": 9, "num_system": 9, "number": [7, 9], "numel": 9, "numpi": [6, 9, 12], "observ": [7, 9], "obtain": 12, "onli": [9, 12], "op": 9, "oper": [0, 5, 6, 7, 9], "option": 9, "order": [9, 10, 11], "other": [9, 12], "out": 9, "paramet": [6, 7, 9, 10, 11, 12], "partial": 9, "path": 12, "pauli": 7, "pauli_str": 7, "pauli_word": 7, "pauli_words_matrix": 7, "pauli_words_r": 7, "per": 9, "povm": 9, "probabl": 9, "product": 12, "properti": [7, 9, 10, 11], "pure": [9, 11], "purest": [9, 11], "qinfo": [0, 9], "qualnam": 6, "quantum": [9, 10, 11, 12], "qubit": [7, 9, 12], "qubit_num": 7, "qutrit": [9, 12], "rais": [6, 9], "random": [6, 14], "rangl": 9, "rank": 9, "refer": 9, "repr_typ": 9, "represent": [9, 10, 11, 12, 14], "reset": 9, "reset_sequ": 9, "respect": [7, 9], "result": 9, "return": [6, 7, 9, 12], "rule": 9, "run": 9, "same": 9, "save": [6, 9], "second": 12, "see": 9, "seed": 6, "sequenc": 9, "set": [6, 12, 14], "set_backend": [5, 6], "set_devic": [5, 6], "set_dtyp": [5, 6], "set_se": [5, 6], "setup": 12, "shape": [10, 11], "shot": 9, "should": 6, "sigx_p": 7, "sigy_p": 7, "sigz_p": 7, "simpli": 7, "simplifi": 7, "sinc": 9, "singl": 12, "single_qubit_g": [24, 29], "site": 7, "size": [7, 9], "sourc": [10, 11], "spars": 7, "special": 24, "specif": 9, "specifi": [9, 12], "spin": 7, "spinop": [5, 7], "start": 6, "state": [5, 14], "state_a": 12, "state_b": 12, "state_backend": [9, 12], "state_vector": [8, 9, 12], "statevector": 9, "static": 9, "store": [10, 11], "str": [6, 7, 9, 12], "string": 7, "subsystem": 9, "support": 9, "sys_dim": [9, 10, 11, 12], "sys_idx": 9, "system": [7, 9, 10, 11, 12], "system_dim": 9, "system_seq": [9, 10, 11], "tabl": 12, "target": 9, "tensor": [6, 7, 9, 10, 11, 12], "tensor_st": [8, 12], "term": [7, 9], "textrm": 9, "thi": [9, 10, 11, 12], "to_stat": [8, 12], "torch": [6, 9, 12], "trace": 9, "transform": 9, "true": [7, 9], "tupl": [7, 9], "two": [7, 12], "type": [6, 7, 9, 12], "unitari": 9, "us": [6, 7, 10, 12], "use_spars": 7, "user": 7, "userwarn": 9, "valid": 9, "valu": [6, 9], "valueerror": 6, "variou": 9, "vec": 9, "vector": [9, 11], "visual": [5, 24, 29], "we": 9, "when": [9, 10, 12], "where": 9, "whether": [7, 9], "which": [6, 7, 9, 10], "word": 7, "x": 7, "x3": 7, "x_i": 7, "xxx": 9, "y_i": 7, "z": 7, "z0": 7, "z1": 7, "z_i": 7, "ziz": 7, "zxzz": 7, "zzix": 7, "zzx": 7}, "titles": ["Welcome to QuAIRKit\u2019s documentation!", "quairkit.ansatz", "quairkit.ansatz.container", "quairkit.ansatz.layer", "quairkit.circuit", "quairkit.core", "quairkit.core.base", "quairkit.core.hamiltonian", "quairkit.core.state", "quairkit.core.state.backend", "quairkit.core.state.backend.density_matrix", "quairkit.core.state.backend.state_vector", "quairkit.core.state.state", "quairkit.core.visual", "quairkit.database", "quairkit.database.hamiltonian", "quairkit.database.matrix", "quairkit.database.random", "quairkit.database.representation", "quairkit.database.set", "quairkit.database.state", "quairkit.loss", "quairkit.loss.distance", "quairkit.loss.measure", "quairkit.operator", "quairkit.operator.channel", "quairkit.operator.channel.base", "quairkit.operator.channel.common", "quairkit.operator.channel.custom", "quairkit.operator.gate", "quairkit.operator.gate.base", "quairkit.operator.gate.custom", "quairkit.operator.gate.encoding", "quairkit.operator.gate.multi_qubit_gate", "quairkit.operator.gate.single_qubit_gate", "quairkit.operator.gate.visual", "quairkit.operator.special", "quairkit.qinfo"], "titleterms": {"": 0, "ansatz": [1, 2, 3], "backend": [9, 10, 11], "base": [6, 26, 30], "channel": [25, 26, 27, 28], "circuit": 4, "common": 27, "contain": 2, "core": [5, 6, 7, 8, 9, 10, 11, 12, 13], "custom": [28, 31], "databas": [14, 15, 16, 17, 18, 19, 20], "density_matrix": 10, "distanc": 22, "document": 0, "encod": 32, "gate": [29, 30, 31, 32, 33, 34, 35], "hamiltonian": [7, 15], "layer": 3, "loss": [21, 22, 23], "matrix": 16, "measur": 23, "multi_qubit_g": 33, "note": [6, 7, 9, 10, 11, 12], "oper": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "qinfo": 37, "quairkit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "random": 17, "represent": 18, "set": 19, "single_qubit_g": 34, "special": 36, "state": [8, 9, 10, 11, 12, 20], "state_vector": 11, "visual": [13, 35], "welcom": 0}})