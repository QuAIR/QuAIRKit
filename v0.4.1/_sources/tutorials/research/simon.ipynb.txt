{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "# Rediscovering Simon's algorithm with PQC\n",
    "**Table of contents**\n",
    "\n",
    "- [Introduction](#Introduction)\n",
    "  - [Simon's problem (classical version)](#Simon's-problem-(classical-version))\n",
    "  - [Simon's problem (quantum version)](#Simon's-problem-(quantum-version))\n",
    "- [Simon's algorithm](#Simon's-algorithm)\n",
    "  - [Implement Simon's algorithm with QuAIRKit](#Implement-Simon's-algorithm-with-QuAIRKit)\n",
    "  - [Begin experiment](#Begin-experiment)\n",
    "- [References](#References)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-05-08T02:07:45.937517Z",
     "start_time": "2025-05-08T02:07:43.399110100Z"
    }
   },
   "outputs": [],
   "source": [
    "from typing import Callable\n",
    "import numpy as np\n",
    "\n",
    "import torch\n",
    "import quairkit as qkit\n",
    "from quairkit import Circuit\n",
    "from quairkit.database import *\n",
    "from quairkit.loss import *\n",
    "from quairkit.qinfo import *\n",
    "\n",
    "import time"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Introduction\n",
    "Simon's algorithm is a quantum algorithm for obtaining the period of a vectorial Boolean function with polynomial time complexity, achieving exponential speedup over classical algorithms [1]. \n",
    "\n",
    "\n",
    "Although Simon's algorithm has few general applications, it inspired the discovery of Shor's algorithm. In fact, the two problems solved by these two algorithms are both special cases of the abelian hidden subgroup problem.\n",
    "Before presenting Simon's algorithm, let's first review Simon's problem."
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Simon's problem (classical version)\n",
    "\n",
    "Input: a function $f: \\{0, 1\\}^n \\to \\{0, 1\\}^n$ that satisfies for all $n$-bit string $x$ and $y$: $f(x) = f(y)$ if and only if $x = y$ or $x = y \\oplus s$ for some $n$-bit string $s$.\n",
    "\n",
    "Output: determine $s \\in \\{0, 1\\}^n$."
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Any classical algorithm solving this should require $\\Omega(2^{n/2})$ queries, while Simon's algorithm solves it in $\\mathcal{O}(n) $ quantum queries [2].\n",
    "\n",
    "Such function $f$ can be randomly generated via the following function."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-05-08T02:07:45.951728500Z",
     "start_time": "2025-05-08T02:07:45.937517Z"
    }
   },
   "outputs": [],
   "source": [
    "def simon_function(n: int, s: int) -> Callable[[int], int]:\n",
    "    r\"\"\"Generates a function f such that :math:`f(x) = f(y)` if and only if :math:`y = x` or :math:`y = x \\oplus s`.\n",
    "\n",
    "    Args:\n",
    "        n: the number of bits in the input and output strings.\n",
    "        s: an integer represented by an n-bit string representing the secret string in Simon's problem.\n",
    "\n",
    "    Returns:\n",
    "        A matrix f mapping integers to integers satisfying Simon's problem properties.\n",
    "    \"\"\"\n",
    "    # generate a random permutation of 0, 1, ..., 2^n-1\n",
    "    all_x = np.arange(2 ** n)\n",
    "    np.random.shuffle(all_x)\n",
    "    \n",
    "    mapping = {}\n",
    "    outputs_used = set()\n",
    "    \n",
    "    # generate a mapping, which implements function f\n",
    "    for x in all_x:\n",
    "        if x in mapping:\n",
    "            continue\n",
    "        \n",
    "        # Generate a random output not used before\n",
    "        while True:\n",
    "            fx = np.random.randint(2 ** n)\n",
    "            if fx not in outputs_used:\n",
    "                outputs_used.add(fx)\n",
    "                break\n",
    "        \n",
    "        # since f(x) = f(x \\oplus s)\n",
    "        mapping[x] = fx\n",
    "        mapping[x ^ s] = fx\n",
    "\n",
    "    # Define the function f using the mapping\n",
    "    def f(input_int: int) -> int:\n",
    "        return mapping[input_int]\n",
    "\n",
    "    return f"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Below is an example of a function $f$ for $n = 2$ and $s = 11$."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-05-08T02:07:45.995837300Z",
     "start_time": "2025-05-08T02:07:45.951728500Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " x | f(x)\n",
      "00 | 10\n",
      "01 | 11\n",
      "10 | 11\n",
      "11 | 10\n"
     ]
    }
   ],
   "source": [
    "n = 2\n",
    "s_str = '11'\n",
    "# get function f with n and s_str\n",
    "example_f = simon_function(n, int(s_str, 2))\n",
    "# print the value of f(x) for every x\n",
    "print(\" x | f(x)\")\n",
    "for x in range(2 ** n): \n",
    "    result = bin(example_f(x))[2:].zfill(n)\n",
    "    x = bin(x)[2:].zfill(n)\n",
    "    print(f\"{x} | {result}\")"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can find that $f(00) =  f(00 \\oplus 11)$, $f(01)=f(01\\oplus 11)$, etc."
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now, let's go over the quantum version of Simon's problem."
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Simon's problem (quantum version)\n",
    "\n",
    "Input: an access to unitary $U_f$ that implements the function $f$.\n",
    "\n",
    "Output: an $n$-bit string $y$ such that $y \\cdot s = 0$, where $\\cdot$ is the inner product over $\\mathbb{Z}_2$, i.e. the bitwise inner product of $y$ and $s$."
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now it's time to present the steps of Simon's algorithm."
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Simon's algorithm\n",
    "We begin to show how to find this hidden integer $s$.\n",
    "1. Initialize $2n$ qubits as two quantum registers of length $n$, simplified as $\\ket{0}^{\\otimes n}\\ket{0}^{\\otimes n}=\\ket{0}\\ket{0}$.\n",
    "\n",
    "2. Apply Hadamard gates to first register to get \n",
    "$$\n",
    "(H^{\\otimes n} \\otimes I) \\ket{0}\\ket{0} = \\frac{1}{2^{n/2}} \\sum_{x=0}^{2^n-1}\\ket{x}\\ket{0}.\\tag{1}\n",
    "$$\n",
    "\n",
    "3. Query the blackbox unitary $U_f$ to get\n",
    "$$\n",
    "U_f\\,\\frac{1}{2^{n/2}} \\sum_{x=0}^{2^n-1}\\ket{x}\\ket{0} = \\frac{1}{2^{n/2}} \\sum_{x=0}^{2^n-1}\\ket{x}\\ket{f(x)}.\\tag{2}\n",
    "$$\n",
    "\n",
    "4. Apply Hadamard gates to first register again, and the state becomes\n",
    "$$\n",
    "(H^{\\otimes n} \\otimes I)\\, \\frac{1}{2^{n/2}} \\sum_{x=0}^{2^n-1}\\ket{x}\\ket{f(x)}\n",
    "=\\frac{1}{2^n} \\sum_{y=0}^{2^n-1}\\sum_{x=0}^{2^n-1} (-1)^{x \\cdot y}\\ket{y} \\ket{f(x)}.\\tag{3}\n",
    "$$\n",
    "Here we consider the amplitude of $\\ket{y} \\ket{f(x)}$. Due to $f(x)=f(x\\oplus s)$, sum the only two terms that attribute to the amplitude of $\\ket{y} \\ket{f(x)}$ as \n",
    "$$\n",
    "\\frac{1}{2^n}\\Bigl( (-1)^{x\\cdot y} +(-1)^{(x\\oplus s)\\cdot y}\\Bigr).\\tag{4}\n",
    "$$\n",
    "With the distributive law as $(x\\oplus s)\\cdot y=x\\cdot y \\oplus s\\cdot y$, we get \n",
    "$$\n",
    "\\begin{aligned}\n",
    "\\frac{1}{2^n}\\Bigl( (-1)^{x\\cdot y} +(-1)^{(x\\oplus s)\\cdot y}\\Bigr)\n",
    "& = \\frac{1}{2^n}\\bigl( (-1)^{x\\cdot y} +(-1)^{x\\cdot y \\oplus s\\cdot y}\\bigr)\\\\\n",
    "& = \\frac{1}{2^n}\\bigl( (-1)^{x\\cdot y} +(-1)^{x\\cdot y} (-1)^{s\\cdot y}\\bigr)\\\\\n",
    "& = \\frac{1}{2^n}(-1)^{x\\cdot y} \\bigl( 1 + (-1)^{s\\cdot y} \\bigr).\n",
    "\\end{aligned}\n",
    "$$\n",
    "This shows that no outcome $y$ with $s\\cdot y=1$ is observable, whereas outcomes satisfying $s\\cdot y=0$ occur with probability $2^{2-2n}$.\n",
    "\n",
    "5. Repeat Step 1 to 4 to obtain a list of $y$ satisfying $s\\cdot y=0$, which can be used to get $s$ by solving a system of linear equations."
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Implement Simon's algorithm with QuAIRKit\n",
    "First, we should construct a $U_f$ for later usage. Here is an example that implements the oracle for this $f$:\n",
    "| $x$ | $f(x)$ |\n",
    "|------|---------|\n",
    "| $00$ | $00$|\n",
    "| $01$ | $01$|\n",
    "| $10$ | $00$|\n",
    "| $11$ | $01$|\n",
    "\n",
    "We can find $f(x)=f(x\\oplus 10)$.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-05-08T02:07:45.996844400Z",
     "start_time": "2025-05-08T02:07:45.968389900Z"
    }
   },
   "outputs": [],
   "source": [
    "def oracle_example() -> Circuit:\n",
    "    r\"\"\"generate this oracle with n = 2 and s = '10'.\n",
    "    \n",
    "    Returns:\n",
    "        the circuit for Simon's problem with n = 2 and s = '10'.\n",
    "    \n",
    "    \"\"\"\n",
    "    n = 2\n",
    "    qc = Circuit(2 * n)\n",
    "    qc.cx([0, 1])  # the effect of this oracle is exactly only a cnot gate.\n",
    "    return qc"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Then, we construct the Simon's circuit in Step 1 to Step 4."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-05-08T02:07:46.005917Z",
     "start_time": "2025-05-08T02:07:45.983826200Z"
    }
   },
   "outputs": [],
   "source": [
    "def simon_circuit(n: int, oracle: Circuit) -> Circuit:\n",
    "    r\"\"\" Simon's circuit for corresponding oracle.\n",
    "    \n",
    "    Args:\n",
    "        n: the number of qubits in the Simon's problem.\n",
    "        oracle: the oracle circuit implementing the Simon's problem.\n",
    "    \n",
    "    Returns:\n",
    "        A circuit implementing Simon's algorithm.\n",
    "    \n",
    "    \"\"\"\n",
    "    simon_cir = Circuit(2 * n)  # Step 1\n",
    "    simon_cir.h(list(range(n)))  # Step 2\n",
    "    simon_cir.extend(oracle)  # Step 3\n",
    "    simon_cir.h(list(range(n)))  # Step 4\n",
    "    return simon_cir"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can plot the circuit like this."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-05-08T02:07:50.946843300Z",
     "start_time": "2025-05-08T02:07:45.998916100Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "the diagram of the quantum circuit in this case:\n"
     ]
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAfEAAADjCAIAAAAaOboOAAAU2ElEQVR4nO3dX2xT5R/H8W470CrFaKBZUQIzAQIu7Z1ZAeMkmRiRBBUzMzRGYnYhKF6Y+O/CBS8IJJKII3JhNNEoBIJ/MICE1PAn+8OcxGSgXkigxAUmm8O4lfb0nK6/hPPzSYNjO9vO6dn59v26emiedj3t9/lw+vQ5TysKhUIAACBCpddPAADgGDIdAOQg0wFADjIdAOQg0wFADjIdAOQg0wFADjIdAOQg0wFADjIdAOQg0wFADjIdAOQg0wFADjIdAOQg0wFADjIdAOQg0wFADjIdAOQg0wFADs3rJ+ADFRUVAdH4TVoxZNcqhWoH5+kAIAeZDgBykOkAIAfz6WU6nSd74hXUatniPB0A5CDTAUAOMh0A5CDTAUAOMh0A5CDTAUAOMh0A5CDTAUAOMh0A5CDTAUAOMh0A5CDTAUAOMh0A5GBfxlIbHh4+evRoIBAI/kvTtEKhkMvlstmsruuGYcRisdraWqt/Pp8/dOiQYRiq/4wZMwKBgOqfy+VqamoSiYTXRwZpLl++3NHRoWlaMBgMhUIzZ87UNM00zVwup+t6Nps1TbOhoSESiVj9BwYGkslkZWVlKBRStZ3P51V/wzASicT999/v9ZGJVsB4nH2tTp8+HY1Gw+HwqG/HHXfcMXfu3JaWFtU/lUrdd999d91116j9g8HgnDlzXnjhhUkfFDUgibPv6Y4dOyKRSCgU+m/hVVRUhMPhaDT6/fffq/779++vrq6eNWvWqLV65513RiKRPXv2eHtQ4vEyeVZSQ0NDjY2N6sG3b98+NDQ0Rv9MJvPWW2+p/ps3bx4YGJj0XyfTRXLpPf3zzz9rampUNB8+fNgwjDH6X79+fdWqVSr9P/3002w2O+m/TqFOCHMvngmHw6ZpWu2ampo333xz7P6hUKiy8v/ff8ycOXP79u23O9kHnBWJRIaGhqx2Y2PjE088MXb/u+++W9d1q51IJDZu3Oj+c8T/8R2pZwqFwqlTp6z26tWr7dzl5MmTVmP58uUEOkrm/Pnzf/31l/1avXHjRnd3t/3+cBCZPi3GySOPPDJu/0wm89NPP9nvDzhFnUwEAoH6+vpx+3d2dhqGYbWp1RJj7sVP4ySXy1ltxokd6XT60KFDXV1dJ0+evHbt2qpVq9auXRu7yeun5tdaXbJkyb333jtuf/UBNBgMsiKrxMh0zzBOXLV3797nnnuu+JZ9NwUCgaampo8//vh2yzMwxiShzZMJ1T+RSIy6bAbuYe7FN+Pk9OnTVoNxMrZ0Ov3oo4/eEujF9u3bt2jRovb29tI+r3KZJNR1vaury35/OItM9804OXPmjP3+5ay5uTmZTI7dp6+v75lnnunv7y/VkyqjScKuri616IVaLT0y3R/j5Mcff8xms1abcTKGo0ePWhMs4+rr69uwYYP7z8j3mCT0FzLdG4wTN5im+dJLL9nvn0wmrX0acDtMpvsOme4BJtNd0tvb29fXN6G7qOWhcGSS0DCMzs5O+/0hYd3L0aNHx70ObXoyTVPTNGfHSSaT+eSTT8a9S0dHh3vjpKKiIlCuWm7y+ln4Y5Lw4sWL49Zqb2/vjRs3XKpVfxVqU1PT3r17S/93K27Z+qME5s2bN9GTqWmira1t5cqVU3+c1tbWLVu2WO358+eP2z+dTl+/ft1qnzhxwpGh4q/hgYkaHh52ZLHm+vXrv/76a2vST+2/OIbBwUEr04PB4N9//z31z5SmaVobkfpRT0+PBxdDFEouGo0G/Kmtrc2RV2D9+vXWA9bW1trpr04kg8FgJpNx5Dl4+kLCdcPDw1MvkpGRkblz51oPuHnzZjt3UV/419fXT/0JFAoFdT2qH/X09BRKzoP59IMHD/o01uvq6pydTLez4sU6N7caTKbDJkdO0n/55ZeBgQH7tZrNZh1fcevIbKcntmzZ4skVyx68XitXrrx69WrAP9Q0hSPlNYlx4vYVHGJO21Op1ER/b6G1tfWVV14JSOHslFrxZPrDDz88bv/Ozk5XV6aLKVRXse6l1CY6Tjo6OriCw6aampqJfgS0+VGpzGt12bJl1dXV9j9QsuLWQ2S6Z+Nk6dKldgJI9Wec2HH8+PHp/+nYFyYxSahqlUlCD5HpJcU4cVssFlNrisYWjUZ37tzp/jPyq4lOEmYyGbZ5mQ7IdM/Gic090xknE7Vz585xYz0ej/f09Pj3+7cSYC9onyLTS2oSXzoxTiZK07Rdu3b19PTcbmqrtbX17NmzdlZbl7Pi7SvmzZtnvz+ThN7iPKWkVN0vXryYbV5cFYvFLly4cPHixXPnzql9d9va2pYsWUKauzFJyDYv0wTn6aXDOCmxWbNmxWKx4s0XV65cSaD7dMUtbCLTp+9kOr8tAK+wZ7p/keml8+2336r2ihUrxu1//PhxtWe6nf6A47W6YMECO1sSfffdd1ajqqrKkcutMWnMp7uru7t7YGAgnU6fPXv2gw8+ULe3trYmEolwOLxw4cLa2lp1+7lz53p7e3Vdv3DhQvFKu88++2xwcDAcDldXVz/44IMlPw4IZ02epNPpwcHBY8eO/fDDD9bt/f39u3btmj9/fjgcjsVi6kugkZGR9vb2oaGhdDrd3d29e/du6/Z8Pv/+++8vXbp09uzZi27y7pjKlAf7Mvr3euuJvlb//PNPdXW1aZrBf82YMWNkZMS4Sdf1bDZbV1dX/MOYCxYsuHLlitU5FApZ/U3TtPrrun7PPfdcuXKlqqrKqYMqh0uuJ/0Ols+RHjt2bM2aNZqmhUIhq/yqqqry+bxhGLlcTtf1XC73xhtvbNu2zer/+++/L1u2rLKyUtW2pmn5fN40Tau/ruvr1q376quvPDyo8kSml2lJkekiiTxSkQflHubTAUAOMh0A5CDTAUAOMh0A5CDTAUAOMh0A5CDTAUAOMh0A5CDTAUAOMh0A5CDTAUAOMh0A5CDTAUAOMh0A5OA3MSa5Py0wnVGrZYvzdACQg0wHADmYexkfv64Cv6BWwXk6AMhBpgOAHGQ6AMhBpgOAHGQ6AMhBpgOAHGQ6AMhBpgOAHGQ6AMhBpgOAHGQ6AMhBpgOAHGQ6AMhBpgOAHGQ6AMhBpgOAHGQ6AMhBpgOAHGQ6AMhBpgOAHGQ6AMhBpgOAHGQ6AMhBpgOAHGQ6AMhBpgOAHGQ6AMhBpgOAHGQ6AMhBpgOAHGQ6AMhBpgOAHGQ6AMhBpgOAHGQ6AMhBpgOAHGQ6AMhBpgOAHGQ6AMhBpgOAHGQ6AMhBpgOAHGQ6AMhBpgOAHGQ6AMhBpgOAHGQ6AMhBpgOAHGQ6AMhBpgOAHGQ6AMhBpgOAHGQ6AMhBpgOAHGQ6AMihef0EfKCioiIgWqFQ8PopwBmya5VCtYPzdACQg0wHADmYeynTj36yP6SDWi1bnKcDgBxkOgDIQaYDgBxkOgDIQaYDgBxkOgDIQaYDgBxkOgDIQaYDgBxcRwqZUqlUR0fH4OBgR0eHuvG9995btGjRwoUL6+rqNI3ih0AVkq4hdvvSZKnXW0s6rlQq9fnnn+/Zs6evr2/snk1NTc8///zq1aslhbvsWpV0UO4h08u0pORleiqVeuedd/bt2zehe0Wj0YMHD65cuTIgguxalXRQ7iHTy7SkJGW6aZqvv/76hx9+OOlHiMfjyWQyEokEfE52rUo6KPeQ6aUuqeHh4aNHjwYCgeC/NE0rFAq5XC6bzeq6bhhGLBarra21+ufz+UOHDhmGofrPmDEjEAio/rlcrqamJpFITO6g/D5U+vv7N2zYkEwmi2+Mx+PNzc1r166tqam55R1Mp9OnTp364osv/ntG39bW5vcTdmdr9fLlyx0dHZqmBYPBUCg0c+ZMTdNM08zlcrquZ7NZ0zQbGhrU/4UDAwPJZLKysjIUCqnazufzqr9hGIlE4v777/fwoOQrYDzOvlanT5+ORqPhcHjUt+OOO+6YO3duS0uL6p9Kpe6777677rpr1P7BYHDOnDkvvPDCpA/K1zVw6dKlaDRafCzxeLynp+eWbqMe6fDw8NatW295Pbdu3VrwM2ff0x07dkQikVAo9N/Cq6ioCIfD0Wj0+++/V/33799fXV09a9asUWv1zjvvjEQie/bs8fagxONl8qykhoaGGhsb1YNv3759aGhojP6ZTOatt95S/Tdv3jwwMDDpvy4g069du3ZLoB85cmTUnmMc6aVLlxoaGoof5Msvvyz4lkvv6Z9//ml94rGi+fDhw4ZhjNH/+vXrq1atUun/6aefZrPZSf91vxdqifEyeVlSTz/9tPXINTU1dvq/8847Vv+ZM2eO/R+A+Ew3DKM40KPR6LVr127XeewjNQxjy5YtxS9IW1tbwZ9cek9HRkbmzJljPfKLL75o5y4rVqyw+i9fvnyKf93XhVp6XHPkmUKhcOrUKau9evVqO3c5efKk1Vi+fPntZm/KxOOPP65WK8bj8T/++GPS33BqmrZr167ieZhnnnmmv7/foWcqwfnz5//66y/7tXrjxo3u7m77/eEgMn1ajJNHHnlk3P6ZTOann36y31+w9vZ29aVoNBpNJpNTX2P+7rvvNjU1We2+vr7XXnttyk9TDnUyEQgE6uvrx+3f2dlpGIbVLvNaLT0y3U/jJJfLWe1yHiemaW7atEn98/jx406tQfz888/j8bjV3rdvXyqVcuRhJdXqkiVL7r333nH7qw+gwWBwoiuyMEVkumcYJ5Nz4MCBnp4eq71ly5ZYLObUI2ua9sUXX6h/rlu3zqlHFjNJaPNkQvVPJBKjLpuBe8h034yT06dPW40yHyc7duxQ7W3btjn74LFYTM3A9PT0cKo+iUlCXde7urrs94ezyHTfjJMzZ87Y7y9Vf3+/OknfunXr7ZZCT8Xbb7+t2ocPH3b88cVPEnZ1dem6brXLuVa9Qqb7Y5z8+OOP2WzWapfzONm/f79qP/XUU278iVgsplZJfvzxx278CX9hktBfyHRvME4mR22cG41GHZxJv8XLL79sNXp6esp8USOT6b5DpnuAyfRJU5u0qMsU3VD8CSCdTgfK2EQnCQ3D6OzstN8fjpOzc7RPx0kmk/nkk0/sn58yTixr165178Fnz56t2r/++qu6LL7MJwkvXrw4bq329vbeuHHDalOr5bIvY39/fzweH/cnC6Yhp16r1tZWdTH6/Pnzx+2fTqevX79utU+cOOHIUCnelxHyOFWr69ev//rrr61JPzvXAQwODlqZHgwG//77b0c+U/q0Vo8cObJmzRoP/nDptyNQl3X4jlPbgKxfv956wNraWjv9W1parP7BYDCTyTjyHDx9IeG64eHhqRfJyMjI3LlzrQfcvHmznbuoL/zr6+un/gSs7TMDvtXmxcZBHsynJ5PJW7bT8wtHNtcunky3s+LFOje3GmU+mQ77HFnl+csvvwwMDNiv1Ww26/iKWzeWq5bGkSNHPNmO34P59EgkcvXq1YB/OPvRbxLjxO0rOHx02q7eiy+//HLDhg0TvZfNI02lUup3Gzz7BD0NarV4Mv3hhx8et39nZ6erK9N9VKgeYt1LqU10nHR0dHAFx3+5ejXQ0NCQaj/wwAOBQLnX6rJly6qrq+1/oCzzFbfeItM9GydLly61Mwel+jNOAoGA+v0KFR9u+OabbwR89i/9JKGqVSYJPUSmlxTjZIrUvlp9fX3nzp1z6a989dVXViMejwv44enSTBJmMhm2eZkOyHTPxonNPdMZJ8WeffZZ1Vb/OzorlUqpLWXUCqUyxF7QPkWml9QkvnRinBSLRCJqwurVV1914yJP9QOB7m0p47vtK+bNm2e/P5OE3iLTS0rV/eLFi9nmZXJ27tw5atsRqVRKbT8Qj8fd21JG3iQh27xME2R66TBOHNHY2KhO1VtaWhzcY8s0zebmZvXPjz76KFCupuGKW9hEpk/fyXR+W2BUmqYVn57H43GnZmC2bdumfua0oaHBkwtGpgn2TPcvMr10vv32W9VesWLFuP2PHz+u9ky30798bNiwQS1q7Ovre/LJJ03TnOJj7t69W+3BwM7pqlYXLFhgZ0ui7777zmpUVVXV1dW5/OwwFvZldFd3d/fAwEA6nT579uwHH3ygbm9tbU0kEuFweOHChbW1ter2c+fO9fb26rp+4cKF4rPRzz77bHBwMBwOV1dXP/jggyU/jmln7969aie4ZDL5+OOP7927d9LrDt97773iQG9rayu3vRityZN0Oj04OHjs2LEffvjBur2/v3/Xrl3z588Ph8OxWEx9CTQyMtLe3j40NJROp7u7u3fv3m3dns/n33///aVLl86ePXvRTd4dU5nyYF9G35noleXKP//8U11dbZpm8F8zZswYGRkxbtJ1PZvN1tXVtbe3q7ssWLDgypUrVudQKGT1N03T6q/r+j333HPlypWqqiqnDsq/l1wXX8Fv/UpGZ2fnqFk8xjuYTqeffPJJNeVi/STeu+++GyizWj127NiaNWs0TQuFQlb5VVVV5fN5wzByuZyu67lc7o033lA/APv7778vW7assrJS1bamafl83jRNq7+u6+vWrVMr/T05qPJEppdpSQnI9EAg0N7e/tBDDxXf0tTUtG3btluSfdR30DTNAwcOPPfcc8U9fR3o4mtV0kG5h0wv05KSkem3246/qanp+eefr6+vt67sL34HTdP87bffvvnmmz179txyrwntCzY9ya5VSQflHjK9TEtKTKZb8yfNzc1qXXmxaDS6atWq4iXn6hrRW7odPHhQwEIX2bUq6aDcQ6aXaUlJynRLe3v7pk2bRo3sMUSj0Z07dzY2NmqahPUCsmtV0kG5h0wv05KSl+mW9vb2AwcOfPjhh+P2jMfjzc3NGzdulLTzouxalXRQ7iHTy7SkpGa6xTTNrq6un3/+2fpt7hMnTvT19TU0NERueuyxx9RUuzCya1XSQbmHTC/TkpKd6WVLdq1KOij3cB0pAMhBpgOAHGQ6AMhBpgOAHGQ6AMhBpgOAHGQ6AMhBpgOAHGQ6AMghYd8iT669BKYzarVscZ4OAHKQ6QAgB3t4AYAcnKcDgBxkOgDIQaYDgBxkOgDIQaYDgBxkOgDIQaYDgBxkOgDIQaYDgBxkOgDIQaYDgBxkOgDIQaYDgBxkOgDIQaYDgBxkOgDIQaYDgBxkOgDIQaYDgBxkOgAExPgfAVRCuTsj73wAAAAASUVORK5CYII=",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# plot this circuit\n",
    "print(\"the diagram of the quantum circuit in this case:\")\n",
    "cir = simon_circuit(2, oracle_example())\n",
    "cir.plot()"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Using PQC to rediscover Simon's algorithm\n",
    "Parameterized quantum circuits (PQC) are circuits with tunable parameters, like rotation angles. They are central to hybrid algorithms like QAOA.\n",
    "\n",
    "We begin by using PQC to rediscover Simon’s problem.\n",
    "\n",
    "Define $P^\\perp(s) = \\sum_{y: y \\cdot s = 0} \\ket{y}\\bra{y}$. We expect the measurement outcome of this circuit to be orthogonal to $s$. That is, applying the projector $I - P^\\perp(s)$ to the output state should output 0.\n",
    "Then the loss function is defined as\n",
    "$$\n",
    "\\begin{aligned}\n",
    "\\mathcal{L}(\\theta) &= \\textrm{Average probability of measurement outcome } \\in \\{y: y \\cdot s \\neq 0 \\} \\\\\n",
    "&= \\frac{1}{N} \\sum_{i=0}^{N - 1} \\left| \\left(I - P^\\perp(s_i)\\right) \\cdot C_\\theta(f_i) \\ket{0} \\right|^2\n",
    ", \n",
    "\\end{aligned}\n",
    "$$\n",
    "where $C_\\theta(f_i)$ is the output unitary of the parameterized comb $C_\\theta$ with input unitary $U_{f_i}$."
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We first randomly generate `list_f`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-05-08T02:07:50.961843100Z",
     "start_time": "2025-05-08T02:07:50.946843300Z"
    }
   },
   "outputs": [],
   "source": [
    "num_data = 1000  # number of data\n",
    "\n",
    "# Generate a batch of random secret strings and corresponding functions.\n",
    "dim = 2 ** n\n",
    "list_s = np.random.randint(dim, size=num_data)\n",
    "list_f = [simon_function(n, s) for s in list_s]"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Prepare the corresponding batch of unitaries, `list_Uf`, using the previously generated functions. Note that `Uf` can implement the unitary of a given function $f$."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-05-08T02:07:51.056478Z",
     "start_time": "2025-05-08T02:07:50.961843100Z"
    }
   },
   "outputs": [],
   "source": [
    "list_Uf = torch.stack([Uf(f, n) for f in list_f])"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The corresponding Simon’s circuit is constructed as follows. Note that a batch of unitaries is taken as input for training."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-05-08T02:07:51.090441100Z",
     "start_time": "2025-05-08T02:07:51.058443900Z"
    }
   },
   "outputs": [],
   "source": [
    "simon_cir = Circuit(2 * n)  # Step 1\n",
    "simon_cir.h(list(range(n)))  # Step 2\n",
    "simon_cir.oracle(list_Uf, list(range(2 * n)), latex_name=r'$U_f$')  # Step 3\n",
    "simon_cir.h(list(range(n)))  # Step 4"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To save memory for large $n$, rather than perform direct matrix multiplication, we use batched projection-valued measurement to compute the loss function. See the measurement tutorial in QuAIRKit for more usage details.\n",
    "\n",
    "In the following, these PVMs are constructed as measuring '0' gives $P^\\perp(s_i)$ and '1' for the others. Then the loss function is computed by the average probability of getting '1'.\n",
    "\n",
    "First, we construct the projector $P^\\perp(s)$ for a given $s$."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-05-08T02:07:51.111442Z",
     "start_time": "2025-05-08T02:07:51.088441800Z"
    }
   },
   "outputs": [],
   "source": [
    "def prep_proj(s: int) -> torch.Tensor:\n",
    "    r\"\"\"Generate P^\\perp_s for a given s.\n",
    "    \n",
    "    Args:\n",
    "        s: an integer representing an $n$-bit string.\n",
    "    \n",
    "    Returns:\n",
    "        the projection matrix P^\\perp(s).\n",
    "    \"\"\"\n",
    "    assert 0 <= s < dim\n",
    "    \n",
    "    D = torch.zeros(dim)  # initialize D as a zero vector\n",
    "    # iterate over all y in the range of dim\n",
    "    for y in range(dim):\n",
    "        dot_product = (y & s).bit_count() % 2\n",
    "        # if the product is 0, then the item in D is 1\n",
    "        if dot_product == 0:\n",
    "            D[y] = 1\n",
    "    return torch.diag(D)"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Then we generate the corresponding POVM."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-05-08T02:07:51.138450800Z",
     "start_time": "2025-05-08T02:07:51.106441900Z"
    }
   },
   "outputs": [],
   "source": [
    "prep = torch.stack([prep_proj(s) for s in list_s])\n",
    "# Generate a batch of POVMs.\n",
    "pvm = torch.stack([prep, torch.eye(dim) - prep]).permute([1, 0, 2, 3])"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now, we define the loss function with this POVM."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-05-08T02:07:51.171442500Z",
     "start_time": "2025-05-08T02:07:51.137440700Z"
    }
   },
   "outputs": [],
   "source": [
    "M = Measure(pvm)\n",
    "\n",
    "def loss_fcn(circuit: Circuit) -> torch.Tensor:\n",
    "    r\"\"\"Compute the loss function for the given circuit.\n",
    "\n",
    "    Args:\n",
    "        circuit: the quantum circuit to be evaluated.\n",
    "    \n",
    "    Returns:\n",
    "        the loss value for the given circuit.\n",
    "    \n",
    "    \"\"\"\n",
    "    output_state = circuit()\n",
    "    prob = M(output_state, system_idx=list(range(n)), desired_result='0')\n",
    "    # The loss is the probability of measuring |0> in the first n qubits.\n",
    "    return 1 - prob.mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We first verify that the loss function for the original circuit in Simon's algorithm is 0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-05-08T02:07:51.245923200Z",
     "start_time": "2025-05-08T02:07:51.169441800Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The loss of simon's circuit is tensor(5.9605e-08).\n"
     ]
    }
   ],
   "source": [
    "print(\"The loss of simon's circuit is \"+str(loss_fcn(simon_cir))+\".\")  # loss of simon's circuit"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Begin experiment"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-05-08T02:07:51.250924500Z",
     "start_time": "2025-05-08T02:07:51.202441200Z"
    }
   },
   "outputs": [],
   "source": [
    "LR = 0.1  # learning rate\n",
    "NUM_ITR = 100  # number of iterations"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The ansatz of PQC is selected as the universal two-qubit gate. We will show that these gates will be trained to have the same effect as the original circuit in Simon's algorithm."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-05-08T02:07:51.251926900Z",
     "start_time": "2025-05-08T02:07:51.217442700Z"
    }
   },
   "outputs": [],
   "source": [
    "# construct the circuit\n",
    "cir = Circuit(2 * n)  # Step 1\n",
    "cir.universal_two_qubits(list(range(n)))  # the ansatz, or to say Step 2\n",
    "cir.oracle(list_Uf, list(range(2 * n)), latex_name=r'U_f')  # oracle, or to say Step 3\n",
    "cir.universal_two_qubits(list(range(n)))  # the ansatz, or to say Step 4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-05-08T02:07:53.233680100Z",
     "start_time": "2025-05-08T02:07:51.251926900Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "iter: 0, loss: 0.40310508, lr: 1.00E-01, avg_time: 0.0238s\n",
      "iter: 20, loss: 0.03063846, lr: 1.00E-01, avg_time: 0.0165s\n",
      "iter: 40, loss: 0.00244975, lr: 1.00E-01, avg_time: 0.0165s\n",
      "iter: 60, loss: 0.00031096, lr: 1.00E-01, avg_time: 0.0163s\n",
      "iter: 80, loss: 0.00009525, lr: 1.00E-01, avg_time: 0.0167s\n",
      "iter: 99, loss: 0.00001043, lr: 1.00E-01, avg_time: 0.0162s\n"
     ]
    }
   ],
   "source": [
    "loss_list, time_list = [], []  # record loss\n",
    "\n",
    "opt = torch.optim.Adam(lr=LR, params=cir.parameters()) # cir is a Circuit type\n",
    "scheduler = torch.optim.lr_scheduler.ReduceLROnPlateau(opt, 'min', factor=0.5) # activate scheduler\n",
    "\n",
    "# training\n",
    "for itr in range(NUM_ITR):\n",
    "    start_time = time.time()\n",
    "    opt.zero_grad()\n",
    "\n",
    "    loss = loss_fcn(cir) # compute loss\n",
    "\n",
    "    loss.backward()  # backward propagation\n",
    "    opt.step()\n",
    "\n",
    "    # get loss\n",
    "    loss = loss.item()\n",
    "    scheduler.step(loss) # activate scheduler\n",
    "    \n",
    "    loss_list.append(loss)\n",
    "    time_list.append(time.time() - start_time)\n",
    "\n",
    "    # print loss\n",
    "    if itr % 20 == 0 or itr == NUM_ITR - 1:\n",
    "        print(f\"iter: {itr}, loss: {loss:.8f}, lr: {scheduler.get_last_lr()[0]:.2E}, avg_time: {np.mean(time_list):.4f}s\")\n",
    "        time_list = []"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "And we can see the circuit like this:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-05-08T02:07:54.598503Z",
     "start_time": "2025-05-08T02:07:53.234727Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "the diagram of the quantum circuit after trained:\n"
     ]
    },
    {
     "data": {
      "image/png": "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usZhasDS65zElzvSVXdXW1OOzn6el54sQJnVePHj3q+I+6Bvk00wd26NBBv5wSB3FbtWql36VgTsllWOvWrcWjffrpp3XtY7jkMuzRRx8V3zhu3Li69ikoKBCTUevotUqlGjFihCAIw4cPN+YT7bPkalTbtm0z8DhccHBwXQ802jqL3AYKhUKz3vH8+fON6Y4TPfroo9ovvfzyy88884xard68ebOmpSDOry+XyzMzM7V3fvfddw3HaZla1jS2EydOODk5yeXyWjsocnJyxGcz6ip8621xmJnJmJk8HfbcwZKYmKhJuZFfl0lnqv3AvxjXaEO081V7HoWxxRF8k+o8jToKY3N5gjGSkpIMP5O/cuVKtRSZeU0rKirEqEF/f//c3Ny6douPj/fz83v55Zcb9imadeEaMMhVWVnp4eEhvl0z5YcB9bZH9u3bFxQUVFcb/OzZs+IMoAMHDjT8nKf4iKPms27cuGHM6WivQBsbG2vMW8xPc73ZnZnRNZIMWDKzXmfZr7S8vFychM6Y2RDqov2JDT6IAY168KYnldOw7kteVlYmjl6Hh4frh4fm5eW9/fbbbm5u8+bNKysra/CniDOu1fsglDiVqb+//4gRIy5cuKDzUlZWlphUcVbhWmuf2k30mJiYej/u7t27O3bs2LRp05dffqndfzd58uQ//vhj27Zt+j94cRqPzZs3L1u2THtNJTc3t1dffXX16tVbt27dsWPH+fPn9T9u586d2rnAjh071EYTQ9/8/f1PnTqlvT05OVlcUODhhx+u9TspLi7WVMednZ11JtGsqakZN26ckRml/iQ3d+/e1XSgGOPo0aM6ySssLNSe9Ptf//qXkV/IlStXIiMjn3322YKCAu3tSqXy5ZdfFich+OWXX+p6u/a6VHXVbO7evStOhDN//vzq6mrtL038iJYtW+qfkea9O3fu3L59+7p16z766CPtGacHDBiwZMmS+Pj47du379y5s95flkKhEK/grl271GbQJEAtUenp6dpBXaKoqKhvvvmmAW1Fm6B9pqa+98aNGwkJCZs2bVq8eLH4HI8oLi5u1apVmzdvrmv2yuTkZM3al9oPvn/55ZcDBw7Un99OfMrngw8+0N5YXl7u7OxseI5A48uO/fv3Ozk5GZkLubm56WeV9ZYdFy9edHNz+/zzz3VOsLi4eNasWYIgDB482ECIg5lFm46PPvpIEIRBgwap7TJDWLlyZeP1VGoPcEZFRaltTYMvq0KhOHjw4LZt21atWqWZM0McUv3mm2/WrVuXkJBw584dAyMWgiB4e3trfiA5OTnt27fXr+eIs2l6eHjolH3GDI1oJgEy0GOisXHjRl9f32+//VZnRDkvL2/YsGHiCJn+aLExFSeLVBKWL1/u6OgYGBi4fPly/VfT0tJmzZrl7e1tzBgelQQjJSUl6c8yHhUVJdU+Skt1PYhhtc7Ozj/88INOCVhdXf3TTz+Fhob26dPHnEh6cYKueifpaeyftpltInGMJCYmpl27dps3b9Z5qbKyUpO1Dho0qNZY5Aa3ibQpFIqdO3du3br1l19+0W7s9OjR4/vvv9+yZcuOHTt0OvvqbRNVVlYOHz48NjY2NTVV56WVK1eK8TdPPfVUXRUYM9tE/fv31+zfr18/I7+HX375xdHRccGCBfrlxYkTJ8Q+RHd397omYNMegau1O9Wcep1Jq1ePHTvWyJ7f//mf/1GbQfOJahthZoLT0tJWrVq1du3aTZs2JSQk7Nu379ChQ/v27RMbR2vXrl21apX+pFZVVVV//fXXunXrtmzZsmvXrgMHDuzbt2/Hjh3x8fF//vmnkQMSZmqMK2VVV1/7/pdMydV4vXkaR44c8fT0lMlkOmMbBQUFYihAz54963p0wZyC1ZySy5w011tyPfLIIx06dMjIyNDZvmvXLm9vbxcXF52n1LRVVFR06NBh6tSpOo991tTULFq0SCaTtWrV6uLFiwZOrWEll47Dhw9v37599erV2hOGBQYGfvzxx/Hx8Tt27NCZIqXekktHSkrK9u3b169f/z//8z+aiyiXy1955ZW//vpr+/btZ8+e1XnL0aNHXV1dnZ2d9XuKPvjgA0EQOnfunJ2dbczZ2WfJ1dhKS0tffPFFneCM4ODgF1980bZm5mua2yA/P3/37t1btmz55ZdfxowZozlOly5dli1btnHjxj179tQaBlRVVRURESHurL0WyuHDh4ODg/V/AuJ0mCNGjGhAnJapZU1j+/rrr8VHgnXqSEqlUvwOH3jggbpaBMaMwpiZyZiTPG123sGis+6KMZUlk85Ue+DG5mLWzammSmkUxiZG8M2s8zTeKIzN5QlGUigUCxcu1I8QffHFFyX5KL7I/Gt6+fJlsXtq6NCh+g+epaSkPPjgg87OzosXLzYnneJHrFu3zsgexe3bt8fHxy9dunTo0KGac4yMjPzwww/XrVsndt/pt7OMbI+89dZbkZGRf//9t872s2fPihNY9u/f35h7ZsqUKZrPMmZGcPGjtW9O46O9zUmz4ezO/Oga6QUsmVmvs8hXqj/BgZOTkzkBctqf2OCDGNCoB296UjkNq7/kCoXiyy+/9PT0FJ+Y+fe///3DDz8sXLhw/PjxLi4u3bp1q2vmRVMjOfr372/Mzrdv337uuefc3d2HDx/+2WefbdiwYfPmzR988IGfn5/42JPh+dvfeecdHx+f7t27G67VieLj4x0dHd3d3b29vQMCAkJDQyMjI8PDw8PCwoKDg728vIKDg3XeEhMT4+3tHRgYGBoaGh4eHhEREfmPiIiI8PDwVq1aBQQEeHl56c+vKXr11Vd9fHy6du06evRoA5GLtfr99999fX2dnZ2feeaZ1atXb968+dVXX3Vzc/P09DQ8QfS6devCwsJCQkJWrFih89KFCxeMzygFQYiPj2/AyjUaOnGcolWrVoWGhgYFBc2ZM+ehhx4y/gvJz8+Pi4vz9/d/6aWX/vvf/27duvXLL78U21c9evQ4fPiwgfdevHixV69e3t7er7zyioHd7t69K04M1qtXr88//3zHjh0//fST2NU7bNiwuuYSE28tNze3li1bhoSEhIWF6dwn4g3m5+fn4uJy7do1w6d59uxZca1e7dCTBpBYCWFATk5OYmJienq6VENCLVKrmDRpklwud3Nz8/HxCQoKCv9HcHCwj4+Pm5ubg4ODj49PXcGOP/74o/i4TPfu3W/dupWdnf3OO+/07t1bfwz1zJkzYvJ07nNjlk8yvuyYPn268blQjx49GlZ2/PXXX56enhMmTPjuu+8SEhK2bNny7rvvhoSEODk5/ec//6lrRTlLFW3aJk+ebMx6E1LNEBqvp1KhUERFRWl2rncZHSvU4Mt68uRJuVzu5OTk4eHh7+8fGhoaERERGhrq7+/v6ekpPqhXVyRubm6uZjK877//vqSkZO/evVFRUbXG3IiT7OrXkcTuBsNDI2q1ukOHDoIg7Ny505iTunDhQqdOnbp27frvf/97zZo1GzZsePvtt/39/QVBmDp1qs68HcZXnCxSSVCr1ZcuXRLzrj59+rz55psrVqyIj4///PPPZ8+e7ezsPHfu3LqCcXVQSTBVenr6tm3bqCQYb8uWLW3bthWjNF555ZXvvvvu008/nTt3rq+vb0BAwFdffVXv89yG3bp1Sy6XOzg4GDlu3Ug/bTPbRKLy8vIvvvgiICCge/fub7311p9//rljx44lS5Z07dpVEAQfHx/9QCWLtIk0CgsLHRwcXF1dvby8/P39Q0JCIv4hnrWPj4+zs7NORIsxbSKlUvnuu++6uLg88sgjS5Ys2bZt288//ywGWwcHBxt+zNrMNtG5c+eio6M9PT3nz58fHh5u/Fdx6tSpiRMnenh4PPDAA999993WrVvXrFnz7LPPinNdjxs3zsCUb8XFxVOmTPHw8Bg/fnxd6003uF7XsmVL42+zeieHUKlUPj4+giAY0/UhpSLAzAR/+OGHAQEB2jFtGjKZzNPTMzg4WH+I8fz583VNP+Dm5ma4wmApjXGlrOrqa3+rUiq5Gqk3T9uJEyfErrDJkyf/8MMPO3fu/PTTT8PDw+Vy+RNPPGF4ChBzClZzSq4Gp7nekqu8vHzYsGGtWrV68803161bt2vXrmXLlk2aNEkQhOjo6HpbeampqeHh4dHR0Z9++umWLVt27tz59ddfi2vJPfDAA3UNX5lfcmnr2bOni4uLp6enn59fcHCw2PkcHh4eGhrasmVLNze3pUuXmlpyaXv55ZednJxatGjh6+sbFBQUFham6QwPCAho0aLFzJkz9d918eLFqKgod3f3999///r16yUlJcePH582bZr4zRg504zdllxNprS0NCkpKTExUcIhoebfBl988YVMJnNxcfHy8goMDBTrqCEhIX5+fi1atHB0dHRycqor2Oj48eNiDtmiRYsjR44UFRUtW7asXbt2+sutKhQKseKnU1uuqKgQH68yHKfVgLKmsW3cuLFly5bh4eG//fbbnTt38vLytm3bFh0dLZfLP/roIwPNHCNHYczMZBqcPG10sGivEG3M1J7Gn6n2pKQ2/TS+nY/C2MQIvvl1nkYahbHFPKFhlRAJh4RqWOSa5uXlzZ8/Xy6Xu7u7z5kz5+OPP166dOm//vWvPn36yGSyiRMnmj8+9dRTTwmC8NZbb9W7Z2FhobOzs5+fn/hL0Yl+Eduk/v7+7u7utUa2GNkeWbdunbe395gxYz755JPNmzevWrXqsccec3Z2dnV1feONN/QXWarVc889J375rq6uRi53nJ+fP3HixBYtWowdO7ZDhw71RmVYKs0GsjuLRNdILGDJzHqdRb5SbYsXLxYEYcqUKWorLgIEaZUvMp2vzEZpVrltjNOx4MHv3Lnz888/HzhwICMjQ6lUhoaG9ujRY9q0acOGDdM8nNRgVVVVrVq1Kioqun37thgzXq+MjIyVK1em/iMrK6tly5YdOnQYP378rFmzxPazrXv99dc7d+78xBNPmPSuvLy8ZcuWbd++/datW05OTpGRkePHj58zZ4748IetEwft/vjjD5PetXHjxjVr1qSkpBQVFQUFBUVHR0+dOnXcuHHGLzBdr127dq1evfr06dOFhYWBgYE9e/acOXOm/uxTjeSLL7544403Xn311S+//NJq8yI0C+2bvIkv65UrV1asWLFv374bN260bNly3Lhxb731ltjFr+2999778MMPe/Xqdfr0ae3t//nPfxYuXNi3b9/jx49btuxoVHl5eUuXLj158uSNGzeUSmWbNm2GDx/+2GOPGZ8Dm1+0VVdXBwcHl5WV3b59W+yPtsMMYdWqVXPnzhX/Dg4OvnbtWosWLcw/2ZdeemnJkiXi37Nnz161apVga5rrsiqVyrVr1+7YseP48ePV1dVdunR55ZVXNGtYaJSXl/v5+VVVVW3evFkcnRVVVVV5e3tXVVVt375dDLWsy6JFi958883nnntu6dKlxiSsrKxs+fLlmzdvFgMBW7VqNWTIkJkzZ/bo0UOwHHMqCadPn96yZcvlfxQXFwcHB/fv33/mzJnaEw4ZRiUBTVBJqKysXLZsWUJCwrVr10pKSoKCgjp06BAXFyd2q5mf1IkTJ27fvv2vv/564IEHrOen3WBlZWUrVqw4f/78lStX0tLSWrRoERERMXr06NmzZxtZmWlYm6ixnTx58rfffjt58uTdu3d9fX3vu+++SZMmTZ8+3SL3QL1KS0s7d+6ckZFh0rtOnDixZcuWK1eupKamFhcXBwYG9u7de/LkydoTRJmj2bssTp061adPH/2atuSLAEslODs7u0+fPpmZmeJc6evXrx85cqTh7q+ioqLff/9dDNtt06bNe++9N2LEiPDwcAt2PjTxlbKqqy/hkqsJevMUCsWqVas2btyYmpoqtqOHDRs2d+5ccZ77xi5YG1ZymZPmeu3cuXPFihXp6elZWVmBgYGdO3d+6KGHRo4cacyvtbq6+rfffktISLhx40ZBQUFERESvXr2efP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AAAAAAIB3EhgIAAAAAAAAAAAAAAAAAAEgHsaEAAAAAAAAAAAAAAAAAAADSQWwoAAAAAAAAAAAAAAAAAACAdBAbCgAAAAAAAAAAAAAAAAAAIB3EhgIAAAAAAAAAAAAAAAAAAEgHsaEAAAAAAAAAAAAAAAAAAADSQWwoAAAAAAAAAAAAAAAAAACAdBAbCgAAAAAAAAAAAAAAAAAAIB3EhgIAAAAAAAAAAAAAAAAAAEgHsaEAAAAAAAAAAAAAAAAAAADSQWwoAAAAAAAAAAAAAAAAAACAdBAbCgAAAAAAAAAAAAAAAAAAIB3EhgIAAAAAAAAAAAAAAAAAAEgHsaEAAAAAAAAAAAAAAAAAAADSQWwoAAAAAAAAAAAAAAAAAACAdBAbCgAAAAAAAAAAAAAAAAAAIB3EhgIAAAAAAAAAAAAAAAAAAEgHsaEAAAAAAAAAAAAAAAAAAADSQWwoAAAAAAAAAAAAAAAAAACAdBAbCgAAAAAAAAAAAAAAAAAAIB3EhgIAAAAAAAAAAAAAAAAAAEgHsaEAAAAAAAAAAAAAAAAAAADSQWwoAAAAAAAAAAAAAAAAAACAdBAbCgAAAAAAAAAAAAAAAAAAIB3EhgIAAAAAAAAAAAAAAAAAAEgHsaEAAAAAAAAAAAAAAAAAAADSQWwoAAAAAAAAAAAAAAAAAACAdBAbCgAAAAAAAAAAAAAAAAAAIB3EhgIAAAAAAAAAAAAAAAAAAEgHsaEAAAAAAAAAAAAAAAAAAADSQWwoAAAAAAAAAAAAAAAAAACAdBAbCgAAAAAAAAAAAAAAAAAAIB3EhgIAAAAAAAAAAAAAAAAAAEgHsaEAAAAAAAAAAAAAAAAAAADSQWwoAAAAAAAAAAAAAAAAAACAdBAbCgAAAAAAAAAAAAAAAAAAIB3EhgIAAAAAAAAAAAAAAAAAAEgHsaEAAAAAAAAAAAAAAAAAAADSQWwoAAAAAAAAAAAAAAAAAACAdBAbCgAAAAAAAAAAAAAAAAAAIB3EhgIAAAAAAAAAAAAAAAAAAEgHsaEAAAAAAAAAAAAAAAAAAADSQWwoAAAAAAAAAAAAAAAAAACAdBAbCgAAAAAAAAAAAAAAAAAAIB3EhgIAAAAAAAAAAAAAAAAAAEgHsaEAAAAAAAAAAAAAAAAAAADSQWwoAAAAAAAAAAAAAAAAAACAdBAbCgAAAAAAAAAAAAAAAAAAIB2OTf+Rubm5UVFR2dnZTf/RAAAAAAAAAFAXmUzW3EkAAAAAAAAAIClRUVG7d+8OCAiQ/ryho0aNIjAUAAAAAAAAsFqHDx9u7iQAAAAAAAAAgBQkJSWNGjWq6T9Xplarm/gjmTcUAAAAAAAAsGZN32fYvJguFAAAAAAAAIDE5g1ththQAAAAAAAAANYcImlvfYZ2e+IAAAAAAAAApKoZ1pQHAAAAAAAAAAAAAAAAAABAIyE2FAAAAAAAAAAAAAAAAAAAQDqIDQUAAAAAAAAAAAAAAAAAAJAOYkMBAAAAAAAAAAAAAAAAAACkg9hQAAAAAAAAAAAAAAAAAAAA6SA2FAAAAAAAAAAAAAAAAAAAQDqIDQUAAAAAAAAAAAAAAAAAAJAOYkMBAAAAAAAAAAAAAAAAAACkg9hQAAAAAAAAAAAAAAAAAAAA6SA2FAAAAAAAAAAAAAAAAAAAQDqIDQUAAAAAAAAAAAAAAAAAAJAOYkMBAAAAAAAAAAAAAAAAAACkg9hQAAAAAAAAAAAAAAAAAAAA6SA2FAAAAAAAAAAAAAAAAAAAQDqIDQUAAAAAAAAAAAAAAAAAAJAOYkMBAAAAAAAAAAAAAAAAAACkg9hQAAAAAAAAAAAAAAAAAAAA6SA2FAAAAAAAAAAAAAAAAAAAQDqIDQUAAAAAAAAAAAAAAAAAAJAOYkMBAAAAAAAAAAAAAAAAAACkg9hQAAAAAAAAAAAAAAAAAAAA6SA2FAAAAAAAAAAAAAAAAAAAQDqIDQUAAAAAAAAAAAAAAAAAAJAOYkMBAAAAAAAAAAAAAAAAAACkg9hQAAAAAAAAAAAAAAAAAAAA6SA2FAAAAAAAAAAAAAAAAAAAQDqIDQUAAAAAAAAAAAAAAAAAAJAOYkMBAAAAAAAAAAAAAAAAAACkg9hQAAAAAAAAAAAAAAAAAAAA6SA2FAAAAAAAAAAAAAAAAAAAQDqIDQUAAAAAAAAAAAAAAAAAAJAOYkMBAAAAAAAAAAAAAAAAAACkg9hQAAAAAAAAAAAAAAAAAAAA6XBs7gQAAAAAAAAAsC4ymay5kwAAAAAAAAAAaDjmDQUAAAAAAAAAAAAAAAAAAJAOYkMBAAAAAAAAAAAAAAAAAACkQ6ZWq5s7DQAAAAAAAAAAAAAAAAAAALAM5g0FAAAAAAAAAAAAAAAAAACQDmJDAQAAAAAAAAAAAAAAAAAApIPYUAAAAAAAAAAAAAAAAAAAAOkgNhQAAAAAAAAAAAAAAAAAAEA6iA0FAAAAAAAAAAAAAAAAAACQDmJDAQAAAAAAAAAAAAAAAAAApIPYUAAAAAAAAAAAAAAAAAAAAOkgNhQAAAAAAAAAAAAAAAAAAEA6iA0FAAAAAAAAAAAAAAAAAACQDmJDAQAAAAAAAAAAAAAAAAAApIPYUAAAAAAAAAAAAAAAAAAAAOkgNhQAAAAAAAAAAAAAAAAAAEA6iA0FAAAAAAAAAAAAAAAAAACQDmJDAQAAAAAAAAAAAAAAAAAApIPYUAAAAAAAAAAAAAAAAAAAAOkgNhQAAAAAAAAAAAAAAAAAAEA6iA0FAAAAAAAAAAAAAAAAAACQDmJDAQAAAAAAAAAAAAAAAAAApIPYUAAAAAAAAAAAAAAAAAAAAOkgNhQAAAAAAAAAAAAAAAAAAECQjP8PnGb+1+T2gg8AAAAASUVORK5CYII=",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "print(\"the diagram of the quantum circuit after trained:\")\n",
    "cir.plot(style=\"detailed\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "---"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## References\n",
    "\n",
    "[1] M. A. Shafique, A. Munir and I. Latif, \"Quantum Computing: Circuits, Algorithms, and Applications,\" in IEEE Access, vol. 12, pp. 22296-22314, 2024, doi: 10.1109/ACCESS.2024.3362955.\n",
    "\n",
    "[2] J. Eisert, M.M. Wolf. \"Quantum computing.\" arXiv preprint arXiv:quant-ph/0401019 (2004).\n",
    "\n",
    "[3] Peter Shor, [Lecture Note 18](https://math.mit.edu/~shor/435-LN/Lecture_18.pdf), 2022"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "*Table: A reference of notation conventions in this tutorial.*\n",
    "\n",
    "| Symbol        | Variant          | Description                               |\n",
    "|:---------------:|:------------------:|-------------------------------------------|\n",
    "|$f$| |boolean function|\n",
    "|$n$| |number of bits|\n",
    "|$s$|$x$, $y$|$n$-bit string|\n",
    "|$H$| |Hadamard gate|\n",
    "|$U$|$U_f$|unitary matrix|\n",
    "|$P^\\perp(s)$| |projector onto space orthogonal to $s$|\n",
    "|$\\theta$| |parameters of circuit|\n",
    "|$\\mathcal{L}(\\theta)$| |loss function w.r.t. $\\theta$|\n",
    "|$C_\\theta(f_i)$ | |output unitary of the parameterized comb $C_\\theta$ with input unitary $U_{f_i}$|\n",
    "|$I$| | identity matrix|"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-05-08T02:07:54.656762400Z",
     "start_time": "2025-05-08T02:07:54.598503Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "---------VERSION---------\n",
      "quairkit: 0.4.1\n",
      "torch: 2.8.0+cpu\n",
      "numpy: 2.2.6\n",
      "scipy: 1.15.3\n",
      "matplotlib: 3.10.5\n",
      "---------SYSTEM---------\n",
      "Python version: 3.10.18\n",
      "OS: Windows\n",
      "OS version: 10.0.26100\n",
      "---------DEVICE---------\n",
      "CPU: ARMv8 (64-bit) Family 8 Model 1 Revision 201, Qualcomm Technologies Inc\n"
     ]
    }
   ],
   "source": [
    "qkit.print_info()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "quair",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.18"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
