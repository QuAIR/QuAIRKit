Search.setIndex({"alltitles": {"Note": [[4, null], [4, null], [5, null], [5, null], [5, null], [5, null], [6, null], [8, null], [9, null], [12, null], [13, null], [14, null], [14, null], [25, null], [28, null], [29, null], [29, null], [29, null], [29, null], [32, null], [32, null], [39, null], [41, null], [41, null], [41, null]], "Warning": [[6, null], [41, null]], "Welcome to QuAIRKit\u2019s documentation!": [[0, null]], "quairkit": [[1, null]], "quairkit.ansatz": [[2, null]], "quairkit.ansatz.comb": [[3, null]], "quairkit.ansatz.container": [[4, null]], "quairkit.ansatz.layer": [[5, null]], "quairkit.circuit": [[6, null]], "quairkit.core": [[7, null]], "quairkit.core.base": [[8, null]], "quairkit.core.hamiltonian": [[9, null]], "quairkit.core.state": [[10, null]], "quairkit.core.state.backend": [[11, null]], "quairkit.core.state.backend.density_matrix": [[12, null]], "quairkit.core.state.backend.state_vector": [[13, null]], "quairkit.core.state.state": [[14, null]], "quairkit.core.visual": [[15, null]], "quairkit.database": [[16, null]], "quairkit.database.hamiltonian": [[17, null]], "quairkit.database.matrix": [[18, null]], "quairkit.database.random": [[19, null]], "quairkit.database.representation": [[20, null]], "quairkit.database.set": [[21, null]], "quairkit.database.state": [[22, null]], "quairkit.loss": [[23, null]], "quairkit.loss.distance": [[24, null]], "quairkit.loss.measure": [[25, null]], "quairkit.operator": [[26, null]], "quairkit.operator.channel": [[27, null]], "quairkit.operator.channel.base": [[28, null]], "quairkit.operator.channel.common": [[29, null]], "quairkit.operator.channel.custom": [[30, null]], "quairkit.operator.gate": [[31, null]], "quairkit.operator.gate.base": [[32, null]], "quairkit.operator.gate.custom": [[33, null]], "quairkit.operator.gate.multi_qubit_gate": [[34, null]], "quairkit.operator.gate.single_qubit_gate": [[35, null]], "quairkit.operator.gate.visual": [[36, null]], "quairkit.operator.special": [[37, null]], "quairkit.qinfo": [[38, null]], "quairkit.qinfo.check": [[39, null]], "quairkit.qinfo.linalg": [[40, null]], "quairkit.qinfo.qinfo": [[41, null]], "tutorials": [[42, null]], "tutorials.feature": [[43, null]], "tutorials.introduction": [[44, null]]}, "docurls": ["index.html", "quairkit.html", "quairkit.ansatz.html", "quairkit.ansatz.comb.html", "quairkit.ansatz.container.html", "quairkit.ansatz.layer.html", "quairkit.circuit.html", "quairkit.core.html", "quairkit.core.base.html", "quairkit.core.hamiltonian.html", "quairkit.core.state.html", "quairkit.core.state.backend.html", "quairkit.core.state.backend.density_matrix.html", "quairkit.core.state.backend.state_vector.html", "quairkit.core.state.state.html", "quairkit.core.visual.html", "quairkit.database.html", "quairkit.database.hamiltonian.html", "quairkit.database.matrix.html", "quairkit.database.random.html", "quairkit.database.representation.html", "quairkit.database.set.html", "quairkit.database.state.html", "quairkit.loss.html", "quairkit.loss.distance.html", "quairkit.loss.measure.html", "quairkit.operator.html", "quairkit.operator.channel.html", "quairkit.operator.channel.base.html", "quairkit.operator.channel.common.html", "quairkit.operator.channel.custom.html", "quairkit.operator.gate.html", "quairkit.operator.gate.base.html", "quairkit.operator.gate.custom.html", "quairkit.operator.gate.multi_qubit_gate.html", "quairkit.operator.gate.single_qubit_gate.html", "quairkit.operator.gate.visual.html", "quairkit.operator.special.html", "quairkit.qinfo.html", "quairkit.qinfo.check.html", "quairkit.qinfo.linalg.html", "quairkit.qinfo.qinfo.html", "tutorials.html", "tutorials.feature.html", "tutorials.introduction.html"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2}, "indexentries": {"abs_norm() (in module quairkit.qinfo.linalg)": [[40, "quairkit.qinfo.linalg.abs_norm", false]], "add_systems() (quairkit.ansatz.container.operatorlist method)": [[4, "quairkit.ansatz.container.OperatorList.add_systems", false]], "amplitude_damping() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.amplitude_damping", false]], "amplitude_damping_kraus() (in module quairkit.database.representation)": [[20, "quairkit.database.representation.amplitude_damping_kraus", false]], "amplitudedamping (class in quairkit.operator.channel.common)": [[29, "quairkit.operator.channel.common.AmplitudeDamping", false]], "append() (quairkit.ansatz.container.operatorlist method)": [[4, "quairkit.ansatz.container.OperatorList.append", false]], "backend (class in quairkit.core.base)": [[8, "quairkit.core.base.Backend", false]], "bell_basis() (in module quairkit.database.set)": [[21, "quairkit.database.set.bell_basis", false]], "bell_diagonal_state() (in module quairkit.database.state)": [[22, "quairkit.database.state.bell_diagonal_state", false]], "bell_state() (in module quairkit.database.state)": [[22, "quairkit.database.state.bell_state", false]], "bit_flip() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.bit_flip", false]], "bit_flip_kraus() (in module quairkit.database.representation)": [[20, "quairkit.database.representation.bit_flip_kraus", false]], "bit_phase_flip() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.bit_phase_flip", false]], "bit_phase_flip_kraus() (in module quairkit.database.representation)": [[20, "quairkit.database.representation.bit_phase_flip_kraus", false]], "bitflip (class in quairkit.operator.channel.common)": [[29, "quairkit.operator.channel.common.BitFlip", false]], "bitphaseflip (class in quairkit.operator.channel.common)": [[29, "quairkit.operator.channel.common.BitPhaseFlip", false]], "block_enc_herm() (in module quairkit.qinfo.linalg)": [[40, "quairkit.qinfo.linalg.block_enc_herm", false]], "ccx (class in quairkit.operator.gate.multi_qubit_gate)": [[34, "quairkit.operator.gate.multi_qubit_gate.CCX", false]], "ccx() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.ccx", false]], "channel (class in quairkit.operator.channel.base)": [[28, "quairkit.operator.channel.base.Channel", false]], "channel_repr_convert() (in module quairkit.qinfo.qinfo)": [[41, "quairkit.qinfo.qinfo.channel_repr_convert", false]], "choi_channel() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.choi_channel", false]], "choi_repr (quairkit.operator.channel.base.channel property)": [[28, "quairkit.operator.channel.base.Channel.choi_repr", false]], "choirepr (class in quairkit.operator.channel.custom)": [[30, "quairkit.operator.channel.custom.ChoiRepr", false]], "circuit (class in quairkit.circuit)": [[6, "quairkit.circuit.Circuit", false]], "cnot (class in quairkit.operator.gate.multi_qubit_gate)": [[34, "quairkit.operator.gate.multi_qubit_gate.CNOT", false]], "cnot() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.cnot", false]], "cnot() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.cnot", false]], "cnot_gate() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.cnot_gate", false]], "coefficients (quairkit.core.hamiltonian.hamiltonian property)": [[9, "quairkit.core.hamiltonian.Hamiltonian.coefficients", false]], "collapse (class in quairkit.operator.special)": [[37, "quairkit.operator.special.Collapse", false]], "completely_mixed_computational() (in module quairkit.database.state)": [[22, "quairkit.database.state.completely_mixed_computational", false]], "complex_block_layer() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.complex_block_layer", false]], "complex_entangled_layer() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.complex_entangled_layer", false]], "complexblocklayer (class in quairkit.ansatz.layer)": [[5, "quairkit.ansatz.layer.ComplexBlockLayer", false]], "complexentangledlayer (class in quairkit.ansatz.layer)": [[5, "quairkit.ansatz.layer.ComplexEntangledLayer", false]], "computational_state() (in module quairkit.database.state)": [[22, "quairkit.database.state.computational_state", false]], "construct_h_matrix() (quairkit.core.hamiltonian.hamiltonian method)": [[9, "quairkit.core.hamiltonian.Hamiltonian.construct_h_matrix", false]], "control_oracle() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.control_oracle", false]], "control_permute() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.control_permute", false]], "controloracle (class in quairkit.operator.gate.custom)": [[33, "quairkit.operator.gate.custom.ControlOracle", false]], "controlparamoracle (class in quairkit.operator.gate.custom)": [[33, "quairkit.operator.gate.custom.ControlParamOracle", false]], "cp (class in quairkit.operator.gate.multi_qubit_gate)": [[34, "quairkit.operator.gate.multi_qubit_gate.CP", false]], "cp() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.cp", false]], "cp() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.cp", false]], "cp_gate() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.cp_gate", false]], "create_choi_repr() (in module quairkit.qinfo.qinfo)": [[41, "quairkit.qinfo.qinfo.create_choi_repr", false]], "create_matrix() (in module quairkit.qinfo.linalg)": [[40, "quairkit.qinfo.linalg.create_matrix", false]], "crx (class in quairkit.operator.gate.multi_qubit_gate)": [[34, "quairkit.operator.gate.multi_qubit_gate.CRX", false]], "crx() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.crx", false]], "crx() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.crx", false]], "crx_gate() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.crx_gate", false]], "cry (class in quairkit.operator.gate.multi_qubit_gate)": [[34, "quairkit.operator.gate.multi_qubit_gate.CRY", false]], "cry() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.cry", false]], "cry() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.cry", false]], "cry_gate() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.cry_gate", false]], "crz (class in quairkit.operator.gate.multi_qubit_gate)": [[34, "quairkit.operator.gate.multi_qubit_gate.CRZ", false]], "crz() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.crz", false]], "crz() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.crz", false]], "crz_gate() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.crz_gate", false]], "cswap (class in quairkit.operator.gate.multi_qubit_gate)": [[34, "quairkit.operator.gate.multi_qubit_gate.CSWAP", false]], "cswap() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.cswap", false]], "cswap() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.cswap", false]], "cswap_gate() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.cswap_gate", false]], "cu (class in quairkit.operator.gate.multi_qubit_gate)": [[34, "quairkit.operator.gate.multi_qubit_gate.CU", false]], "cu() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.cu", false]], "cu() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.cu", false]], "cu_gate() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.cu_gate", false]], "cx (in module quairkit.operator.gate.multi_qubit_gate)": [[34, "quairkit.operator.gate.multi_qubit_gate.CX", false]], "cy (class in quairkit.operator.gate.multi_qubit_gate)": [[34, "quairkit.operator.gate.multi_qubit_gate.CY", false]], "cy() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.cy", false]], "cy() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.cy", false]], "cy_gate() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.cy_gate", false]], "cz (class in quairkit.operator.gate.multi_qubit_gate)": [[34, "quairkit.operator.gate.multi_qubit_gate.CZ", false]], "cz() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.cz", false]], "cz() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.cz", false]], "cz_gate() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.cz_gate", false]], "dagger() (in module quairkit.qinfo.linalg)": [[40, "quairkit.qinfo.linalg.dagger", false]], "decomp_1qubit() (in module quairkit.qinfo.qinfo)": [[41, "quairkit.qinfo.qinfo.decomp_1qubit", false]], "decomp_ctrl_1qubit() (in module quairkit.qinfo.qinfo)": [[41, "quairkit.qinfo.qinfo.decomp_ctrl_1qubit", false]], "decompose_pauli_words() (quairkit.core.hamiltonian.hamiltonian method)": [[9, "quairkit.core.hamiltonian.Hamiltonian.decompose_pauli_words", false]], "decompose_with_sites() (quairkit.core.hamiltonian.hamiltonian method)": [[9, "quairkit.core.hamiltonian.Hamiltonian.decompose_with_sites", false]], "depolarizing (class in quairkit.operator.channel.common)": [[29, "quairkit.operator.channel.common.Depolarizing", false]], "depolarizing() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.depolarizing", false]], "depolarizing_kraus() (in module quairkit.database.representation)": [[20, "quairkit.database.representation.depolarizing_kraus", false]], "depth (quairkit.ansatz.container.operatorlist property)": [[4, "quairkit.ansatz.container.OperatorList.depth", false]], "diamond_norm() (in module quairkit.qinfo.qinfo)": [[41, "quairkit.qinfo.qinfo.diamond_norm", false]], "dim (quairkit.operator.channel.base.channel property)": [[28, "quairkit.operator.channel.base.Channel.dim", false]], "direct_sum() (in module quairkit.qinfo.linalg)": [[40, "quairkit.qinfo.linalg.direct_sum", false]], "display_in_circuit() (quairkit.operator.gate.base.gate method)": [[32, "quairkit.operator.gate.base.Gate.display_in_circuit", false]], "display_in_circuit() (quairkit.operator.gate.base.paramgate method)": [[32, "quairkit.operator.gate.base.ParamGate.display_in_circuit", false]], "equal_dim (quairkit.ansatz.container.operatorlist property)": [[4, "quairkit.ansatz.container.OperatorList.equal_dim", false]], "expecval (class in quairkit.loss.measure)": [[25, "quairkit.loss.measure.ExpecVal", false]], "extend() (quairkit.ansatz.container.operatorlist method)": [[4, "quairkit.ansatz.container.OperatorList.extend", false]], "eye() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.eye", false]], "eye_gate() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.eye_gate", false]], "forward() (quairkit.ansatz.container.operatorlist method)": [[4, "quairkit.ansatz.container.OperatorList.forward", false]], "forward() (quairkit.loss.distance.statefidelity method)": [[24, "quairkit.loss.distance.StateFidelity.forward", false]], "forward() (quairkit.loss.distance.tracedistance method)": [[24, "quairkit.loss.distance.TraceDistance.forward", false]], "forward() (quairkit.loss.measure.expecval method)": [[25, "quairkit.loss.measure.ExpecVal.forward", false]], "forward() (quairkit.loss.measure.measure method)": [[25, "quairkit.loss.measure.Measure.forward", false]], "forward() (quairkit.operator.special.collapse method)": [[37, "quairkit.operator.special.Collapse.forward", false]], "forward() (quairkit.operator.special.onewaylocc method)": [[37, "quairkit.operator.special.OneWayLOCC.forward", false]], "forward() (quairkit.operator.special.quasioperation method)": [[37, "quairkit.operator.special.QuasiOperation.forward", false]], "forward() (quairkit.operator.special.resetstate method)": [[37, "quairkit.operator.special.ResetState.forward", false]], "gate (class in quairkit.operator.gate.base)": [[32, "quairkit.operator.gate.base.Gate", false]], "gate_fidelity() (in module quairkit.qinfo.qinfo)": [[41, "quairkit.qinfo.qinfo.gate_fidelity", false]], "gell_mann() (in module quairkit.database.set)": [[21, "quairkit.database.set.gell_mann", false]], "general_state_fidelity() (in module quairkit.qinfo.qinfo)": [[41, "quairkit.qinfo.qinfo.general_state_fidelity", false]], "generalized_amplitude_damping() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.generalized_amplitude_damping", false]], "generalized_amplitude_damping_kraus() (in module quairkit.database.representation)": [[20, "quairkit.database.representation.generalized_amplitude_damping_kraus", false]], "generalized_depolarizing() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.generalized_depolarizing", false]], "generalized_depolarizing_kraus() (in module quairkit.database.representation)": [[20, "quairkit.database.representation.generalized_depolarizing_kraus", false]], "generalizedamplitudedamping (class in quairkit.operator.channel.common)": [[29, "quairkit.operator.channel.common.GeneralizedAmplitudeDamping", false]], "generalizeddepolarizing (class in quairkit.operator.channel.common)": [[29, "quairkit.operator.channel.common.GeneralizedDepolarizing", false]], "get_backend() (in module quairkit.core.base)": [[8, "quairkit.core.base.get_backend", false]], "get_circuit_plot_param() (in module quairkit.operator.gate.visual)": [[36, "quairkit.operator.gate.visual.get_circuit_plot_param", false]], "get_device() (in module quairkit.core.base)": [[8, "quairkit.core.base.get_device", false]], "get_dtype() (in module quairkit.core.base)": [[8, "quairkit.core.base.get_dtype", false]], "get_float_dtype() (in module quairkit.core.base)": [[8, "quairkit.core.base.get_float_dtype", false]], "get_latex_name() (quairkit.ansatz.container.layer method)": [[4, "quairkit.ansatz.container.Layer.get_latex_name", false]], "get_seed() (in module quairkit.core.base)": [[8, "quairkit.core.base.get_seed", false]], "ghz_state() (in module quairkit.database.state)": [[22, "quairkit.database.state.ghz_state", false]], "grad (quairkit.ansatz.container.operatorlist property)": [[4, "quairkit.ansatz.container.OperatorList.grad", false]], "gradient() (in module quairkit.qinfo.linalg)": [[40, "quairkit.qinfo.linalg.gradient", false]], "grover_matrix() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.grover_matrix", false]], "h (class in quairkit.operator.gate.single_qubit_gate)": [[35, "quairkit.operator.gate.single_qubit_gate.H", false]], "h() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.h", false]], "h() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.h", false]], "h_gate() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.h_gate", false]], "haar_density_operator() (in module quairkit.database.random)": [[19, "quairkit.database.random.haar_density_operator", false]], "haar_orthogonal() (in module quairkit.database.random)": [[19, "quairkit.database.random.haar_orthogonal", false]], "haar_state_vector() (in module quairkit.database.random)": [[19, "quairkit.database.random.haar_state_vector", false]], "haar_unitary() (in module quairkit.database.random)": [[19, "quairkit.database.random.haar_unitary", false]], "hamiltonian (class in quairkit.core.hamiltonian)": [[9, "quairkit.core.hamiltonian.Hamiltonian", false]], "heisenberg_hamiltonian() (in module quairkit.database.hamiltonian)": [[17, "quairkit.database.hamiltonian.heisenberg_hamiltonian", false]], "heisenberg_weyl() (in module quairkit.database.set)": [[21, "quairkit.database.set.heisenberg_weyl", false]], "herm_transform() (in module quairkit.qinfo.linalg)": [[40, "quairkit.qinfo.linalg.herm_transform", false]], "hessian() (in module quairkit.qinfo.linalg)": [[40, "quairkit.qinfo.linalg.hessian", false]], "image_to_density_matrix() (in module quairkit.core.state.state)": [[14, "quairkit.core.state.state.image_to_density_matrix", false]], "info (quairkit.operator.channel.base.channel property)": [[28, "quairkit.operator.channel.base.Channel.info", false]], "info (quairkit.operator.gate.base.paramgate property)": [[32, "quairkit.operator.gate.base.ParamGate.info", false]], "info (quairkit.operator.gate.custom.oracle property)": [[33, "quairkit.operator.gate.custom.Oracle.info", false]], "info (quairkit.operator.special.collapse property)": [[37, "quairkit.operator.special.Collapse.info", false]], "info (quairkit.operator.special.onewaylocc property)": [[37, "quairkit.operator.special.OneWayLOCC.info", false]], "is_choi() (in module quairkit.qinfo.check)": [[39, "quairkit.qinfo.check.is_choi", false]], "is_density_matrix() (in module quairkit.qinfo.check)": [[39, "quairkit.qinfo.check.is_density_matrix", false]], "is_hermitian() (in module quairkit.qinfo.check)": [[39, "quairkit.qinfo.check.is_hermitian", false]], "is_linear() (in module quairkit.qinfo.check)": [[39, "quairkit.qinfo.check.is_linear", false]], "is_positive() (in module quairkit.qinfo.check)": [[39, "quairkit.qinfo.check.is_positive", false]], "is_povm() (in module quairkit.qinfo.check)": [[39, "quairkit.qinfo.check.is_povm", false]], "is_ppt() (in module quairkit.qinfo.check)": [[39, "quairkit.qinfo.check.is_ppt", false]], "is_projector() (in module quairkit.qinfo.check)": [[39, "quairkit.qinfo.check.is_projector", false]], "is_pvm() (in module quairkit.qinfo.check)": [[39, "quairkit.qinfo.check.is_pvm", false]], "is_state_vector() (in module quairkit.qinfo.check)": [[39, "quairkit.qinfo.check.is_state_vector", false]], "is_unitary() (in module quairkit.qinfo.check)": [[39, "quairkit.qinfo.check.is_unitary", false]], "ising_hamiltonian() (in module quairkit.database.hamiltonian)": [[17, "quairkit.database.hamiltonian.ising_hamiltonian", false]], "isotropic_state() (in module quairkit.database.state)": [[22, "quairkit.database.state.isotropic_state", false]], "kraus_channel() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.kraus_channel", false]], "kraus_repr (quairkit.operator.channel.base.channel property)": [[28, "quairkit.operator.channel.base.Channel.kraus_repr", false]], "krausrepr (class in quairkit.operator.channel.custom)": [[30, "quairkit.operator.channel.custom.KrausRepr", false]], "kron_power() (in module quairkit.qinfo.linalg)": [[40, "quairkit.qinfo.linalg.kron_power", false]], "layer (class in quairkit.ansatz.container)": [[4, "quairkit.ansatz.container.Layer", false]], "linear_entangled_layer() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.linear_entangled_layer", false]], "linearentangledlayer (class in quairkit.ansatz.layer)": [[5, "quairkit.ansatz.layer.LinearEntangledLayer", false]], "link() (in module quairkit.qinfo.qinfo)": [[41, "quairkit.qinfo.qinfo.link", false]], "locc() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.locc", false]], "logarithmic_negativity() (in module quairkit.qinfo.qinfo)": [[41, "quairkit.qinfo.qinfo.logarithmic_negativity", false]], "logm() (in module quairkit.qinfo.linalg)": [[40, "quairkit.qinfo.linalg.logm", false]], "mana() (in module quairkit.qinfo.qinfo)": [[41, "quairkit.qinfo.qinfo.mana", false]], "matrix (quairkit.ansatz.container.operatorlist property)": [[4, "quairkit.ansatz.container.OperatorList.matrix", false]], "matrix (quairkit.core.hamiltonian.hamiltonian property)": [[9, "quairkit.core.hamiltonian.Hamiltonian.matrix", false]], "matrix (quairkit.operator.gate.base.gate property)": [[32, "quairkit.operator.gate.base.Gate.matrix", false]], "measure (class in quairkit.loss.measure)": [[25, "quairkit.loss.measure.Measure", false]], "measure() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.measure", false]], "mixedstate (class in quairkit.core.state.backend.density_matrix)": [[12, "quairkit.core.state.backend.density_matrix.MixedState", false]], "module": [[4, "module-quairkit.ansatz.container", false], [5, "module-quairkit.ansatz.layer", false], [6, "module-quairkit.circuit", false], [8, "module-quairkit.core.base", false], [9, "module-quairkit.core.hamiltonian", false], [12, "module-quairkit.core.state.backend.density_matrix", false], [13, "module-quairkit.core.state.backend.state_vector", false], [14, "module-quairkit.core.state.state", false], [17, "module-quairkit.database.hamiltonian", false], [18, "module-quairkit.database.matrix", false], [19, "module-quairkit.database.random", false], [20, "module-quairkit.database.representation", false], [21, "module-quairkit.database.set", false], [22, "module-quairkit.database.state", false], [24, "module-quairkit.loss.distance", false], [25, "module-quairkit.loss.measure", false], [28, "module-quairkit.operator.channel.base", false], [29, "module-quairkit.operator.channel.common", false], [30, "module-quairkit.operator.channel.custom", false], [32, "module-quairkit.operator.gate.base", false], [33, "module-quairkit.operator.gate.custom", false], [34, "module-quairkit.operator.gate.multi_qubit_gate", false], [35, "module-quairkit.operator.gate.single_qubit_gate", false], [36, "module-quairkit.operator.gate.visual", false], [37, "module-quairkit.operator.special", false], [39, "module-quairkit.qinfo.check", false], [40, "module-quairkit.qinfo.linalg", false], [41, "module-quairkit.qinfo.qinfo", false]], "ms (class in quairkit.operator.gate.multi_qubit_gate)": [[34, "quairkit.operator.gate.multi_qubit_gate.MS", false]], "ms() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.ms", false]], "ms() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.ms", false]], "ms_gate() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.ms_gate", false]], "mutual_information() (in module quairkit.qinfo.qinfo)": [[41, "quairkit.qinfo.qinfo.mutual_information", false]], "n_qubits (quairkit.core.hamiltonian.hamiltonian property)": [[9, "quairkit.core.hamiltonian.Hamiltonian.n_qubits", false]], "n_terms (quairkit.core.hamiltonian.hamiltonian property)": [[9, "quairkit.core.hamiltonian.Hamiltonian.n_terms", false]], "negativity() (in module quairkit.qinfo.qinfo)": [[41, "quairkit.qinfo.qinfo.negativity", false]], "nkron() (in module quairkit.qinfo.linalg)": [[40, "quairkit.qinfo.linalg.NKron", false], [40, "quairkit.qinfo.linalg.nkron", false]], "num_qubits (quairkit.ansatz.container.operatorlist property)": [[4, "quairkit.ansatz.container.OperatorList.num_qubits", false]], "num_qutrits (quairkit.ansatz.container.operatorlist property)": [[4, "quairkit.ansatz.container.OperatorList.num_qutrits", false]], "num_systems (quairkit.ansatz.container.operatorlist property)": [[4, "quairkit.ansatz.container.OperatorList.num_systems", false]], "of() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.Of", false]], "of_gate() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.Of_gate", false]], "one_state() (in module quairkit.database.state)": [[22, "quairkit.database.state.one_state", false]], "onewaylocc (class in quairkit.operator.special)": [[37, "quairkit.operator.special.OneWayLOCC", false]], "operator_history (quairkit.ansatz.container.operatorlist property)": [[4, "quairkit.ansatz.container.OperatorList.operator_history", false]], "operatorlist (class in quairkit.ansatz.container)": [[4, "quairkit.ansatz.container.OperatorList", false]], "operators() (quairkit.ansatz.container.operatorlist method)": [[4, "quairkit.ansatz.container.OperatorList.operators", false]], "oracle (class in quairkit.operator.gate.custom)": [[33, "quairkit.operator.gate.custom.Oracle", false]], "oracle() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.oracle", false]], "p (class in quairkit.operator.gate.single_qubit_gate)": [[35, "quairkit.operator.gate.single_qubit_gate.P", false]], "p() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.p", false]], "p() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.p", false]], "p_gate() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.p_gate", false]], "p_norm() (in module quairkit.qinfo.linalg)": [[40, "quairkit.qinfo.linalg.p_norm", false]], "param (quairkit.ansatz.container.operatorlist property)": [[4, "quairkit.ansatz.container.OperatorList.param", false]], "param_locc() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.param_locc", false]], "param_oracle() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.param_oracle", false]], "paramgate (class in quairkit.operator.gate.base)": [[32, "quairkit.operator.gate.base.ParamGate", false]], "paramoracle (class in quairkit.operator.gate.custom)": [[33, "quairkit.operator.gate.custom.ParamOracle", false]], "partial_trace() (in module quairkit.qinfo.linalg)": [[40, "quairkit.qinfo.linalg.partial_trace", false]], "partial_trace_discontiguous() (in module quairkit.qinfo.linalg)": [[40, "quairkit.qinfo.linalg.partial_trace_discontiguous", false]], "partial_transpose() (in module quairkit.qinfo.linalg)": [[40, "quairkit.qinfo.linalg.partial_transpose", false]], "pauli_basis() (in module quairkit.database.set)": [[21, "quairkit.database.set.pauli_basis", false]], "pauli_channel() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.pauli_channel", false]], "pauli_decomposition() (in module quairkit.qinfo.linalg)": [[40, "quairkit.qinfo.linalg.pauli_decomposition", false]], "pauli_group() (in module quairkit.database.set)": [[21, "quairkit.database.set.pauli_group", false]], "pauli_kraus() (in module quairkit.database.representation)": [[20, "quairkit.database.representation.pauli_kraus", false]], "pauli_str (quairkit.core.hamiltonian.hamiltonian property)": [[9, "quairkit.core.hamiltonian.Hamiltonian.pauli_str", false]], "pauli_str_basis() (in module quairkit.database.set)": [[21, "quairkit.database.set.pauli_str_basis", false]], "pauli_str_convertor() (in module quairkit.qinfo.qinfo)": [[41, "quairkit.qinfo.qinfo.pauli_str_convertor", false]], "pauli_str_povm() (in module quairkit.database.set)": [[21, "quairkit.database.set.pauli_str_povm", false]], "pauli_words (quairkit.core.hamiltonian.hamiltonian property)": [[9, "quairkit.core.hamiltonian.Hamiltonian.pauli_words", false]], "pauli_words_matrix (quairkit.core.hamiltonian.hamiltonian property)": [[9, "quairkit.core.hamiltonian.Hamiltonian.pauli_words_matrix", false]], "pauli_words_r (quairkit.core.hamiltonian.hamiltonian property)": [[9, "quairkit.core.hamiltonian.Hamiltonian.pauli_words_r", false]], "paulichannel (class in quairkit.operator.channel.common)": [[29, "quairkit.operator.channel.common.PauliChannel", false]], "permutation (class in quairkit.operator.gate.custom)": [[33, "quairkit.operator.gate.custom.Permutation", false]], "permutation_matrix() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.permutation_matrix", false]], "permute() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.permute", false]], "permute_systems() (in module quairkit.qinfo.linalg)": [[40, "quairkit.qinfo.linalg.permute_systems", false]], "phase() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.phase", false]], "phase_damping() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.phase_damping", false]], "phase_damping_kraus() (in module quairkit.database.representation)": [[20, "quairkit.database.representation.phase_damping_kraus", false]], "phase_flip() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.phase_flip", false]], "phase_flip_kraus() (in module quairkit.database.representation)": [[20, "quairkit.database.representation.phase_flip_kraus", false]], "phase_gate() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.phase_gate", false]], "phase_space_point() (in module quairkit.database.set)": [[21, "quairkit.database.set.phase_space_point", false]], "phasedamping (class in quairkit.operator.channel.common)": [[29, "quairkit.operator.channel.common.PhaseDamping", false]], "phaseflip (class in quairkit.operator.channel.common)": [[29, "quairkit.operator.channel.common.PhaseFlip", false]], "plot() (quairkit.ansatz.container.layer method)": [[4, "quairkit.ansatz.container.Layer.plot", false]], "plot() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.plot", false]], "prob_sample() (in module quairkit.qinfo.linalg)": [[40, "quairkit.qinfo.linalg.prob_sample", false]], "product_trace() (quairkit.core.state.backend.state_vector.purestate method)": [[13, "quairkit.core.state.backend.state_vector.PureState.product_trace", false]], "purestate (class in quairkit.core.state.backend.state_vector)": [[13, "quairkit.core.state.backend.state_vector.PureState", false]], "purity() (in module quairkit.qinfo.qinfo)": [[41, "quairkit.qinfo.qinfo.purity", false]], "qasm (quairkit.ansatz.container.operatorlist property)": [[4, "quairkit.ansatz.container.OperatorList.qasm", false]], "qft_basis() (in module quairkit.database.set)": [[21, "quairkit.database.set.qft_basis", false]], "qft_matrix() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.qft_matrix", false]], "quairkit.ansatz.container": [[4, "module-quairkit.ansatz.container", false]], "quairkit.ansatz.layer": [[5, "module-quairkit.ansatz.layer", false]], "quairkit.circuit": [[6, "module-quairkit.circuit", false]], "quairkit.core.base": [[8, "module-quairkit.core.base", false]], "quairkit.core.hamiltonian": [[9, "module-quairkit.core.hamiltonian", false]], "quairkit.core.state.backend.density_matrix": [[12, "module-quairkit.core.state.backend.density_matrix", false]], "quairkit.core.state.backend.state_vector": [[13, "module-quairkit.core.state.backend.state_vector", false]], "quairkit.core.state.state": [[14, "module-quairkit.core.state.state", false]], "quairkit.database.hamiltonian": [[17, "module-quairkit.database.hamiltonian", false]], "quairkit.database.matrix": [[18, "module-quairkit.database.matrix", false]], "quairkit.database.random": [[19, "module-quairkit.database.random", false]], "quairkit.database.representation": [[20, "module-quairkit.database.representation", false]], "quairkit.database.set": [[21, "module-quairkit.database.set", false]], "quairkit.database.state": [[22, "module-quairkit.database.state", false]], "quairkit.loss.distance": [[24, "module-quairkit.loss.distance", false]], "quairkit.loss.measure": [[25, "module-quairkit.loss.measure", false]], "quairkit.operator.channel.base": [[28, "module-quairkit.operator.channel.base", false]], "quairkit.operator.channel.common": [[29, "module-quairkit.operator.channel.common", false]], "quairkit.operator.channel.custom": [[30, "module-quairkit.operator.channel.custom", false]], "quairkit.operator.gate.base": [[32, "module-quairkit.operator.gate.base", false]], "quairkit.operator.gate.custom": [[33, "module-quairkit.operator.gate.custom", false]], "quairkit.operator.gate.multi_qubit_gate": [[34, "module-quairkit.operator.gate.multi_qubit_gate", false]], "quairkit.operator.gate.single_qubit_gate": [[35, "module-quairkit.operator.gate.single_qubit_gate", false]], "quairkit.operator.gate.visual": [[36, "module-quairkit.operator.gate.visual", false]], "quairkit.operator.special": [[37, "module-quairkit.operator.special", false]], "quairkit.qinfo.check": [[39, "module-quairkit.qinfo.check", false]], "quairkit.qinfo.linalg": [[40, "module-quairkit.qinfo.linalg", false]], "quairkit.qinfo.qinfo": [[41, "module-quairkit.qinfo.qinfo", false]], "quasioperation (class in quairkit.operator.special)": [[37, "quairkit.operator.special.QuasiOperation", false]], "r_state() (in module quairkit.database.state)": [[22, "quairkit.database.state.r_state", false]], "random_channel() (in module quairkit.database.random)": [[19, "quairkit.database.random.random_channel", false]], "random_clifford() (in module quairkit.database.random)": [[19, "quairkit.database.random.random_clifford", false]], "random_density_matrix() (in module quairkit.database.random)": [[19, "quairkit.database.random.random_density_matrix", false]], "random_hamiltonian_generator() (in module quairkit.database.random)": [[19, "quairkit.database.random.random_hamiltonian_generator", false]], "random_hermitian() (in module quairkit.database.random)": [[19, "quairkit.database.random.random_hermitian", false]], "random_orthogonal_projection() (in module quairkit.database.random)": [[19, "quairkit.database.random.random_orthogonal_projection", false]], "random_pauli_str_generator() (in module quairkit.database.random)": [[19, "quairkit.database.random.random_pauli_str_generator", false]], "random_projector() (in module quairkit.database.random)": [[19, "quairkit.database.random.random_projector", false]], "random_state() (in module quairkit.database.random)": [[19, "quairkit.database.random.random_state", false]], "random_unitary() (in module quairkit.database.random)": [[19, "quairkit.database.random.random_unitary", false]], "random_unitary_hermitian() (in module quairkit.database.random)": [[19, "quairkit.database.random.random_unitary_hermitian", false]], "random_unitary_with_hermitian_block() (in module quairkit.database.random)": [[19, "quairkit.database.random.random_unitary_with_hermitian_block", false]], "randomize_param() (quairkit.ansatz.container.operatorlist method)": [[4, "quairkit.ansatz.container.OperatorList.randomize_param", false]], "real_block_layer() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.real_block_layer", false]], "real_entangled_layer() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.real_entangled_layer", false]], "realblocklayer (class in quairkit.ansatz.layer)": [[5, "quairkit.ansatz.layer.RealBlockLayer", false]], "realentangledlayer (class in quairkit.ansatz.layer)": [[5, "quairkit.ansatz.layer.RealEntangledLayer", false]], "register_idx() (quairkit.ansatz.container.operatorlist method)": [[4, "quairkit.ansatz.container.OperatorList.register_idx", false]], "relative_entropy() (in module quairkit.qinfo.qinfo)": [[41, "quairkit.qinfo.qinfo.relative_entropy", false]], "replacement_choi() (in module quairkit.database.representation)": [[20, "quairkit.database.representation.replacement_choi", false]], "replacementchannel (class in quairkit.operator.channel.common)": [[29, "quairkit.operator.channel.common.ReplacementChannel", false]], "reset_channel() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.reset_channel", false]], "reset_circuit_plot_param() (in module quairkit.operator.gate.visual)": [[36, "quairkit.operator.gate.visual.reset_circuit_plot_param", false]], "reset_kraus() (in module quairkit.database.representation)": [[20, "quairkit.database.representation.reset_kraus", false]], "resetchannel (class in quairkit.operator.channel.common)": [[29, "quairkit.operator.channel.common.ResetChannel", false]], "resetstate (class in quairkit.operator.special)": [[37, "quairkit.operator.special.ResetState", false]], "rx (class in quairkit.operator.gate.single_qubit_gate)": [[35, "quairkit.operator.gate.single_qubit_gate.RX", false]], "rx() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.rx", false]], "rx() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.rx", false]], "rx_gate() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.rx_gate", false]], "rxx (class in quairkit.operator.gate.multi_qubit_gate)": [[34, "quairkit.operator.gate.multi_qubit_gate.RXX", false]], "rxx() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.rxx", false]], "rxx() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.rxx", false]], "rxx_gate() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.rxx_gate", false]], "ry (class in quairkit.operator.gate.single_qubit_gate)": [[35, "quairkit.operator.gate.single_qubit_gate.RY", false]], "ry() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.ry", false]], "ry() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.ry", false]], "ry_gate() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.ry_gate", false]], "ryy (class in quairkit.operator.gate.multi_qubit_gate)": [[34, "quairkit.operator.gate.multi_qubit_gate.RYY", false]], "ryy() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.ryy", false]], "ryy() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.ryy", false]], "ryy_gate() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.ryy_gate", false]], "rz (class in quairkit.operator.gate.single_qubit_gate)": [[35, "quairkit.operator.gate.single_qubit_gate.RZ", false]], "rz() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.rz", false]], "rz() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.rz", false]], "rz_gate() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.rz_gate", false]], "rzz (class in quairkit.operator.gate.multi_qubit_gate)": [[34, "quairkit.operator.gate.multi_qubit_gate.RZZ", false]], "rzz() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.rzz", false]], "rzz() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.rzz", false]], "rzz_gate() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.rzz_gate", false]], "s (class in quairkit.operator.gate.single_qubit_gate)": [[35, "quairkit.operator.gate.single_qubit_gate.S", false]], "s() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.s", false]], "s() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.s", false]], "s_gate() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.s_gate", false]], "s_state() (in module quairkit.database.state)": [[22, "quairkit.database.state.s_state", false]], "scale_circuit_plot_param() (in module quairkit.operator.gate.visual)": [[36, "quairkit.operator.gate.visual.scale_circuit_plot_param", false]], "schmidt_decompose() (in module quairkit.qinfo.linalg)": [[40, "quairkit.qinfo.linalg.schmidt_decompose", false]], "sdg (class in quairkit.operator.gate.single_qubit_gate)": [[35, "quairkit.operator.gate.single_qubit_gate.Sdg", false]], "sdg() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.sdg", false]], "sdg() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.sdg", false]], "sdg_gate() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.sdg_gate", false]], "set_backend() (in module quairkit.core.base)": [[8, "quairkit.core.base.set_backend", false]], "set_circuit_plot_param() (in module quairkit.operator.gate.visual)": [[36, "quairkit.operator.gate.visual.set_circuit_plot_param", false]], "set_device() (in module quairkit.core.base)": [[8, "quairkit.core.base.set_device", false]], "set_dtype() (in module quairkit.core.base)": [[8, "quairkit.core.base.set_dtype", false]], "set_seed() (in module quairkit.core.base)": [[8, "quairkit.core.base.set_seed", false]], "shift() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.shift", false]], "shift_gate() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.shift_gate", false]], "sigx_p (quairkit.core.hamiltonian.spinops property)": [[9, "quairkit.core.hamiltonian.SpinOps.sigx_p", false]], "sigy_p (quairkit.core.hamiltonian.spinops property)": [[9, "quairkit.core.hamiltonian.SpinOps.sigy_p", false]], "sigz_p (quairkit.core.hamiltonian.spinops property)": [[9, "quairkit.core.hamiltonian.SpinOps.sigz_p", false]], "sites (quairkit.core.hamiltonian.hamiltonian property)": [[9, "quairkit.core.hamiltonian.Hamiltonian.sites", false]], "sort() (quairkit.ansatz.container.operatorlist method)": [[4, "quairkit.ansatz.container.OperatorList.sort", false]], "spinops (class in quairkit.core.hamiltonian)": [[9, "quairkit.core.hamiltonian.SpinOps", false]], "sqrtm() (in module quairkit.qinfo.linalg)": [[40, "quairkit.qinfo.linalg.sqrtm", false]], "stab_nullity() (in module quairkit.qinfo.qinfo)": [[41, "quairkit.qinfo.qinfo.stab_nullity", false]], "stab_renyi() (in module quairkit.qinfo.qinfo)": [[41, "quairkit.qinfo.qinfo.stab_renyi", false]], "state_fidelity() (in module quairkit.qinfo.qinfo)": [[41, "quairkit.qinfo.qinfo.state_fidelity", false]], "statefidelity (class in quairkit.loss.distance)": [[24, "quairkit.loss.distance.StateFidelity", false]], "std_basis() (in module quairkit.database.set)": [[21, "quairkit.database.set.std_basis", false]], "stinespring_channel() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.stinespring_channel", false]], "stinespring_repr (quairkit.operator.channel.base.channel property)": [[28, "quairkit.operator.channel.base.Channel.stinespring_repr", false]], "stinespringrepr (class in quairkit.operator.channel.custom)": [[30, "quairkit.operator.channel.custom.StinespringRepr", false]], "swap (class in quairkit.operator.gate.multi_qubit_gate)": [[34, "quairkit.operator.gate.multi_qubit_gate.SWAP", false]], "swap() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.swap", false]], "swap() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.swap", false]], "swap_gate() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.swap_gate", false]], "system_dim (quairkit.ansatz.container.operatorlist property)": [[4, "quairkit.ansatz.container.OperatorList.system_dim", false]], "system_idx (quairkit.ansatz.container.operatorlist property)": [[4, "quairkit.ansatz.container.OperatorList.system_idx", false]], "system_idx (quairkit.operator.special.onewaylocc property)": [[37, "quairkit.operator.special.OneWayLOCC.system_idx", false]], "system_seq (quairkit.core.state.backend.density_matrix.mixedstate property)": [[12, "quairkit.core.state.backend.density_matrix.MixedState.system_seq", false]], "system_seq (quairkit.core.state.backend.state_vector.purestate property)": [[13, "quairkit.core.state.backend.state_vector.PureState.system_seq", false]], "t (class in quairkit.operator.gate.single_qubit_gate)": [[35, "quairkit.operator.gate.single_qubit_gate.T", false]], "t() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.t", false]], "t() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.t", false]], "t_gate() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.t_gate", false]], "tdg (class in quairkit.operator.gate.single_qubit_gate)": [[35, "quairkit.operator.gate.single_qubit_gate.Tdg", false]], "tdg() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.tdg", false]], "tdg() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.tdg", false]], "tdg_gate() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.tdg_gate", false]], "tensor_state() (in module quairkit.core.state.state)": [[14, "quairkit.core.state.state.tensor_state", false]], "terms (quairkit.core.hamiltonian.hamiltonian property)": [[9, "quairkit.core.hamiltonian.Hamiltonian.terms", false]], "thermal_relaxation() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.thermal_relaxation", false]], "thermal_relaxation_kraus() (in module quairkit.database.representation)": [[20, "quairkit.database.representation.thermal_relaxation_kraus", false]], "thermalrelaxation (class in quairkit.operator.channel.common)": [[29, "quairkit.operator.channel.common.ThermalRelaxation", false]], "to_latex() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.to_latex", false]], "to_mixed() (quairkit.core.state.backend.state_vector.purestate method)": [[13, "quairkit.core.state.backend.state_vector.PureState.to_mixed", false]], "to_state() (in module quairkit.core.state.state)": [[14, "quairkit.core.state.state.to_state", false]], "toffoli (in module quairkit.operator.gate.multi_qubit_gate)": [[34, "quairkit.operator.gate.multi_qubit_gate.Toffoli", false]], "toffoli() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.toffoli", false]], "toffoli_gate() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.toffoli_gate", false]], "trace() (in module quairkit.qinfo.linalg)": [[40, "quairkit.qinfo.linalg.trace", false]], "trace_distance() (in module quairkit.qinfo.qinfo)": [[41, "quairkit.qinfo.qinfo.trace_distance", false]], "trace_norm() (in module quairkit.qinfo.linalg)": [[40, "quairkit.qinfo.linalg.trace_norm", false]], "tracedistance (class in quairkit.loss.distance)": [[24, "quairkit.loss.distance.TraceDistance", false]], "transfer_static() (quairkit.ansatz.container.operatorlist method)": [[4, "quairkit.ansatz.container.OperatorList.transfer_static", false]], "trotter() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.trotter", false]], "u3 (class in quairkit.operator.gate.single_qubit_gate)": [[35, "quairkit.operator.gate.single_qubit_gate.U3", false]], "u3() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.u3", false]], "u3() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.u3", false]], "u3_gate() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.u3_gate", false]], "uf() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.Uf", false]], "uf_gate() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.Uf_gate", false]], "unitary_matrix() (quairkit.ansatz.container.operatorlist method)": [[4, "quairkit.ansatz.container.OperatorList.unitary_matrix", false]], "universal2 (class in quairkit.ansatz.layer)": [[5, "quairkit.ansatz.layer.Universal2", false]], "universal2() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.universal2", false]], "universal2_gate() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.universal2_gate", false]], "universal3 (class in quairkit.ansatz.layer)": [[5, "quairkit.ansatz.layer.Universal3", false]], "universal3() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.universal3", false]], "universal3_gate() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.universal3_gate", false]], "universal_qudit() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.universal_qudit", false]], "universal_qudits() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.universal_qudits", false]], "universal_three_qubits() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.universal_three_qubits", false]], "universal_two_qubits() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.universal_two_qubits", false]], "universalqudits (class in quairkit.operator.gate.custom)": [[33, "quairkit.operator.gate.custom.UniversalQudits", false]], "update_param() (quairkit.ansatz.container.operatorlist method)": [[4, "quairkit.ansatz.container.OperatorList.update_param", false]], "von_neumann_entropy() (in module quairkit.qinfo.qinfo)": [[41, "quairkit.qinfo.qinfo.von_neumann_entropy", false]], "w_state() (in module quairkit.database.state)": [[22, "quairkit.database.state.w_state", false]], "x (class in quairkit.operator.gate.single_qubit_gate)": [[35, "quairkit.operator.gate.single_qubit_gate.X", false]], "x() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.x", false]], "x() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.x", false]], "x_gate() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.x_gate", false]], "xy_hamiltonian() (in module quairkit.database.hamiltonian)": [[17, "quairkit.database.hamiltonian.xy_hamiltonian", false]], "y (class in quairkit.operator.gate.single_qubit_gate)": [[35, "quairkit.operator.gate.single_qubit_gate.Y", false]], "y() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.y", false]], "y() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.y", false]], "y_gate() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.y_gate", false]], "z (class in quairkit.operator.gate.single_qubit_gate)": [[35, "quairkit.operator.gate.single_qubit_gate.Z", false]], "z() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.z", false]], "z() (quairkit.circuit.circuit method)": [[6, "quairkit.circuit.Circuit.z", false]], "z_gate() (in module quairkit.database.matrix)": [[18, "quairkit.database.matrix.z_gate", false]], "zero_state() (in module quairkit.database.state)": [[22, "quairkit.database.state.zero_state", false]]}, "objects": {"quairkit": [[6, 0, 0, 1, "circuit", ""]], "quairkit.ansatz": [[4, 0, 0, 1, "container", ""], [5, 0, 0, 1, "layer", ""]], "quairkit.ansatz.container": [[4, 1, 1, 0, "Layer", "Base class for built-in trainable quantum circuit ansatz."], [4, 1, 1, 0, "OperatorList", "Sequential container for QuAIRKit operators."]], "quairkit.ansatz.container.Layer": [[4, 3, 1, 0, "get_latex_name", "Return the LaTeX name of the layer."], [4, 3, 1, 0, "plot", "Plot the circuit layer using LaTeX"]], "quairkit.ansatz.container.Layer.__init__": [[4, 2, 2, 0, "depth", "Depth of the layer."], [4, 2, 2, 0, "name", "Name of the layer."], [4, 2, 2, 0, "physical_idx", "Physical indices of the systems on which this layer is applied."], [4, 2, 2, 0, "system_dim", "Dimension of the systems."]], "quairkit.ansatz.container.Layer.get_latex_name": [[4, 2, 2, 0, "style", "the style of the plot, can be 'standard', 'compact' or 'detailed'."]], "quairkit.ansatz.container.Layer.plot": [[4, 2, 2, 0, "decimal", "number of decimal places to display."], [4, 2, 2, 0, "dpi", "dots per inches of plot image."], [4, 2, 2, 0, "print_code", "whether print the LaTeX code of the circuit, default to True."], [4, 2, 2, 0, "show_plot", "whether show the plotted circuit, default to True."], [4, 2, 2, 0, "style", "the style of the plot, can be 'standard', 'compact' or 'detailed'."]], "quairkit.ansatz.container.OperatorList": [[4, 3, 1, 0, "add_systems", "Add new systems to the list."], [4, 3, 1, 0, "append", "Appends an operator or an operator sub-list to the end."], [4, 4, 1, 0, "depth", "Depth of gate sequences."], [4, 4, 1, 0, "equal_dim", "Whether the systems in this circuit have the same dimension."], [4, 3, 1, 0, "extend", "Extend the list with another sequential"], [4, 3, 1, 0, "forward", "Passing a physical input state."], [4, 4, 1, 0, "grad", "Gradients with respect to the flattened parameters."], [4, 4, 1, 0, "matrix", "Get the unitary matrix form of the operator list."], [4, 4, 1, 0, "num_qubits", "Number of qubits in this circuit."], [4, 4, 1, 0, "num_qutrits", "Number of qutrits in this circuit."], [4, 4, 1, 0, "num_systems", "Number of logical systems."], [4, 4, 1, 0, "operator_history", "Return the operator history of this Sequential"], [4, 3, 1, 0, "operators", "Yield all operators in this list."], [4, 4, 1, 0, "param", "Flattened parameters in this list."], [4, 4, 1, 0, "qasm", "String representation of the circuit in OpenQASM-like format."], [4, 3, 1, 0, "randomize_param", "Randomize parameters of the list based on the initializer. Current we only support Uniform and Normal initializer."], [4, 3, 1, 0, "register_idx", "Update sequential according to input operator index information, or report error."], [4, 3, 1, 0, "sort", "Sort the systems in the circuit by their physical indices."], [4, 4, 1, 0, "system_dim", "Dimension of systems in this circuit."], [4, 4, 1, 0, "system_idx", "List of physical indices of systems."], [4, 3, 1, 0, "transfer_static", "set stop_gradient of all parameters of the list as True"], [4, 3, 1, 0, "unitary_matrix", "Get the unitary matrix form of the circuit."], [4, 3, 1, 0, "update_param", "Replace parameters of all/one layer(s) by theta."]], "quairkit.ansatz.container.OperatorList.__init__": [[4, 2, 2, 0, "num_systems", "number of systems in the operator list."], [4, 2, 2, 0, "physical_idx", "physical indices of systems."], [4, 2, 2, 0, "system_dim", "dimension of systems of this list."]], "quairkit.ansatz.container.OperatorList.add_systems": [[4, 2, 2, 0, "new_physical_idx", "physical indices of new systems."], [4, 2, 2, 0, "new_system_dim", "dimension of new systems."], [4, 2, 2, 0, "num_new_systems", "number of new systems to be added."]], "quairkit.ansatz.container.OperatorList.append": [[4, 2, 2, 0, "op", "module to append"]], "quairkit.ansatz.container.OperatorList.extend": [[4, 2, 2, 0, "sequential", "a sequential of operators to be extended"]], "quairkit.ansatz.container.OperatorList.forward": [[4, 2, 2, 0, "state", "initial state."]], "quairkit.ansatz.container.OperatorList.randomize_param": [[4, 2, 2, 0, "arg0", "first argument of the initializer."], [4, 2, 2, 0, "arg1", "first argument of the initializer."], [4, 2, 2, 0, "method", "The sampling method."]], "quairkit.ansatz.container.OperatorList.register_idx": [[4, 2, 2, 0, "num_acted_system", "number of systems that one operator acts on."], [4, 2, 2, 0, "operator_idx", "input system indices of the operator."]], "quairkit.ansatz.container.OperatorList.update_param": [[4, 2, 2, 0, "idx", "Index of replacement."], [4, 2, 2, 0, "theta", "New parameters"]], "quairkit.ansatz.layer": [[5, 1, 1, 0, "ComplexBlockLayer", "Weakly entangled layers consisting of CNOT gates surrounded by U3 gates"], [5, 1, 1, 0, "ComplexEntangledLayer", "Strongly entangled layers consisting of single-qubit rotation gates and CNOT gates."], [5, 1, 1, 0, "LinearEntangledLayer", "Linear entangled layers consisting of Ry gates, Rz gates, and CNOT gates."], [5, 1, 1, 0, "RealBlockLayer", "Weakly entangled layers consisting of CNOT gates surrounded by RY gates"], [5, 1, 1, 0, "RealEntangledLayer", "Strongly entangled layers consisting of Ry gates and CNOT gates."], [5, 1, 1, 0, "Universal2", "A circuit layer representing universal two-qubit gates. One of such a layer requires 15 parameters."], [5, 1, 1, 0, "Universal3", "A circuit layer representing universal three-qubit gates. One of such a layer requires 81 parameters."]], "quairkit.ansatz.layer.ComplexBlockLayer.__init__": [[5, 2, 2, 0, "depth", "Number of layers."], [5, 2, 2, 0, "param", "Initial parameters for the layer."], [5, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the layer is applied."]], "quairkit.ansatz.layer.ComplexEntangledLayer.__init__": [[5, 2, 2, 0, "depth", "Number of layers."], [5, 2, 2, 0, "param", "Initial parameters for the layer."], [5, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the layer is applied."]], "quairkit.ansatz.layer.LinearEntangledLayer.__init__": [[5, 2, 2, 0, "depth", "Number of layers."], [5, 2, 2, 0, "param", "Initial parameters for the layer."], [5, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the layer is applied."]], "quairkit.ansatz.layer.RealBlockLayer.__init__": [[5, 2, 2, 0, "depth", "Number of layers."], [5, 2, 2, 0, "param", "Initial parameters for the layer."], [5, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the layer is applied."]], "quairkit.ansatz.layer.RealEntangledLayer.__init__": [[5, 2, 2, 0, "depth", "Number of layers."], [5, 2, 2, 0, "param", "Initial parameters for the layer."], [5, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the layer is applied."]], "quairkit.ansatz.layer.Universal2.__init__": [[5, 2, 2, 0, "param", "Initial parameters for the layer."], [5, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the layer is applied."]], "quairkit.ansatz.layer.Universal3.__init__": [[5, 2, 2, 0, "param", "Initial parameters for the layer."], [5, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the layer is applied."]], "quairkit.circuit": [[6, 1, 1, 0, "Circuit", "Class for quantum circuit."]], "quairkit.circuit.Circuit": [[6, 3, 1, 0, "amplitude_damping", "Add amplitude damping channels."], [6, 3, 1, 0, "bit_flip", "Add bit flip channels."], [6, 3, 1, 0, "bit_phase_flip", "Add bit phase flip channels."], [6, 3, 1, 0, "ccx", "Add CCX (Toffoli) gates."], [6, 3, 1, 0, "choi_channel", "Add custom channels in the Choi representation."], [6, 3, 1, 0, "cnot", "Add CNOT gates."], [6, 3, 1, 0, "complex_block_layer", "Add weakly entangled layers consisting of single-qubit rotation gates and CNOT gates."], [6, 3, 1, 0, "complex_entangled_layer", "Add strongly entangled layers consisting of single-qubit rotation gates and CNOT gates."], [6, 3, 1, 0, "control_oracle", "Add a controlled oracle gate."], [6, 3, 1, 0, "control_permute", "Add a controlled permutation gate."], [6, 3, 1, 0, "cp", "Add controlled P gates."], [6, 3, 1, 0, "crx", "Add controlled rotation gates about the x-axis."], [6, 3, 1, 0, "cry", "Add controlled rotation gates about the y-axis."], [6, 3, 1, 0, "crz", "Add controlled rotation gates about the z-axis."], [6, 3, 1, 0, "cswap", "Add CSWAP (Fredkin) gates."], [6, 3, 1, 0, "cu", "Add controlled single-qubit rotation gates."], [6, 3, 1, 0, "cy", "Add controlled Y gates."], [6, 3, 1, 0, "cz", "Add controlled Z gates."], [6, 3, 1, 0, "depolarizing", "Add depolarizing channels."], [6, 3, 1, 0, "generalized_amplitude_damping", "Add generalized amplitude damping channels."], [6, 3, 1, 0, "generalized_depolarizing", "Add a general depolarizing channel."], [6, 3, 1, 0, "h", "Add single-qubit Hadamard gates."], [6, 3, 1, 0, "kraus_channel", "Add custom channels in the Kraus representation."], [6, 3, 1, 0, "linear_entangled_layer", "Add linear entangled layers consisting of Ry gates, Rz gates, and CNOT gates."], [6, 3, 1, 0, "locc", "Add a one-way LOCC protocol comprised of unitary operations."], [6, 3, 1, 0, "measure", "Perform a measurement on the specified systems."], [6, 3, 1, 0, "ms", "Add M\u00f8lmer-S\u00f8rensen (MS) gates."], [6, 3, 1, 0, "oracle", "Add an oracle gate."], [6, 3, 1, 0, "p", "Add single-qubit P gates."], [6, 3, 1, 0, "param_locc", "Add a one-way LOCC protocol comprised of unitary operations, where the applied unitary is parameterized."], [6, 3, 1, 0, "param_oracle", "Add a parameterized oracle gate."], [6, 3, 1, 0, "pauli_channel", "Add Pauli channels."], [6, 3, 1, 0, "permute", "Add a permutation gate."], [6, 3, 1, 0, "phase_damping", "Add phase damping channels."], [6, 3, 1, 0, "phase_flip", "Add phase flip channels."], [6, 3, 1, 0, "plot", "Display the circuit using Quantikz if latex is True, otherwise using matplotlib."], [6, 3, 1, 0, "real_block_layer", "Add weakly entangled layers consisting of Ry gates and CNOT gates."], [6, 3, 1, 0, "real_entangled_layer", "Add strongly entangled layers consisting of Ry gates and CNOT gates."], [6, 3, 1, 0, "reset_channel", "Add reset channels."], [6, 3, 1, 0, "rx", "Add single-qubit rotation gates about the x-axis."], [6, 3, 1, 0, "rxx", "Add RXX gates."], [6, 3, 1, 0, "ry", "Add single-qubit rotation gates about the y-axis."], [6, 3, 1, 0, "ryy", "Add RYY gates."], [6, 3, 1, 0, "rz", "Add single-qubit rotation gates about the z-axis."], [6, 3, 1, 0, "rzz", "Add RZZ gates."], [6, 3, 1, 0, "s", "Add single-qubit S gates."], [6, 3, 1, 0, "sdg", "Add single-qubit S dagger (S inverse) gates."], [6, 3, 1, 0, "stinespring_channel", "Add custom channels in the Stinespring representation."], [6, 3, 1, 0, "swap", "Add SWAP gates."], [6, 3, 1, 0, "t", "Add single-qubit T gates."], [6, 3, 1, 0, "tdg", "Add single-qubit T dagger (T inverse) gates."], [6, 3, 1, 0, "thermal_relaxation", "Add thermal relaxation channels."], [6, 3, 1, 0, "to_latex", "The LaTeX representation of the circuit, written in Quantikz format."], [6, 3, 1, 0, "trotter", "Add Trotter decompositions of a Hamiltonian evolution operator."], [6, 3, 1, 0, "u3", "Add single-qubit rotation gates."], [6, 3, 1, 0, "universal_qudits", "Add universal qudit gates. One such gate requires d^2 - 1 parameters, where d is the gate dimension."], [6, 3, 1, 0, "universal_three_qubits", "Add universal three-qubit gates. One such gate requires 81 parameters."], [6, 3, 1, 0, "universal_two_qubits", "Add universal two-qubit gates. One such gate requires 15 parameters."], [6, 3, 1, 0, "x", "Add single-qubit X gates."], [6, 3, 1, 0, "y", "Add single-qubit Y gates."], [6, 3, 1, 0, "z", "Add single-qubit Z gates."]], "quairkit.circuit.Circuit.__init__": [[6, 2, 2, 0, "num_systems", "number of systems in the circuit."], [6, 2, 2, 0, "physical_idx", "physical indices of systems."], [6, 2, 2, 0, "system_dim", "dimension of systems of this circuit."]], "quairkit.circuit.Circuit.amplitude_damping": [[6, 2, 2, 0, "gamma", "Damping probability."], [6, 2, 2, 0, "qubits_idx", "Systems to apply the damping on."]], "quairkit.circuit.Circuit.bit_flip": [[6, 2, 2, 0, "prob", "Probability of a bit flip."], [6, 2, 2, 0, "qubits_idx", "Systems to apply the channel on."]], "quairkit.circuit.Circuit.bit_phase_flip": [[6, 2, 2, 0, "prob", "Probability of a bit phase flip."], [6, 2, 2, 0, "qubits_idx", "Systems to apply the channel on."]], "quairkit.circuit.Circuit.ccx": [[6, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.choi_channel": [[6, 2, 2, 0, "choi_repr", "Choi representation."], [6, 2, 2, 0, "system_idx", "Systems to apply the channel on."]], "quairkit.circuit.Circuit.cnot": [[6, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.complex_block_layer": [[6, 2, 2, 0, "depth", "Number of layers."], [6, 2, 2, 0, "param", "Layer parameters."], [6, 2, 2, 0, "qubits_idx", "Systems to apply the layer on."]], "quairkit.circuit.Circuit.complex_entangled_layer": [[6, 2, 2, 0, "depth", "Number of layers."], [6, 2, 2, 0, "param", "Layer parameters."], [6, 2, 2, 0, "qubits_idx", "Systems to apply the layer on."]], "quairkit.circuit.Circuit.control_oracle": [[6, 2, 2, 0, "control_idx", "the index that controls the oracle."], [6, 2, 2, 0, "gate_name", "name of the oracle."], [6, 2, 2, 0, "latex_name", "LaTeX name of the gate."], [6, 2, 2, 0, "oracle", "Unitary oracle."], [6, 2, 2, 0, "system_idx", "Indices of the systems on which the gate is applied."]], "quairkit.circuit.Circuit.control_permute": [[6, 2, 2, 0, "control_idx", "the index that controls the oracle."], [6, 2, 2, 0, "perm", "A list representing the permutation of subsystems."], [6, 2, 2, 0, "system_idx", "Indices of the systems on which the gates are applied."]], "quairkit.circuit.Circuit.cp": [[6, 2, 2, 0, "param", "Parameters of the gates."], [6, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [6, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.crx": [[6, 2, 2, 0, "param", "Parameters of the gates."], [6, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [6, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.cry": [[6, 2, 2, 0, "param", "Parameters of the gates."], [6, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [6, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.crz": [[6, 2, 2, 0, "param", "Parameters of the gates."], [6, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [6, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.cswap": [[6, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.cu": [[6, 2, 2, 0, "param", "Parameters of the gate."], [6, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [6, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.cy": [[6, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.cz": [[6, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.depolarizing": [[6, 2, 2, 0, "prob", "Depolarizing probability."], [6, 2, 2, 0, "qubits_idx", "Systems to apply the channel on."]], "quairkit.circuit.Circuit.generalized_amplitude_damping": [[6, 2, 2, 0, "gamma", "Damping probability."], [6, 2, 2, 0, "prob", "Excitation probability."], [6, 2, 2, 0, "qubits_idx", "Systems to apply the channel on."]], "quairkit.circuit.Circuit.generalized_depolarizing": [[6, 2, 2, 0, "prob", "Probabilities for the Pauli basis."], [6, 2, 2, 0, "qubits_idx", "Systems to apply the channel on."]], "quairkit.circuit.Circuit.h": [[6, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.kraus_channel": [[6, 2, 2, 0, "kraus_oper", "Kraus operators."], [6, 2, 2, 0, "system_idx", "Systems to apply the channel on."]], "quairkit.circuit.Circuit.linear_entangled_layer": [[6, 2, 2, 0, "depth", "Number of layers."], [6, 2, 2, 0, "param", "Parameters for the layer."], [6, 2, 2, 0, "qubits_idx", "Systems to apply the layer on."]], "quairkit.circuit.Circuit.locc": [[6, 2, 2, 0, "label", "Label for measurement."], [6, 2, 2, 0, "latex_name", "LaTeX name for the applied operator."], [6, 2, 2, 0, "local_unitary", "The local unitary operation."], [6, 2, 2, 0, "system_idx", "Systems on which the protocol is applied."]], "quairkit.circuit.Circuit.measure": [[6, 2, 2, 0, "if_print", "Whether to print collapse info."], [6, 2, 2, 0, "measure_basis", "Measurement basis."], [6, 2, 2, 0, "post_selection", "The post-selection result."], [6, 2, 2, 0, "system_idx", "Systems to measure."]], "quairkit.circuit.Circuit.ms": [[6, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.oracle": [[6, 2, 2, 0, "control_idx", "the index that controls the oracle."], [6, 2, 2, 0, "gate_name", "name of the oracle."], [6, 2, 2, 0, "latex_name", "LaTeX name of the gate."], [6, 2, 2, 0, "oracle", "Unitary oracle."], [6, 2, 2, 0, "system_idx", "Indices of the systems on which the gate is applied."]], "quairkit.circuit.Circuit.p": [[6, 2, 2, 0, "param", "Parameters of the gates."], [6, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [6, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.param_locc": [[6, 2, 2, 0, "generator", "Function to generate the oracle."], [6, 2, 2, 0, "label", "Label for measurement."], [6, 2, 2, 0, "latex_name", "LaTeX name for the applied operator."], [6, 2, 2, 0, "num_acted_param", "Number of parameters required."], [6, 2, 2, 0, "param", "Input parameters for the gate."], [6, 2, 2, 0, "support_batch", "Whether generator supports batched input."], [6, 2, 2, 0, "system_idx", "Systems on which the protocol is applied."]], "quairkit.circuit.Circuit.param_oracle": [[6, 2, 2, 0, "control_idx", "The index that controls the oracle."], [6, 2, 2, 0, "gate_name", "Name of the oracle."], [6, 2, 2, 0, "generator", "Function to generate the oracle."], [6, 2, 2, 0, "latex_name", "LaTeX name of the gate."], [6, 2, 2, 0, "num_acted_param", "Number of parameters required."], [6, 2, 2, 0, "param", "Input parameters for the gate."], [6, 2, 2, 0, "support_batch", "Whether generator supports batched input."], [6, 2, 2, 0, "system_idx", "Indices of the systems on which the gate acts."]], "quairkit.circuit.Circuit.pauli_channel": [[6, 2, 2, 0, "prob", "Probabilities for the Pauli X, Y, and Z operators."], [6, 2, 2, 0, "qubits_idx", "Systems to apply the channel on."]], "quairkit.circuit.Circuit.permute": [[6, 2, 2, 0, "perm", "A list representing the permutation of subsystems."], [6, 2, 2, 0, "system_idx", "Indices of the systems on which the gates are applied."]], "quairkit.circuit.Circuit.phase_damping": [[6, 2, 2, 0, "gamma", "Phase damping parameter."], [6, 2, 2, 0, "qubits_idx", "Systems to apply the channel on."]], "quairkit.circuit.Circuit.phase_flip": [[6, 2, 2, 0, "prob", "Probability of a phase flip."], [6, 2, 2, 0, "qubits_idx", "Systems to apply the channel on."]], "quairkit.circuit.Circuit.plot": [[6, 2, 2, 0, "decimal", "number of decimal places to display."], [6, 2, 2, 0, "dpi", "dots per inches of plot image."], [6, 2, 2, 0, "include_empty", "whether include empty lines, default to False."], [6, 2, 2, 0, "kwargs", "additional parameters for matplotlib plot."], [6, 2, 2, 0, "latex", "whether use Quantikz, a LaTeX package, to plot circuits , default to True."], [6, 2, 2, 0, "print_code", "whether print the LaTeX code of the circuit, default to False."], [6, 2, 2, 0, "show_plot", "whether show the plotted circuit, default to True."], [6, 2, 2, 0, "style", "the style of the plot, can be 'standard', 'compact' or 'detailed'."]], "quairkit.circuit.Circuit.real_block_layer": [[6, 2, 2, 0, "depth", "Number of layers."], [6, 2, 2, 0, "param", "Layer parameters."], [6, 2, 2, 0, "qubits_idx", "Systems to apply the layer on."]], "quairkit.circuit.Circuit.real_entangled_layer": [[6, 2, 2, 0, "depth", "Number of layers."], [6, 2, 2, 0, "param", "Layer parameters."], [6, 2, 2, 0, "qubits_idx", "Systems to apply the layer on."]], "quairkit.circuit.Circuit.reset_channel": [[6, 2, 2, 0, "prob", "Probabilities for resetting to the basis states."], [6, 2, 2, 0, "qubits_idx", "Systems to apply the channel on."]], "quairkit.circuit.Circuit.rx": [[6, 2, 2, 0, "param", "Parameters of the gates."], [6, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [6, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.rxx": [[6, 2, 2, 0, "param", "Parameters of the gate."], [6, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [6, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.ry": [[6, 2, 2, 0, "param", "Parameters of the gates."], [6, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [6, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.ryy": [[6, 2, 2, 0, "param", "Parameters of the gate."], [6, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [6, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.rz": [[6, 2, 2, 0, "param", "Parameters of the gates."], [6, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [6, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.rzz": [[6, 2, 2, 0, "param", "Parameters of the gate."], [6, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [6, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.s": [[6, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.sdg": [[6, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.stinespring_channel": [[6, 2, 2, 0, "stinespring_repr", "Stinespring representation."], [6, 2, 2, 0, "system_idx", "Systems to apply the channel on."]], "quairkit.circuit.Circuit.swap": [[6, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.t": [[6, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.tdg": [[6, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.thermal_relaxation": [[6, 2, 2, 0, "const_t", "The T1 and T2 relaxation times."], [6, 2, 2, 0, "exec_time", "Gate execution time."], [6, 2, 2, 0, "qubits_idx", "Systems to apply the channel on."]], "quairkit.circuit.Circuit.to_latex": [[6, 2, 2, 0, "decimal", "number of decimal places to display."], [6, 2, 2, 0, "style", "the style of the plot, can be 'standard', 'compact' or 'detailed'."]], "quairkit.circuit.Circuit.trotter": [[6, 2, 2, 0, "hamiltonian", "Hamiltonian of the system whose time evolution is to be simulated."], [6, 2, 2, 0, "name", "Name of the Hamiltonian."], [6, 2, 2, 0, "num_steps", "Number of trotter blocks."], [6, 2, 2, 0, "order", "Order of the Trotter-Suzuki decomposition."], [6, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the layer is applied."], [6, 2, 2, 0, "time", "Total evolution time."]], "quairkit.circuit.Circuit.u3": [[6, 2, 2, 0, "param", "Parameters of the gates."], [6, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [6, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.universal_qudits": [[6, 2, 2, 0, "param", "Parameters of the gates."], [6, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [6, 2, 2, 0, "system_idx", "Indices of the systems on which the gates are applied."]], "quairkit.circuit.Circuit.universal_three_qubits": [[6, 2, 2, 0, "param", "Parameters of the gates."], [6, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.universal_two_qubits": [[6, 2, 2, 0, "param", "Parameters of the gates."], [6, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.x": [[6, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.y": [[6, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.z": [[6, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.core": [[8, 0, 0, 1, "base", ""], [9, 0, 0, 1, "hamiltonian", ""]], "quairkit.core.base": [[8, 1, 1, 0, "Backend", "Backend classifier in the QuAIRKit."], [8, 5, 1, 0, "get_backend", "Get the current backend of QuAIRKit."], [8, 5, 1, 0, "get_device", "Get the current device to save the tensor."], [8, 5, 1, 0, "get_dtype", "Return currently used data type."], [8, 5, 1, 0, "get_float_dtype", "Return currently used float data type."], [8, 5, 1, 0, "get_seed", "Get the currently used seed of QuAIRKit."], [8, 5, 1, 0, "set_backend", "Set the backend implementation of QuAIRKit."], [8, 5, 1, 0, "set_device", "Set the device to save the tensor."], [8, 5, 1, 0, "set_dtype", "Set the data type ."], [8, 5, 1, 0, "set_seed", "Set the global seed of QuAIRKit."]], "quairkit.core.base.Backend.__init__": [[8, 2, 2, "quairkit.core.base.Backend", "*values", "Backend classifier in the QuAIRKit."], [8, 2, 2, "quairkit.core.base.Backend", "boundary=None", "Backend classifier in the QuAIRKit."], [8, 2, 2, "quairkit.core.base.Backend", "module=None", "Backend classifier in the QuAIRKit."], [8, 2, 2, "quairkit.core.base.Backend", "names=&lt;not given&gt;", "Backend classifier in the QuAIRKit."], [8, 2, 2, "quairkit.core.base.Backend", "qualname=None", "Backend classifier in the QuAIRKit."], [8, 2, 2, "quairkit.core.base.Backend", "start=1", "Backend classifier in the QuAIRKit."], [8, 2, 2, "quairkit.core.base.Backend", "type=None", "Backend classifier in the QuAIRKit."], [8, 2, 2, "quairkit.core.base.Backend", "value", "Backend classifier in the QuAIRKit."]], "quairkit.core.base.set_backend": [[8, 2, 2, 0, "backend", "The name of the backend."]], "quairkit.core.base.set_device": [[8, 2, 2, 0, "device", "The name of the device."]], "quairkit.core.base.set_dtype": [[8, 2, 2, 0, "dtype", "The dtype can be complex64 and complex128."]], "quairkit.core.base.set_seed": [[8, 2, 2, 0, "seed", "the random seed used in QuAIRKit."]], "quairkit.core.hamiltonian": [[9, 1, 1, 0, "Hamiltonian", "Hamiltonian class in QuAIRKit."], [9, 1, 1, 0, "SpinOps", "The spin operators in matrix forms, could be used to construct Hamiltonian matrix or spin observables."]], "quairkit.core.hamiltonian.Hamiltonian": [[9, 4, 1, 0, "coefficients", "The coefficient of each term in the Hamiltonian, i.e. [1.0, 2.0]."], [9, 3, 1, 0, "construct_h_matrix", "Construct a matrix form of the Hamiltonian in Z-basis."], [9, 3, 1, 0, "decompose_pauli_words", "Decompose pauli_str into coefficients and Pauli strings."], [9, 3, 1, 0, "decompose_with_sites", "Decompose pauli_str into coefficients, a simplified form of Pauli strings, and the indices of qubits on which the Pauli operators act on."], [9, 4, 1, 0, "matrix", "The matrix form of the Hamiltonian."], [9, 4, 1, 0, "n_qubits", "Number of qubits."], [9, 4, 1, 0, "n_terms", "Number of terms of the hamiltonian."], [9, 4, 1, 0, "pauli_str", "The Pauli string corresponding to the hamiltonian."], [9, 4, 1, 0, "pauli_words", "The Pauli word of each term, i.e. ['ZIZ', 'IIX']."], [9, 4, 1, 0, "pauli_words_matrix", "The list of matrices with respect to simplied Pauli words."], [9, 4, 1, 0, "pauli_words_r", "A list of Pauli word (exclude I), i.e. ['ZXZZ', 'Z', 'X']."], [9, 4, 1, 0, "sites", "A list of qubits index corresponding to the hamiltonian."], [9, 4, 1, 0, "terms", "All items in hamiltonian, i.e. [['Z0, Z1'], ['I']]."]], "quairkit.core.hamiltonian.Hamiltonian.__init__": [[9, 2, 2, 0, "compress", "Determines whether the input list will be automatically merged (e.g."], [9, 2, 2, 0, "pauli_str", "A list of Hamiltonian information, e.g."]], "quairkit.core.hamiltonian.Hamiltonian.construct_h_matrix": [[9, 2, 2, 0, "qubit_num", "The number of qubits."]], "quairkit.core.hamiltonian.SpinOps": [[9, 4, 1, 0, "sigx_p", "A list of S^x_i operators, different elements correspond to different indices i."], [9, 4, 1, 0, "sigy_p", "A list of S^y_i operators, different elements correspond to different indices i."], [9, 4, 1, 0, "sigz_p", "A list of S^z_i operators, different elements correspond to different indices i."]], "quairkit.core.hamiltonian.SpinOps.__init__": [[9, 2, 2, 0, "size", "Size of the system (number of qubits)."], [9, 2, 2, 0, "use_sparse", "Decide whether to use the sparse matrix to calculate."]], "quairkit.core.state": [[14, 0, 0, 1, "state", ""]], "quairkit.core.state.backend": [[12, 0, 0, 1, "density_matrix", ""], [13, 0, 0, 1, "state_vector", ""]], "quairkit.core.state.backend.density_matrix": [[12, 1, 1, 0, "MixedState", "The mixed state class."]], "quairkit.core.state.backend.density_matrix.MixedState": [[12, 4, 1, 0, "system_seq", "The system order of this state"]], "quairkit.core.state.backend.density_matrix.MixedState.__init__": [[12, 2, 2, 0, "data", "tensor array (in density matrix representation) for quantum mixed state(s)."], [12, 2, 2, 0, "probability", "list of state probability distributions."], [12, 2, 2, 0, "sys_dim", "a list of dimensions for each system."], [12, 2, 2, 0, "system_seq", "the system order of this state."]], "quairkit.core.state.backend.state_vector": [[13, 1, 1, 0, "PureState", "The pure state class."]], "quairkit.core.state.backend.state_vector.PureState": [[13, 3, 1, 0, "product_trace", "Partial trace over this state, when this state is a product state"], [13, 4, 1, 0, "system_seq", "The system order of this state"], [13, 3, 1, 0, "to_mixed", "Convert the pure state to mixed state computation."]], "quairkit.core.state.backend.state_vector.PureState.__init__": [[13, 2, 2, 0, "data", "tensor array in vector representation for quantum pure state(s)."], [13, 2, 2, 0, "probability", "tensor array for state distributions."], [13, 2, 2, 0, "sys_dim", "a list of dimensions for each system."], [13, 2, 2, 0, "system_seq", "the system order of this state."]], "quairkit.core.state.backend.state_vector.PureState.product_trace": [[13, 2, 2, "quairkit.core.state.backend.state_vector.PureState.product_trace", "trace_idx", "Partial trace over this state, when this state is a product state"], [13, 2, 2, "quairkit.core.state.backend.state_vector.PureState.product_trace", "trace_state", "Partial trace over this state, when this state is a product state"]], "quairkit.core.state.state": [[14, 5, 1, 0, "image_to_density_matrix", "Encode image to density matrix"], [14, 5, 1, 0, "tensor_state", "calculate tensor product (kronecker product) between at least two state. This function automatically returns State instance"], [14, 5, 1, 0, "to_state", "The function to generate a specified state instance."]], "quairkit.core.state.state.image_to_density_matrix": [[14, 2, 2, 0, "image_filepath", "Path to the image file."]], "quairkit.core.state.state.tensor_state": [[14, 2, 2, 0, "args", "other states"], [14, 2, 2, 0, "state_1st", "the first state"]], "quairkit.core.state.state.to_state": [[14, 2, 2, 0, "data", "a representation of the quantum state in allowable backend, or an instance of the State class."], [14, 2, 2, 0, "dtype", "Used to specify the data dtype of the data."], [14, 2, 2, 0, "eps", "The tolerance for checking the validity of the input state."], [14, 2, 2, 0, "prob", "The (list of) probability distribution of the state."], [14, 2, 2, 0, "state_backend", "The backend of the state."], [14, 2, 2, 0, "system_dim", "(list of) dimension(s) of the systems, can be a list of integers or an integer. For example, system_dim = 2 means the systems are qubits (default setup); system_dim = [2, 3] means the first system is a qubit and the second is a qutrit."]], "quairkit.database": [[17, 0, 0, 1, "hamiltonian", ""], [18, 0, 0, 1, "matrix", ""], [19, 0, 0, 1, "random", ""], [20, 0, 0, 1, "representation", ""], [21, 0, 0, 1, "set", ""], [22, 0, 0, 1, "state", ""]], "quairkit.database.hamiltonian": [[17, 5, 1, 0, "heisenberg_hamiltonian", "Compute the Heisenberg Hamiltonian."], [17, 5, 1, 0, "ising_hamiltonian", "Compute the Ising Hamiltonian."], [17, 5, 1, 0, "xy_hamiltonian", "Compute the XY Hamiltonian."]], "quairkit.database.hamiltonian.heisenberg_hamiltonian": [[17, 2, 2, 0, "edges", "A tensor E shape=[3, V, V], where E[0][u][v] is alpha_{uv}, E[1][u][v] is beta_{uv}, and E[2][u][v] is gamma_{uv}."]], "quairkit.database.hamiltonian.ising_hamiltonian": [[17, 2, 2, 0, "edges", "A tensor E shape=[V, V], where E[u][v] is gamma_{uv}."], [17, 2, 2, 0, "vertices", "A tensor V shape=[V], where V[k] is beta_{k}."]], "quairkit.database.hamiltonian.xy_hamiltonian": [[17, 2, 2, 0, "edges", "A tensor E shape=[2, V, V], where E[0][u][v] is alpha_{uv} and E[1][u][v] is beta_{uv}."]], "quairkit.database.matrix": [[18, 5, 1, 0, "Of", "Construct the oracle unitary matrix for an unstructured search problem."], [18, 5, 1, 0, "Of_gate", "Construct the oracle unitary matrix for an unstructured search problem."], [18, 5, 1, 0, "Uf", "Construct the unitary matrix used in Simon's algorithm."], [18, 5, 1, 0, "Uf_gate", "Construct the unitary matrix used in Simon's algorithm."], [18, 5, 1, 0, "cnot", "Generate the CNOT gate matrix."], [18, 5, 1, 0, "cnot_gate", "Generate the CNOT gate matrix."], [18, 5, 1, 0, "cp", "Generate the CP gate matrix."], [18, 5, 1, 0, "cp_gate", "Generate the CP gate matrix."], [18, 5, 1, 0, "crx", "Generate the CR_X gate matrix."], [18, 5, 1, 0, "crx_gate", "Generate the CR_X gate matrix."], [18, 5, 1, 0, "cry", "Generate the CR_Y gate matrix."], [18, 5, 1, 0, "cry_gate", "Generate the CR_Y gate matrix."], [18, 5, 1, 0, "crz", "Generate the CR_Z gate matrix."], [18, 5, 1, 0, "crz_gate", "Generate the CR_Z gate matrix."], [18, 5, 1, 0, "cswap", "Generate the CSWAP gate matrix."], [18, 5, 1, 0, "cswap_gate", "Generate the CSWAP gate matrix."], [18, 5, 1, 0, "cu", "Generate the CU gate matrix."], [18, 5, 1, 0, "cu_gate", "Generate the CU gate matrix."], [18, 5, 1, 0, "cy", "Generate the CY gate matrix."], [18, 5, 1, 0, "cy_gate", "Generate the CY gate matrix."], [18, 5, 1, 0, "cz", "Generate the CZ gate matrix."], [18, 5, 1, 0, "cz_gate", "Generate the CZ gate matrix."], [18, 5, 1, 0, "eye", "Generate the identity matrix."], [18, 5, 1, 0, "eye_gate", "Generate the identity matrix."], [18, 5, 1, 0, "grover_matrix", "Construct the Grover operator based on oracle."], [18, 5, 1, 0, "h", "Generate the matrix of the Hadamard gate."], [18, 5, 1, 0, "h_gate", "Generate the matrix of the Hadamard gate."], [18, 5, 1, 0, "ms", "Generate the MS gate matrix."], [18, 5, 1, 0, "ms_gate", "Generate the MS gate matrix."], [18, 5, 1, 0, "p", "Generate the P gate matrix."], [18, 5, 1, 0, "p_gate", "Generate the P gate matrix."], [18, 5, 1, 0, "permutation_matrix", "Construct a unitary matrix representing a permutation operation on a quantum system."], [18, 5, 1, 0, "phase", "Generate phase operator for qudit"], [18, 5, 1, 0, "phase_gate", "Generate phase operator for qudit"], [18, 5, 1, 0, "qft_matrix", "Construct the quantum Fourier transpose (QFT) gate."], [18, 5, 1, 0, "rx", "Generate the RX gate matrix."], [18, 5, 1, 0, "rx_gate", "Generate the RX gate matrix."], [18, 5, 1, 0, "rxx", "Generate the RXX gate matrix."], [18, 5, 1, 0, "rxx_gate", "Generate the RXX gate matrix."], [18, 5, 1, 0, "ry", "Generate the RY gate matrix."], [18, 5, 1, 0, "ry_gate", "Generate the RY gate matrix."], [18, 5, 1, 0, "ryy", "Generate the RYY gate matrix."], [18, 5, 1, 0, "ryy_gate", "Generate the RYY gate matrix."], [18, 5, 1, 0, "rz", "Generate the RZ gate matrix."], [18, 5, 1, 0, "rz_gate", "Generate the RZ gate matrix."], [18, 5, 1, 0, "rzz", "Generate the RZZ gate matrix."], [18, 5, 1, 0, "rzz_gate", "Generate the RZZ gate matrix."], [18, 5, 1, 0, "s", "Generate the matrix of the S gate."], [18, 5, 1, 0, "s_gate", "Generate the matrix of the S gate."], [18, 5, 1, 0, "sdg", "Generate the matrix of the Sdg (S-dagger) gate."], [18, 5, 1, 0, "sdg_gate", "Generate the matrix of the Sdg (S-dagger) gate."], [18, 5, 1, 0, "shift", "Generate shift operator for qudit"], [18, 5, 1, 0, "shift_gate", "Generate shift operator for qudit"], [18, 5, 1, 0, "swap", "Generate the SWAP gate matrix."], [18, 5, 1, 0, "swap_gate", "Generate the SWAP gate matrix."], [18, 5, 1, 0, "t", "Generate the matrix of the T gate."], [18, 5, 1, 0, "t_gate", "Generate the matrix of the T gate."], [18, 5, 1, 0, "tdg", "Generate the matrix of the Tdg (T-dagger) gate."], [18, 5, 1, 0, "tdg_gate", "Generate the matrix of the Tdg (T-dagger) gate."], [18, 5, 1, 0, "toffoli", "Generate the Toffoli gate matrix."], [18, 5, 1, 0, "toffoli_gate", "Generate the Toffoli gate matrix."], [18, 5, 1, 0, "u3", "Generate the U3 gate matrix."], [18, 5, 1, 0, "u3_gate", "Generate the U3 gate matrix."], [18, 5, 1, 0, "universal2", "Generate the universal two-qubit gate matrix."], [18, 5, 1, 0, "universal2_gate", "Generate the universal two-qubit gate matrix."], [18, 5, 1, 0, "universal3", "Generate the universal three-qubit gate matrix."], [18, 5, 1, 0, "universal3_gate", "Generate the universal three-qubit gate matrix."], [18, 5, 1, 0, "universal_qudit", "Generate a universal gate matrix for qudits using a generalized Gell-Mann basis."], [18, 5, 1, 0, "x", "Generate the Pauli X matrix."], [18, 5, 1, 0, "x_gate", "Generate the Pauli X matrix."], [18, 5, 1, 0, "y", "Generate the Pauli Y matrix."], [18, 5, 1, 0, "y_gate", "Generate the Pauli Y matrix."], [18, 5, 1, 0, "z", "Generate the Pauli Z matrix."], [18, 5, 1, 0, "z_gate", "Generate the Pauli Z matrix."]], "quairkit.database.matrix.Of": [[18, 2, 2, 0, "f", "a function f: \\{0, 1\\}^n \\to \\{0, 1\\}."], [18, 2, 2, 0, "n", "length of the bit string."]], "quairkit.database.matrix.Of_gate": [[18, 2, 2, 0, "f", "a function f: \\{0, 1\\}^n \\to \\{0, 1\\}."], [18, 2, 2, 0, "n", "length of the bit string."]], "quairkit.database.matrix.Uf": [[18, 2, 2, 0, "f", "a 2-to-1 or 1-to-1 function f: \\{0, 1\\}^n \\to \\{0, 1\\}^n."], [18, 2, 2, 0, "n", "length of the bit string."]], "quairkit.database.matrix.Uf_gate": [[18, 2, 2, 0, "f", "a 2-to-1 or 1-to-1 function f: \\{0, 1\\}^n \\to \\{0, 1\\}^n."], [18, 2, 2, 0, "n", "length of the bit string."]], "quairkit.database.matrix.cp": [[18, 2, 2, 0, "theta", "the (batched) parameter, with shape [1]."]], "quairkit.database.matrix.cp_gate": [[18, 2, 2, 0, "theta", "the (batched) parameter, with shape [1]."]], "quairkit.database.matrix.crx": [[18, 2, 2, 0, "theta", "the (batched) parameter, with shape [1]."]], "quairkit.database.matrix.crx_gate": [[18, 2, 2, 0, "theta", "the (batched) parameter, with shape [1]."]], "quairkit.database.matrix.cry": [[18, 2, 2, 0, "theta", "the (batched) parameter, with shape [1]."]], "quairkit.database.matrix.cry_gate": [[18, 2, 2, 0, "theta", "the (batched) parameter, with shape [1]."]], "quairkit.database.matrix.crz": [[18, 2, 2, 0, "theta", "the (batched) parameter, with shape [1]."]], "quairkit.database.matrix.crz_gate": [[18, 2, 2, 0, "theta", "the (batched) parameter, with shape [1]."]], "quairkit.database.matrix.cu": [[18, 2, 2, 0, "theta", "the (batched) parameters, with shape [4, 1]."]], "quairkit.database.matrix.cu_gate": [[18, 2, 2, 0, "theta", "the (batched) parameters, with shape [4, 1]."]], "quairkit.database.matrix.eye": [[18, 2, 2, 0, "dim", "the dimension of the identity matrix (default is 2 for a qubit)."]], "quairkit.database.matrix.eye_gate": [[18, 2, 2, 0, "dim", "the dimension of the identity matrix (default is 2 for a qubit)."]], "quairkit.database.matrix.grover_matrix": [[18, 2, 2, "quairkit.database.matrix.grover_matrix", "dtype", "Construct the Grover operator based on oracle."], [18, 2, 2, 0, "oracle", "the input oracle A to be rotated."]], "quairkit.database.matrix.p": [[18, 2, 2, 0, "theta", "the (batched) parameter, with shape [1]."]], "quairkit.database.matrix.p_gate": [[18, 2, 2, 0, "theta", "the (batched) parameter, with shape [1]."]], "quairkit.database.matrix.permutation_matrix": [[18, 2, 2, 0, "perm", "A list representing the permutation of subsystems. For example, [1, 0, 2] swaps the first two subsystems."], [18, 2, 2, 0, "system_dim", "The dimension of each subsystem. - If an integer, all subsystems are assumed to have the same dimension. - If a list, it specifies the dimension of each subsystem individually."]], "quairkit.database.matrix.phase": [[18, 2, 2, 0, "dim", "dimension of qudit"]], "quairkit.database.matrix.phase_gate": [[18, 2, 2, 0, "dim", "dimension of qudit"]], "quairkit.database.matrix.qft_matrix": [[18, 2, 2, 0, "num_qubits", "number of qubits n st."]], "quairkit.database.matrix.rx": [[18, 2, 2, 0, "theta", "the (batched) parameter, with shape [1]."]], "quairkit.database.matrix.rx_gate": [[18, 2, 2, 0, "theta", "the (batched) parameter, with shape [1]."]], "quairkit.database.matrix.rxx": [[18, 2, 2, 0, "theta", "the (batched) parameter, with shape [1]."]], "quairkit.database.matrix.rxx_gate": [[18, 2, 2, 0, "theta", "the (batched) parameter, with shape [1]."]], "quairkit.database.matrix.ry": [[18, 2, 2, 0, "theta", "the (batched) parameter, with shape [1]."]], "quairkit.database.matrix.ry_gate": [[18, 2, 2, 0, "theta", "the (batched) parameter, with shape [1]."]], "quairkit.database.matrix.ryy": [[18, 2, 2, 0, "theta", "the (batched) parameter, with shape [1]."]], "quairkit.database.matrix.ryy_gate": [[18, 2, 2, 0, "theta", "the (batched) parameter, with shape [1]."]], "quairkit.database.matrix.rz": [[18, 2, 2, 0, "theta", "the (batched) parameter, with shape [1]."]], "quairkit.database.matrix.rz_gate": [[18, 2, 2, 0, "theta", "the (batched) parameter, with shape [1]."]], "quairkit.database.matrix.rzz": [[18, 2, 2, 0, "theta", "the (batched) parameter, with shape [1]."]], "quairkit.database.matrix.rzz_gate": [[18, 2, 2, 0, "theta", "the (batched) parameter, with shape [1]."]], "quairkit.database.matrix.shift": [[18, 2, 2, 0, "dim", "dimension of qudit"]], "quairkit.database.matrix.shift_gate": [[18, 2, 2, 0, "dim", "dimension of qudit"]], "quairkit.database.matrix.u3": [[18, 2, 2, 0, "theta", "the (batched) parameters, with shape [3, 1]."]], "quairkit.database.matrix.u3_gate": [[18, 2, 2, 0, "theta", "the (batched) parameters, with shape [3, 1]."]], "quairkit.database.matrix.universal2": [[18, 2, 2, 0, "theta", "the (batched) parameter with shape [15]."]], "quairkit.database.matrix.universal2_gate": [[18, 2, 2, 0, "theta", "the (batched) parameter with shape [15]."]], "quairkit.database.matrix.universal3": [[18, 2, 2, 0, "theta", "the (batched) parameter with shape [81]."]], "quairkit.database.matrix.universal3_gate": [[18, 2, 2, 0, "theta", "the (batched) parameter with shape [81]."]], "quairkit.database.matrix.universal_qudit": [[18, 2, 2, 0, "dimension", "the dimension of the qudit."], [18, 2, 2, 0, "theta", "the (batched) parameter with shape [dimension**2 - 1]."]], "quairkit.database.random": [[19, 5, 1, 0, "haar_density_operator", "Randomly generate a density matrix following Haar measure."], [19, 5, 1, 0, "haar_orthogonal", "Randomly generate an orthogonal matrix following Haar measure, referenced by arXiv:math-ph/0609050v2."], [19, 5, 1, 0, "haar_state_vector", "Randomly generate a state vector following Haar measure."], [19, 5, 1, 0, "haar_unitary", "Randomly generate a unitary following Haar measure, referenced by arXiv:math-ph/0609050v2."], [19, 5, 1, 0, "random_channel", "Generate a random channel from its Stinespring representation."], [19, 5, 1, 0, "random_clifford", "Generate a random Clifford unitary."], [19, 5, 1, 0, "random_density_matrix", "Randomly generate an num_qubits-qubit state in density matrix form."], [19, 5, 1, 0, "random_hamiltonian_generator", "Generate a random Hamiltonian."], [19, 5, 1, 0, "random_hermitian", "Randomly generate a normalized 2^n \\times 2^n Hermitian matrix."], [19, 5, 1, 0, "random_orthogonal_projection", "Randomly generate a d \\times d orthogonal projector."], [19, 5, 1, 0, "random_pauli_str_generator", "Generate a random observable in list form."], [19, 5, 1, 0, "random_projector", "Randomly generate a d \\times d orthogonal projector."], [19, 5, 1, 0, "random_state", "Generate a random quantum state."], [19, 5, 1, 0, "random_unitary", "Randomly generate a d \\times d unitary."], [19, 5, 1, 0, "random_unitary_hermitian", "Randomly generate a 2^n \\times 2^n Hermitian unitary."], [19, 5, 1, 0, "random_unitary_with_hermitian_block", "Randomly generate a unitary 2^n \\times 2^n matrix that is a block encoding of a 2^{n/2} \\times 2^{n/2} Hermitian matrix."]], "quairkit.database.random.haar_density_operator": [[19, 2, 2, 0, "dim", "Dimension of the density matrix."], [19, 2, 2, 0, "is_real", "Whether the density matrix is real."], [19, 2, 2, 0, "rank", "Rank of the density matrix."]], "quairkit.database.random.haar_orthogonal": [[19, 2, 2, 0, "dim", "Dimension of the orthogonal matrix."]], "quairkit.database.random.haar_state_vector": [[19, 2, 2, 0, "dim", "Dimension of the state vector."], [19, 2, 2, 0, "is_real", "Whether the vector is real."]], "quairkit.database.random.haar_unitary": [[19, 2, 2, 0, "dim", "Dimension of the unitary."]], "quairkit.database.random.random_channel": [[19, 2, 2, 0, "num_systems", "Number of systems."], [19, 2, 2, 0, "rank", "Rank of this channel."], [19, 2, 2, 0, "size", "Batch size."], [19, 2, 2, 0, "system_dim", "Dimension of systems."], [19, 2, 2, 0, "target", "Target representation; should be 'choi', 'kraus' or 'stinespring'."]], "quairkit.database.random.random_clifford": [[19, 2, 2, 0, "num_qubits", "The number of qubits (n)."]], "quairkit.database.random.random_density_matrix": [[19, 2, 2, 0, "num_qubits", "Number of qubits n."]], "quairkit.database.random.random_hamiltonian_generator": [[19, 2, 2, 0, "num_qubits", "Number of qubits."], [19, 2, 2, 0, "terms", "Number of terms in the Hamiltonian."]], "quairkit.database.random.random_hermitian": [[19, 2, 2, 0, "num_qubits", "Number of qubits n."]], "quairkit.database.random.random_orthogonal_projection": [[19, 2, 2, 0, "num_systems", "Number of systems."], [19, 2, 2, 0, "size", "Number of projectors."], [19, 2, 2, 0, "system_dim", "Dimension of systems."]], "quairkit.database.random.random_pauli_str_generator": [[19, 2, 2, 0, "num_qubits", "Number of qubits."], [19, 2, 2, 0, "terms", "Number of terms in the observable."]], "quairkit.database.random.random_projector": [[19, 2, 2, 0, "num_systems", "Number of systems."], [19, 2, 2, 0, "size", "Number of projectors."], [19, 2, 2, 0, "system_dim", "Dimension of systems."]], "quairkit.database.random.random_state": [[19, 2, 2, 0, "is_real", "If the quantum state only contains real numbers."], [19, 2, 2, 0, "num_systems", "The number of qubits contained in the quantum state."], [19, 2, 2, 0, "rank", "The rank of the density matrix."], [19, 2, 2, 0, "size", "Batch size."], [19, 2, 2, 0, "system_dim", "Dimension of systems."]], "quairkit.database.random.random_unitary": [[19, 2, 2, 0, "num_systems", "Number of systems in this unitary (alias of num_qubits)."], [19, 2, 2, 0, "size", "Batch size."], [19, 2, 2, 0, "system_dim", "Dimension of systems."]], "quairkit.database.random.random_unitary_hermitian": [[19, 2, 2, 0, "num_qubits", "Number of qubits n."]], "quairkit.database.random.random_unitary_with_hermitian_block": [[19, 2, 2, 0, "is_unitary", "Whether the Hermitian block is a unitary divided by 2 (for tutorial only)."], [19, 2, 2, 0, "num_qubits", "Number of qubits n."]], "quairkit.database.representation": [[20, 5, 1, 0, "amplitude_damping_kraus", "Kraus representation of an amplitude damping channel with form"], [20, 5, 1, 0, "bit_flip_kraus", "Kraus representation of a bit flip channel with form"], [20, 5, 1, 0, "bit_phase_flip_kraus", "Kraus representation of a bit-phase flip channel with form"], [20, 5, 1, 0, "depolarizing_kraus", "Kraus representation of a depolarizing channel with form"], [20, 5, 1, 0, "generalized_amplitude_damping_kraus", "Kraus representation of a generalized amplitude damping channel with form"], [20, 5, 1, 0, "generalized_depolarizing_kraus", "Kraus representation of a generalized depolarizing channel with form"], [20, 5, 1, 0, "pauli_kraus", "Kraus representation of a pauli channel"], [20, 5, 1, 0, "phase_damping_kraus", "Kraus representation of a phase damping channel with form"], [20, 5, 1, 0, "phase_flip_kraus", "Kraus representation of a phase flip channel with form"], [20, 5, 1, 0, "replacement_choi", "Choi representation of a replacement channel"], [20, 5, 1, 0, "reset_kraus", "Kraus representation of a reset channel with form"], [20, 5, 1, 0, "thermal_relaxation_kraus", "Kraus representation of a thermal relaxation channel"]], "quairkit.database.representation.amplitude_damping_kraus": [[20, 2, 2, 0, "gamma", "coefficient \\gamma."]], "quairkit.database.representation.bit_flip_kraus": [[20, 2, 2, 0, "prob", "probability p."]], "quairkit.database.representation.bit_phase_flip_kraus": [[20, 2, 2, 0, "prob", "probability p."]], "quairkit.database.representation.depolarizing_kraus": [[20, 2, 2, 0, "prob", "probability p."]], "quairkit.database.representation.generalized_amplitude_damping_kraus": [[20, 2, 2, 0, "gamma", "coefficient \\gamma."], [20, 2, 2, 0, "prob", "probability p."]], "quairkit.database.representation.generalized_depolarizing_kraus": [[20, 2, 2, 0, "num_qubits", "number of qubits n of this channel."], [20, 2, 2, 0, "prob", "probability p."]], "quairkit.database.representation.pauli_kraus": [[20, 2, 2, 0, "prob", "a list of three probabilities corresponding to X, Y, Z gate p."]], "quairkit.database.representation.phase_damping_kraus": [[20, 2, 2, 0, "gamma", "coefficient \\gamma."]], "quairkit.database.representation.phase_flip_kraus": [[20, 2, 2, 0, "prob", "probability p."]], "quairkit.database.representation.replacement_choi": [[20, 2, 2, 0, "sigma", "output state of this channel."]], "quairkit.database.representation.reset_kraus": [[20, 2, 2, 0, "prob", "list of two probabilities of resetting to state |0\\rangle and |1\\rangle."]], "quairkit.database.representation.thermal_relaxation_kraus": [[20, 2, 2, 0, "const_t", "list of T_1 and T_2 relaxation time in microseconds."], [20, 2, 2, 0, "exec_time", "quantum gate execution time in the process of relaxation in nanoseconds."]], "quairkit.database.set": [[21, 5, 1, 0, "bell_basis", "Generate the Bell basis for a 2-qubit system, with each basis state accessible along the first dimension of a tensor."], [21, 5, 1, 0, "gell_mann", "Generate a set of Gell-Mann matrices for a given dimension. These matrices span the entire space of dim-by-dim matrices, and they generalize the Pauli operators when dim = 2 and the Gell-Mann operators when dim = 3."], [21, 5, 1, 0, "heisenberg_weyl", "Generate Heisenberg-Weyl operator for qudit. The Heisenberg-Weyl operators are defined as T(a,b) = e^{-(d+1) \\pi i a b/ d}Z^a X^b."], [21, 5, 1, 0, "pauli_basis", "Generate a Pauli basis."], [21, 5, 1, 0, "pauli_group", "Generate a Pauli group i.e., an unnormalized Pauli basis."], [21, 5, 1, 0, "pauli_str_basis", "Get the state basis with respect to the Pauli string."], [21, 5, 1, 0, "pauli_str_povm", "Get the povm with respect to the Pauli string."], [21, 5, 1, 0, "phase_space_point", "Generate phase space point operator for qudit."], [21, 5, 1, 0, "qft_basis", "Compute the eigenvectors (eigenbasis) of the Quantum Fourier Transform (QFT) matrix."], [21, 5, 1, 0, "std_basis", "Generate all standard basis states for a given number of qubits."]], "quairkit.database.set.gell_mann": [[21, 2, 2, 0, "dim", "a positive integer indicating the dimension."]], "quairkit.database.set.heisenberg_weyl": [[21, 2, 2, 0, "dim", "dimension of qudit"]], "quairkit.database.set.pauli_basis": [[21, 2, 2, 0, "num_qubits", "the number of qubits n."]], "quairkit.database.set.pauli_group": [[21, 2, 2, 0, "num_qubits", "the number of qubits n."]], "quairkit.database.set.pauli_str_basis": [[21, 2, 2, 0, "pauli_str", "the string composed of 'i', 'x', 'y' and 'z' only."]], "quairkit.database.set.pauli_str_povm": [[21, 2, 2, 0, "pauli_str", "the string composed of 'i', 'x', 'y' and 'z' only."]], "quairkit.database.set.phase_space_point": [[21, 2, 2, 0, "dim", "dimension of qudit"]], "quairkit.database.set.qft_basis": [[21, 2, 2, 0, "num_qubits", "Number of qubits n such that N = 2^n."]], "quairkit.database.set.std_basis": [[21, 2, 2, 0, "num_systems", "number of systems in this state."], [21, 2, 2, 0, "system_dim", "dimension of systems."]], "quairkit.database.state": [[22, 5, 1, 0, "bell_diagonal_state", "Generate a Bell diagonal state."], [22, 5, 1, 0, "bell_state", "Generate a Bell state."], [22, 5, 1, 0, "completely_mixed_computational", "Generate the density matrix of the completely mixed state."], [22, 5, 1, 0, "computational_state", "Generate a computational state |e_{i}\\rangle, whose i-th element is 1 and all the other elements are 0."], [22, 5, 1, 0, "ghz_state", "Generate a GHZ-state."], [22, 5, 1, 0, "isotropic_state", "Generate the isotropic state."], [22, 5, 1, 0, "one_state", "Generate a one state."], [22, 5, 1, 0, "r_state", "Generate an R-state."], [22, 5, 1, 0, "s_state", "Generate the S-state."], [22, 5, 1, 0, "w_state", "Generate a W-state."], [22, 5, 1, 0, "zero_state", "Generate a zero state."]], "quairkit.database.state.bell_diagonal_state": [[22, 2, 2, 0, "prob", "The probability of each Bell state."]], "quairkit.database.state.bell_state": [[22, 2, 2, 0, "num_systems", "Number of systems in this state."], [22, 2, 2, 0, "system_dim", "Dimension of systems."]], "quairkit.database.state.completely_mixed_computational": [[22, 2, 2, 0, "num_qubits", "The number of qubits in the quantum state."]], "quairkit.database.state.computational_state": [[22, 2, 2, 0, "index", "Index i of the computational basis state |e_{i}\\rangle."], [22, 2, 2, 0, "num_systems", "Number of systems in this state."], [22, 2, 2, 0, "system_dim", "Dimension of systems."]], "quairkit.database.state.ghz_state": [[22, 2, 2, 0, "num_qubits", "The number of qubits in the quantum state."]], "quairkit.database.state.isotropic_state": [[22, 2, 2, 0, "num_qubits", "The number of qubits in the quantum state."], [22, 2, 2, 0, "prob", "The parameter of the isotropic state to be generated."]], "quairkit.database.state.one_state": [[22, 2, 2, 0, "num_systems", "Number of systems in this state."], [22, 2, 2, 0, "system_dim", "Dimension of systems."]], "quairkit.database.state.r_state": [[22, 2, 2, 0, "prob", "The parameter of the R-state to be generated."]], "quairkit.database.state.s_state": [[22, 2, 2, 0, "prob", "The parameter of the S-state to be generated."]], "quairkit.database.state.w_state": [[22, 2, 2, 0, "num_qubits", "The number of qubits in the quantum state."]], "quairkit.database.state.zero_state": [[22, 2, 2, 0, "num_systems", "Number of systems in this state."], [22, 2, 2, 0, "system_dim", "Dimension of systems."]], "quairkit.loss": [[24, 0, 0, 1, "distance", ""], [25, 0, 0, 1, "measure", ""]], "quairkit.loss.distance": [[24, 1, 1, 0, "StateFidelity", "The class of the loss function to compute the state fidelity."], [24, 1, 1, 0, "TraceDistance", "The class of the loss function to compute the trace distance."]], "quairkit.loss.distance.StateFidelity": [[24, 3, 1, 0, "forward", "Compute the state fidelity between the input state and the target state."]], "quairkit.loss.distance.StateFidelity.__init__": [[24, 2, 2, 0, "target_state", "The target state to be used to compute the state fidelity."]], "quairkit.loss.distance.StateFidelity.forward": [[24, 2, 2, 0, "state", "The input state which will be used to compute the state fidelity with the target state."]], "quairkit.loss.distance.TraceDistance": [[24, 3, 1, 0, "forward", "Compute the trace distance between the input state and the target state."]], "quairkit.loss.distance.TraceDistance.__init__": [[24, 2, 2, 0, "target_state", "The target state to be used to compute the trace distance."]], "quairkit.loss.distance.TraceDistance.forward": [[24, 2, 2, 0, "state", "The input state which will be used to compute the trace distance with the target state."]], "quairkit.loss.measure": [[25, 1, 1, 0, "ExpecVal", "The class of the loss function to compute the expectation value for the observable."], [25, 1, 1, 0, "Measure", "Compute the probability of the specified measurement result."]], "quairkit.loss.measure.ExpecVal": [[25, 3, 1, 0, "forward", "Compute the expectation value of the observable with respect to the input state."]], "quairkit.loss.measure.ExpecVal.__init__": [[25, 2, 2, 0, "hamiltonian", "The input observable."]], "quairkit.loss.measure.ExpecVal.forward": [[25, 2, 2, 0, "decompose", "Defaults to False."], [25, 2, 2, 0, "state", "The input state which will be used to compute the expectation value."]], "quairkit.loss.measure.Measure": [[25, 3, 1, 0, "forward", "Compute the probability of measurement to the input state."]], "quairkit.loss.measure.Measure.__init__": [[25, 2, 2, 0, "measure_op", "Specify the basis of the measurement."]], "quairkit.loss.measure.Measure.forward": [[25, 2, 2, 0, "desired_result", "Specify the results of the measurement to return."], [25, 2, 2, 0, "keep_state", "Whether return the measured state."], [25, 2, 2, 0, "state", "The quantum state to be measured."], [25, 2, 2, 0, "system_idx", "The index of the systems to be measured."]], "quairkit.operator": [[37, 0, 0, 1, "special", ""]], "quairkit.operator.channel": [[28, 0, 0, 1, "base", ""], [29, 0, 0, 1, "common", ""], [30, 0, 0, 1, "custom", ""]], "quairkit.operator.channel.base": [[28, 1, 1, 0, "Channel", "Basic class for quantum channels."]], "quairkit.operator.channel.base.Channel": [[28, 4, 1, 0, "choi_repr", "Choi representation of a channel"], [28, 4, 1, 0, "dim", "Dimension of the input/output system of this channel"], [28, 4, 1, 0, "info", "Information of this channel"], [28, 4, 1, 0, "kraus_repr", "Kraus representation of a channel"], [28, 4, 1, 0, "stinespring_repr", "Stinespring representation of a channel"]], "quairkit.operator.channel.base.Channel.__init__": [[28, 2, 2, 0, "acted_system_dim", "dimension of systems that this channel acts on."], [28, 2, 2, 0, "channel_info", "additional information of this channel."], [28, 2, 2, 0, "check_legality", "whether check the completeness of the representation if provided."], [28, 2, 2, 0, "representation", "the representation of this channel."], [28, 2, 2, 0, "system_idx", "indices of the system on which this channel acts on."], [28, 2, 2, 0, "type_repr", "type of a representation, should be 'choi', 'kraus', 'stinespring' or 'gate'."]], "quairkit.operator.channel.common": [[29, 1, 1, 0, "AmplitudeDamping", "A collection of amplitude damping channels."], [29, 1, 1, 0, "BitFlip", "A collection of bit flip channels."], [29, 1, 1, 0, "BitPhaseFlip", "A collection of bit phase flip channels."], [29, 1, 1, 0, "Depolarizing", "A collection of depolarizing channels."], [29, 1, 1, 0, "GeneralizedAmplitudeDamping", "A collection of generalized amplitude damping channels."], [29, 1, 1, 0, "GeneralizedDepolarizing", "A generalized depolarizing channel."], [29, 1, 1, 0, "PauliChannel", "A collection of Pauli channels."], [29, 1, 1, 0, "PhaseDamping", "A collection of phase damping channels."], [29, 1, 1, 0, "PhaseFlip", "A collection of phase flip channels."], [29, 1, 1, 0, "ReplacementChannel", "A collection of quantum replacement channels."], [29, 1, 1, 0, "ResetChannel", "A collection of reset channels."], [29, 1, 1, 0, "ThermalRelaxation", "A collection of thermal relaxation channels."]], "quairkit.operator.channel.common.AmplitudeDamping.__init__": [[29, 2, 2, 0, "gamma", "Damping probability."], [29, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the channels act."]], "quairkit.operator.channel.common.BitFlip.__init__": [[29, 2, 2, 0, "prob", "Probability of a bit flip."], [29, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the channels act."]], "quairkit.operator.channel.common.BitPhaseFlip.__init__": [[29, 2, 2, 0, "prob", "Probability of a bit phase flip."], [29, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the channels act."]], "quairkit.operator.channel.common.Depolarizing.__init__": [[29, 2, 2, 0, "prob", "Parameter of the depolarizing channels."], [29, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the channels act."]], "quairkit.operator.channel.common.GeneralizedAmplitudeDamping.__init__": [[29, 2, 2, 0, "gamma", "Damping probability."], [29, 2, 2, 0, "prob", "Excitation probability."], [29, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the channels act."]], "quairkit.operator.channel.common.GeneralizedDepolarizing.__init__": [[29, 2, 2, 0, "num_qubits", "Total number of qubits."], [29, 2, 2, 0, "prob", "probability p."], [29, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the channels act, the length of which is n. Defaults to be None."]], "quairkit.operator.channel.common.PauliChannel.__init__": [[29, 2, 2, 0, "prob", "Probabilities corresponding to the Pauli X, Y, and Z operators."], [29, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the channels act."]], "quairkit.operator.channel.common.PhaseDamping.__init__": [[29, 2, 2, 0, "gamma", "Parameter of the phase damping channels."], [29, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the channels act."]], "quairkit.operator.channel.common.PhaseFlip.__init__": [[29, 2, 2, 0, "prob", "Probability of a phase flip."], [29, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the channels act."]], "quairkit.operator.channel.common.ReplacementChannel.__init__": [[29, 2, 2, 0, "sigma", "The state to be replaced."], [29, 2, 2, 0, "system_idx", "Indices of the qubits on which the channels act, the length of which is n. Defaults to list(range(# of acted qubits))."]], "quairkit.operator.channel.common.ResetChannel.__init__": [[29, 2, 2, 0, "prob", "Probabilities of resetting to |0\\rangle and to |1\\rangle."], [29, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the channels act."]], "quairkit.operator.channel.common.ThermalRelaxation.__init__": [[29, 2, 2, 0, "const_t", "T_1 and T_2 relaxation time in microseconds."], [29, 2, 2, 0, "exec_time", "Quantum gate execution time in the process of relaxation in nanoseconds."], [29, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the channels act."]], "quairkit.operator.channel.custom": [[30, 1, 1, 0, "ChoiRepr", "A custom channel in Choi representation."], [30, 1, 1, 0, "KrausRepr", "A custom channel in Kraus representation."], [30, 1, 1, 0, "StinespringRepr", "A custom channel in Stinespring representation."]], "quairkit.operator.channel.custom.ChoiRepr.__init__": [[30, 2, 2, 0, "acted_system_dim", "dimension of systems that this channel acts on."], [30, 2, 2, 0, "choi_repr", "Choi operator of this channel."], [30, 2, 2, 0, "system_idx", "Indices of the systems on which this channel acts."]], "quairkit.operator.channel.custom.KrausRepr.__init__": [[30, 2, 2, 0, "acted_system_dim", "dimension of systems that this channel acts on."], [30, 2, 2, 0, "kraus_repr", "list of Kraus operators of this channel."], [30, 2, 2, 0, "system_idx", "Indices of the systems on which this channel acts."]], "quairkit.operator.channel.custom.StinespringRepr.__init__": [[30, 2, 2, 0, "acted_system_dim", "dimension of systems that this channel acts on."], [30, 2, 2, 0, "stinespring_mat", "Stinespring matrix that represents this channel."], [30, 2, 2, 0, "system_idx", "Indices of the systems on which this channel acts."]], "quairkit.operator.gate": [[32, 0, 0, 1, "base", ""], [33, 0, 0, 1, "custom", ""], [34, 0, 0, 1, "multi_qubit_gate", ""], [35, 0, 0, 1, "single_qubit_gate", ""], [36, 0, 0, 1, "visual", ""]], "quairkit.operator.gate.base": [[32, 1, 1, 0, "Gate", "Base class for quantum gates."], [32, 1, 1, 0, "ParamGate", "Base class for quantum parameterized gates."]], "quairkit.operator.gate.base.Gate": [[32, 3, 1, 0, "display_in_circuit", "The display function called by circuit instance when plotting."], [32, 4, 1, 0, "matrix", "Unitary matrix of this gate"]], "quairkit.operator.gate.base.Gate.__init__": [[32, 2, 2, 0, "acted_system_dim", "dimension of systems that this gate acts on."], [32, 2, 2, 0, "check_legality", "whether check the completeness of the matrix if provided."], [32, 2, 2, 0, "gate_info", "information of this gate that will be placed into the gate history or plotted by a Circuit. Defaults to None."], [32, 2, 2, 0, "matrix", "the matrix of this gate."], [32, 2, 2, 0, "system_idx", "indices of the systems that this gate acts on."]], "quairkit.operator.gate.base.Gate.display_in_circuit": [[32, 2, 2, 0, "ax", "the matplotlib.axes.Axes instance"], [32, 2, 2, 0, "x", "the start horizontal position"]], "quairkit.operator.gate.base.ParamGate": [[32, 3, 1, 0, "display_in_circuit", "The display function called by circuit instance when plotting."], [32, 4, 1, 0, "info", "Information of this gate."]], "quairkit.operator.gate.base.ParamGate.__init__": [[32, 2, 2, 0, "acted_system_dim", "dimension of systems that this gate acts on."], [32, 2, 2, 0, "check_legality", "whether check the completeness of the matrix if provided."], [32, 2, 2, 0, "gate_info", "information of this gate that will be placed into the gate history or plotted by a Circuit. Defaults to None."], [32, 2, 2, 0, "generator", "function that generates the unitary matrix of this gate."], [32, 2, 2, 0, "num_acted_param", "the number of parameters required for a single operation."], [32, 2, 2, 0, "param", "input parameters of quantum parameterized gates."], [32, 2, 2, 0, "param_sharing", "whether all operations are shared by the same parameter set."], [32, 2, 2, 0, "support_batch", "whether generator support batch inputs."], [32, 2, 2, 0, "system_idx", "indices of the qubits on which this gate acts on."]], "quairkit.operator.gate.base.ParamGate.display_in_circuit": [[32, 2, 2, 0, "ax", "the matplotlib.axes.Axes instance"], [32, 2, 2, 0, "x", "the start horizontal position"]], "quairkit.operator.gate.custom": [[33, 1, 1, 0, "ControlOracle", "A controlled oracle as a gate."], [33, 1, 1, 0, "ControlParamOracle", "An parameterized oracle as a gate"], [33, 1, 1, 0, "Oracle", "An oracle as a gate."], [33, 1, 1, 0, "ParamOracle", "An parameterized oracle as a gate"], [33, 1, 1, 0, "Permutation", "permutation matrix as a gate."], [33, 1, 1, 0, "UniversalQudits", "A collection of universal qudit gates. One of such a gate requires d^2 - 1 parameters."]], "quairkit.operator.gate.custom.ControlOracle.__init__": [[33, 2, 2, 0, "acted_system_dim", "dimension of systems that this gate acts on."], [33, 2, 2, 0, "gate_info", "information of this gate that will be placed into the gate history or plotted by a Circuit. Defaults to None."], [33, 2, 2, 0, "index", "control index that activates the matrix."], [33, 2, 2, 0, "oracle", "Unitary oracle to be implemented."], [33, 2, 2, 0, "system_idx", "Indices of the systems on which the gates are applied."]], "quairkit.operator.gate.custom.ControlParamOracle.__init__": [[33, 2, 2, 0, "acted_system_dim", "dimension of systems that this gate acts on."], [33, 2, 2, 0, "gate_info", "information of this gate that will be placed into the gate history or plotted by a Circuit. Defaults to None."], [33, 2, 2, 0, "generator", "function that generates the oracle."], [33, 2, 2, 0, "index", "control index that activates the matrix."], [33, 2, 2, 0, "num_acted_param", "the number of parameters required for a single operation."], [33, 2, 2, 0, "param", "input parameters of quantum parameterized gates."], [33, 2, 2, 0, "support_batch", "whether the generator supports batched input."], [33, 2, 2, 0, "system_idx", "Indices of the systems on which the gates are applied."]], "quairkit.operator.gate.custom.Oracle": [[33, 4, 1, 0, "info", "Information of this gate."]], "quairkit.operator.gate.custom.Oracle.__init__": [[33, 2, 2, 0, "acted_system_dim", "dimension of systems that this gate acts on."], [33, 2, 2, "quairkit.operator.gate.custom.Oracle", "gate_info", "An oracle as a gate."], [33, 2, 2, 0, "oracle", "Unitary oracle to be implemented."], [33, 2, 2, 0, "system_idx", "Indices of the systems on which the gates are applied."]], "quairkit.operator.gate.custom.ParamOracle.__init__": [[33, 2, 2, 0, "acted_system_dim", "dimension of systems that this gate acts on."], [33, 2, 2, 0, "gate_info", "information of this gate that will be placed into the gate history or plotted by a Circuit. Defaults to None."], [33, 2, 2, 0, "generator", "function that generates the oracle."], [33, 2, 2, 0, "num_acted_param", "the number of parameters required for a single operation."], [33, 2, 2, 0, "param", "input parameters of quantum parameterized gates."], [33, 2, 2, 0, "support_batch", "whether the generator supports batched input."], [33, 2, 2, 0, "system_idx", "indices of the system on which this gate acts on."]], "quairkit.operator.gate.custom.Permutation.__init__": [[33, 2, 2, 0, "acted_system_dim", "dimension of systems that this gate acts on."], [33, 2, 2, 0, "perm", "A list representing the permutation of subsystems. For example, [1, 0, 2] swaps the first two subsystems."], [33, 2, 2, 0, "system_idx", "Indices of the systems on which the gates are applied."]], "quairkit.operator.gate.custom.UniversalQudits.__init__": [[33, 2, 2, 0, "acted_system_dim", "dimension of systems that this gate acts on."], [33, 2, 2, 0, "param", "Parameters of the gates."], [33, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [33, 2, 2, 0, "system_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.multi_qubit_gate": [[34, 1, 1, 0, "CCX", "A collection of CCX (Toffoli) gates."], [34, 1, 1, 0, "CNOT", "A collection of CNOT gates."], [34, 1, 1, 0, "CP", "A collection of controlled P gates."], [34, 1, 1, 0, "CRX", "A collection of controlled rotation gates about the x-axis."], [34, 1, 1, 0, "CRY", "A collection of controlled rotation gates about the y-axis."], [34, 1, 1, 0, "CRZ", "A collection of controlled rotation gates about the z-axis."], [34, 1, 1, 0, "CSWAP", "A collection of CSWAP (Fredkin) gates."], [34, 1, 1, 0, "CU", "A collection of controlled single-qubit rotation gates."], [34, 6, 1, 0, "CX", "alias of CNOT"], [34, 1, 1, 0, "CY", "A collection of controlled Y gates."], [34, 1, 1, 0, "CZ", "A collection of controlled Z gates."], [34, 1, 1, 0, "MS", "A collection of M\u00f8lmer-S\u00f8rensen (MS) gates for trapped ion devices."], [34, 1, 1, 0, "RXX", "A collection of RXX gates."], [34, 1, 1, 0, "RYY", "A collection of RYY gates."], [34, 1, 1, 0, "RZZ", "A collection of RZZ gates."], [34, 1, 1, 0, "SWAP", "A collection of SWAP gates."], [34, 6, 1, 0, "Toffoli", "alias of CCX"]], "quairkit.operator.gate.multi_qubit_gate.CCX.__init__": [[34, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.multi_qubit_gate.CNOT.__init__": [[34, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.multi_qubit_gate.CP.__init__": [[34, 2, 2, 0, "param", "Parameters of the gates."], [34, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [34, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.multi_qubit_gate.CRX.__init__": [[34, 2, 2, 0, "param", "Parameters of the gates."], [34, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [34, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.multi_qubit_gate.CRY.__init__": [[34, 2, 2, 0, "param", "Parameters of the gates."], [34, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [34, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.multi_qubit_gate.CRZ.__init__": [[34, 2, 2, 0, "param", "Parameters of the gates."], [34, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [34, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.multi_qubit_gate.CSWAP.__init__": [[34, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.multi_qubit_gate.CU.__init__": [[34, 2, 2, 0, "param", "Parameters of the gates."], [34, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [34, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.multi_qubit_gate.CY.__init__": [[34, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.multi_qubit_gate.CZ.__init__": [[34, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.multi_qubit_gate.MS.__init__": [[34, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.multi_qubit_gate.RXX.__init__": [[34, 2, 2, 0, "param", "Parameters of the gates."], [34, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [34, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.multi_qubit_gate.RYY.__init__": [[34, 2, 2, 0, "param", "Parameters of the gates."], [34, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [34, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.multi_qubit_gate.RZZ.__init__": [[34, 2, 2, 0, "param", "Parameters of the gates."], [34, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [34, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.multi_qubit_gate.SWAP.__init__": [[34, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.single_qubit_gate": [[35, 1, 1, 0, "H", "A collection of single-qubit Hadamard gates."], [35, 1, 1, 0, "P", "A collection of single-qubit P gates."], [35, 1, 1, 0, "RX", "A collection of single-qubit rotation gates about the x-axis."], [35, 1, 1, 0, "RY", "A collection of single-qubit rotation gates about the y-axis."], [35, 1, 1, 0, "RZ", "A collection of single-qubit rotation gates about the z-axis."], [35, 1, 1, 0, "S", "A collection of single-qubit S gates."], [35, 1, 1, 0, "Sdg", "A collection of single-qubit S dagger (S inverse) gates."], [35, 1, 1, 0, "T", "A collection of single-qubit T gates."], [35, 1, 1, 0, "Tdg", "A collection of single-qubit T dagger (T inverse) gates."], [35, 1, 1, 0, "U3", "A collection of single-qubit rotation gates."], [35, 1, 1, 0, "X", "A collection of single-qubit X gates."], [35, 1, 1, 0, "Y", "A collection of single-qubit Y gates."], [35, 1, 1, 0, "Z", "A collection of single-qubit Z gates."]], "quairkit.operator.gate.single_qubit_gate.H.__init__": [[35, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.single_qubit_gate.P.__init__": [[35, 2, 2, 0, "param", "Parameters of the gates."], [35, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [35, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.single_qubit_gate.RX.__init__": [[35, 2, 2, 0, "param", "Parameters of the gates."], [35, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [35, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.single_qubit_gate.RY.__init__": [[35, 2, 2, 0, "param", "Parameters of the gates."], [35, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [35, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.single_qubit_gate.RZ.__init__": [[35, 2, 2, 0, "param", "Parameters of the gates."], [35, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [35, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.single_qubit_gate.S.__init__": [[35, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.single_qubit_gate.Sdg.__init__": [[35, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.single_qubit_gate.T.__init__": [[35, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.single_qubit_gate.Tdg.__init__": [[35, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.single_qubit_gate.U3.__init__": [[35, 2, 2, 0, "param", "Parameters of the gates."], [35, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [35, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.single_qubit_gate.X.__init__": [[35, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.single_qubit_gate.Y.__init__": [[35, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.single_qubit_gate.Z.__init__": [[35, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.visual": [[36, 5, 1, 0, "get_circuit_plot_param", "The output function of __CIRCUIT_PLOT_PARAM dictionary"], [36, 5, 1, 0, "reset_circuit_plot_param", "The reset function of __CIRCUIT_PLOT_PARAM dictionary"], [36, 5, 1, 0, "scale_circuit_plot_param", "The scale function of __CIRCUIT_PLOT_PARAM dictionary"], [36, 5, 1, 0, "set_circuit_plot_param", "The set function of __CIRCUIT_PLOT_PARAM dictionary"]], "quairkit.operator.gate.visual.scale_circuit_plot_param": [[36, 2, 2, 0, "scale", "the scalar for scaling the elements in the figure"]], "quairkit.operator.gate.visual.set_circuit_plot_param": [[36, 2, 2, 0, "kwargs", "parameters to update the __CIRCUIT_PLOT_PARAM dictionary"]], "quairkit.operator.special": [[37, 1, 1, 0, "Collapse", "The class to compute the collapse of the quantum state."], [37, 1, 1, 0, "OneWayLOCC", "A one-way LOCC protocol, where quantum measurement is modelled by a PVM and all channels are unitary channels."], [37, 1, 1, 0, "QuasiOperation", "A quantum protocol containing quasi-operations."], [37, 1, 1, 0, "ResetState", "The class to reset the quantum state. It will be implemented soon."]], "quairkit.operator.special.Collapse": [[37, 3, 1, 0, "forward", "Compute the collapse of the input state."], [37, 4, 1, 0, "info", "Information of this channel"]], "quairkit.operator.special.Collapse.__init__": [[37, 2, 2, 0, "acted_system_dim", "dimension of systems that this gate acts on."], [37, 2, 2, 0, "desired_result", "The desired result you want to collapse."], [37, 2, 2, 0, "if_print", "whether print the information about the collapsed state."], [37, 2, 2, 0, "measure_basis", "The basis of the measurement."], [37, 2, 2, 0, "system_idx", "list of systems to be collapsed."]], "quairkit.operator.special.Collapse.forward": [[37, 2, 2, 0, "state", "The input state, which will be collapsed"]], "quairkit.operator.special.OneWayLOCC": [[37, 3, 1, 0, "forward", "Compute the input state passing through the LOCC protocol."], [37, 4, 1, 0, "info", "Information of this channel"], [37, 4, 1, 0, "system_idx", "The system indices of the LOCC protocol."]], "quairkit.operator.special.OneWayLOCC.__init__": [[37, 2, 2, 0, "gate", "a Gate operator."], [37, 2, 2, 0, "label", "name of the measured label."], [37, 2, 2, 0, "latex_name", "latex name of the applied operator."], [37, 2, 2, 0, "measure_basis", "basis of the measurement."], [37, 2, 2, "quairkit.operator.special.OneWayLOCC", "measure_dim", "A one-way LOCC protocol, where quantum measurement is modelled by a PVM and all channels are unitary channels."], [37, 2, 2, "quairkit.operator.special.OneWayLOCC", "measure_idx", "A one-way LOCC protocol, where quantum measurement is modelled by a PVM and all channels are unitary channels."]], "quairkit.operator.special.OneWayLOCC.forward": [[37, 2, 2, 0, "state", "The input state."]], "quairkit.operator.special.QuasiOperation": [[37, 3, 1, 0, "forward", "Compute the input state passing through the quasi-operation."]], "quairkit.operator.special.QuasiOperation.__init__": [[37, 2, 2, 0, "acted_system_dim", "dimension of systems that these channels act on."], [37, 2, 2, 0, "list_channels", "a batched tensor that represents all unitaries."], [37, 2, 2, 0, "quasi_prob", "the quasi-probability distribution for this quasi-operation."], [37, 2, 2, 0, "system_idx", "indices of the systems on which the protocol is applied."], [37, 2, 2, 0, "type_repr", "one of 'choi', 'kraus', 'stinespring' or 'gate'."]], "quairkit.operator.special.QuasiOperation.forward": [[37, 2, 2, 0, "state", "The input state."]], "quairkit.operator.special.ResetState": [[37, 3, 1, 0, "forward", "The forward function."]], "quairkit.operator.special.ResetState.forward": [[37, 2, 2, "quairkit.operator.special.ResetState.forward", "inputs", "The forward function."], [37, 2, 2, "quairkit.operator.special.ResetState.forward", "kwargs", "The forward function."]], "quairkit.qinfo": [[39, 0, 0, 1, "check", ""], [40, 0, 0, 1, "linalg", ""], [41, 0, 0, 1, "qinfo", ""]], "quairkit.qinfo.check": [[39, 5, 1, 0, "is_choi", "Support batch input."], [39, 5, 1, 0, "is_density_matrix", "Support batch input"], [39, 5, 1, 0, "is_hermitian", "Support batch input."], [39, 5, 1, 0, "is_linear", "Check if the provided function 'func' is linear."], [39, 5, 1, 0, "is_positive", "Support batch input."], [39, 5, 1, 0, "is_povm", "Check if a set of operators forms a positive operator-valued measure (POVM)."], [39, 5, 1, 0, "is_ppt", "Support batch input."], [39, 5, 1, 0, "is_projector", "Support batch input."], [39, 5, 1, 0, "is_pvm", "Check if a set of operators forms a projection-valued measure (PVM)."], [39, 5, 1, 0, "is_state_vector", "Support batch input."], [39, 5, 1, 0, "is_unitary", "Support batch input."]], "quairkit.qinfo.check.is_choi": [[39, 2, 2, 0, "op", "matrix form of the linear operation."]], "quairkit.qinfo.check.is_density_matrix": [[39, 2, 2, 0, "eps", "tolerance of error, default to be None i.e."], [39, 2, 2, 0, "rho", "density matrix candidate"]], "quairkit.qinfo.check.is_hermitian": [[39, 2, 2, 0, "eps", "tolerance of error"], [39, 2, 2, 0, "mat", "hermitian candidate P"]], "quairkit.qinfo.check.is_linear": [[39, 2, 2, 0, "eps", "An optional tolerance value used to determine if the function's behavior is close enough to linear."], [39, 2, 2, 0, "func", "A callable function to be tested."], [39, 2, 2, 0, "info", "A parameter specifying the shape of the input for 'func'."], [39, 2, 2, "quairkit.qinfo.check.is_linear", "input_dtype", "Check if the provided function 'func' is linear."]], "quairkit.qinfo.check.is_positive": [[39, 2, 2, 0, "eps", "tolerance of error"], [39, 2, 2, 0, "mat", "positive operator candidate P"]], "quairkit.qinfo.check.is_povm": [[39, 2, 2, 0, "eps", "An optional tolerance value."], [39, 2, 2, 0, "set_op", "A set of operators indexed by the first dimension"]], "quairkit.qinfo.check.is_ppt": [[39, 2, 2, 0, "density_op", "Density matrix form of the quantum state."]], "quairkit.qinfo.check.is_projector": [[39, 2, 2, 0, "eps", "tolerance of error"], [39, 2, 2, 0, "mat", "projector candidate P"]], "quairkit.qinfo.check.is_pvm": [[39, 2, 2, 0, "eps", "An optional tolerance value."], [39, 2, 2, 0, "set_op", "A set of operators indexed by the first dimension"]], "quairkit.qinfo.check.is_state_vector": [[39, 2, 2, 0, "eps", "tolerance of error, default to be None i.e."], [39, 2, 2, 0, "vec", "state vector candidate x"]], "quairkit.qinfo.check.is_unitary": [[39, 2, 2, 0, "eps", "tolerance of error"], [39, 2, 2, 0, "mat", "unitary candidate P"]], "quairkit.qinfo.linalg": [[40, 5, 1, 0, "NKron", "Calculate the Kronecker product of matrices."], [40, 5, 1, 0, "abs_norm", "Tool for calculation of matrix norm."], [40, 5, 1, 0, "block_enc_herm", "Generate a (qubitized) block encoding of Hermitian mat."], [40, 5, 1, 0, "create_matrix", "Create a matrix representation of a linear map without needing to specify the output dimension."], [40, 5, 1, 0, "dagger", "Tool for calculation of matrix dagger."], [40, 5, 1, 0, "direct_sum", "Calculate the direct sum of A and B."], [40, 5, 1, 0, "gradient", "Compute the gradient of a given loss function with respect to its input variable."], [40, 5, 1, 0, "herm_transform", "Function transformation for a Hermitian matrix."], [40, 5, 1, 0, "hessian", "Compute the Hessian matrix of a given loss function with respect to its input variables."], [40, 5, 1, 0, "kron_power", "Calculate the Kronecker product of identical matrices."], [40, 5, 1, 0, "logm", "Calculate the logarithm of a matrix."], [40, 5, 1, 0, "nkron", "Calculate the Kronecker product of matrices."], [40, 5, 1, 0, "p_norm", "Calculate the Schatten p-norm of a matrix."], [40, 5, 1, 0, "partial_trace", "Calculate the partial trace of the quantum state."], [40, 5, 1, 0, "partial_trace_discontiguous", "Calculate the partial trace of the quantum state with arbitrarily selected subsystem."], [40, 5, 1, 0, "partial_transpose", "Calculate the partial transpose \\rho^{T_A} of the input quantum state."], [40, 5, 1, 0, "pauli_decomposition", "Decompose the matrix by the Pauli basis."], [40, 5, 1, 0, "permute_systems", "Permute quantum systems based on a permutation list."], [40, 5, 1, 0, "prob_sample", "Sample from a probability distribution."], [40, 5, 1, 0, "schmidt_decompose", "Calculate the Schmidt decomposition of a quantum state."], [40, 5, 1, 0, "sqrtm", "Calculate the square root of a matrix."], [40, 5, 1, 0, "trace", "Return the sum along the diagonals of the tensor."], [40, 5, 1, 0, "trace_norm", "Calculate the trace norm of a matrix."]], "quairkit.qinfo.linalg.NKron": [[40, 2, 2, 0, "args", "Other matrices."], [40, 2, 2, 0, "matrix_1st", "The first matrix."]], "quairkit.qinfo.linalg.abs_norm": [[40, 2, 2, 0, "mat", "matrix"]], "quairkit.qinfo.linalg.block_enc_herm": [[40, 2, 2, 0, "mat", "matrix to be block encoded"], [40, 2, 2, 0, "num_block_qubits", "ancilla qubits used in block encoding"]], "quairkit.qinfo.linalg.create_matrix": [[40, 2, 2, 0, "input_dim", "The dimension of the input space."], [40, 2, 2, 0, "input_dtype", "The dtype of the input."], [40, 2, 2, 0, "linear_map", "A function representing the linear map, which takes an input_dim-dimensional vector and returns a vector."]], "quairkit.qinfo.linalg.dagger": [[40, 2, 2, 0, "mat", "matrix"]], "quairkit.qinfo.linalg.direct_sum": [[40, 2, 2, 0, "A", "m \\times n matrix"], [40, 2, 2, 0, "B", "p \\times q matrix"]], "quairkit.qinfo.linalg.gradient": [[40, 2, 2, 0, "loss_function", "A loss function to compute the gradient."], [40, 2, 2, 0, "n", "The number of iterations for gradient computation."], [40, 2, 2, 0, "var", "A vector of shape (m, 1) as the input variables for the loss function."]], "quairkit.qinfo.linalg.herm_transform": [[40, 2, 2, 0, "fcn", "A function f that can be expanded by Taylor series."], [40, 2, 2, 0, "ignore_zero", "Whether to ignore eigenspaces with zero eigenvalue."], [40, 2, 2, 0, "mat", "Hermitian matrix H."]], "quairkit.qinfo.linalg.hessian": [[40, 2, 2, 0, "loss_function", "The loss function to compute the Hessian."], [40, 2, 2, 0, "var", "A matrix of shape (n, m) as input variables for the loss function."]], "quairkit.qinfo.linalg.kron_power": [[40, 2, 2, 0, "matrix", "The matrix to be powered."], [40, 2, 2, 0, "n", "The number of identical matrices."]], "quairkit.qinfo.linalg.logm": [[40, 2, 2, 0, "mat", "Input matrix."]], "quairkit.qinfo.linalg.nkron": [[40, 2, 2, 0, "args", "Other matrices."], [40, 2, 2, 0, "matrix_1st", "The first matrix."]], "quairkit.qinfo.linalg.p_norm": [[40, 2, 2, 0, "mat", "matrix"], [40, 2, 2, 0, "p", "p-norm parameter"]], "quairkit.qinfo.linalg.partial_trace": [[40, 2, 2, 0, "state", "Input quantum state."], [40, 2, 2, 0, "system_dim", "The dimension of all systems."], [40, 2, 2, 0, "trace_idx", "The system indices to be traced out."]], "quairkit.qinfo.linalg.partial_trace_discontiguous": [[40, 2, 2, 0, "preserve_qubits", "Remaining qubits; if None, all qubits are preserved."], [40, 2, 2, 0, "state", "Input quantum state."]], "quairkit.qinfo.linalg.partial_transpose": [[40, 2, 2, 0, "state", "Input quantum state."], [40, 2, 2, 0, "system_dim", "The dimension of all systems."], [40, 2, 2, 0, "transpose_idx", "The system indices to be transposed."]], "quairkit.qinfo.linalg.pauli_decomposition": [[40, 2, 2, 0, "mat", "The matrix to be decomposed."]], "quairkit.qinfo.linalg.permute_systems": [[40, 2, 2, 0, "perm_list", "The permutation list."], [40, 2, 2, 0, "state", "A matrix representation of a quantum state."], [40, 2, 2, 0, "system_dim", "A list of dimension sizes of each subsystem."]], "quairkit.qinfo.linalg.prob_sample": [[40, 2, 2, 0, "binary", "Whether the sampled result is recorded as binary."], [40, 2, 2, 0, "distribution", "The probability distribution."], [40, 2, 2, 0, "proportional", "Whether the counts are shown in proportion."], [40, 2, 2, 0, "shots", "The number of shots."]], "quairkit.qinfo.linalg.schmidt_decompose": [[40, 2, 2, 0, "psi", "State vector form of the quantum state, with shape (2**n)."], [40, 2, 2, 0, "sys_A", "Qubit indices to be included in subsystem A."]], "quairkit.qinfo.linalg.sqrtm": [[40, 2, 2, 0, "mat", "Input matrix."]], "quairkit.qinfo.linalg.trace": [[40, 2, 2, 0, "axis1", "The first axis for the 2-D sub-tensor."], [40, 2, 2, 0, "axis2", "The second axis for the 2-D sub-tensor."], [40, 2, 2, 0, "mat", "Input tensor from which the diagonal is taken."]], "quairkit.qinfo.linalg.trace_norm": [[40, 2, 2, 0, "mat", "matrix"]], "quairkit.qinfo.qinfo": [[41, 5, 1, 0, "channel_repr_convert", "Convert the given representation of a channel to the target implementation."], [41, 5, 1, 0, "create_choi_repr", "Create the Choi representation of a linear map with input checks."], [41, 5, 1, 0, "decomp_1qubit", "Decompose a single-qubit unitary operator into Z-Y-Z rotation angles."], [41, 5, 1, 0, "decomp_ctrl_1qubit", "Decompose a controlled single-qubit unitary operator into its components."], [41, 5, 1, 0, "diamond_norm", "Calculate the diamond norm of input."], [41, 5, 1, 0, "gate_fidelity", "Calculate the fidelity between gates."], [41, 5, 1, 0, "general_state_fidelity", "Calculate the fidelity measure of two general states."], [41, 5, 1, 0, "link", "Calculate the link product of two Choi matrices of quantum channels."], [41, 5, 1, 0, "logarithmic_negativity", "Calculate the Logarithmic Negativity E_N = ||\\rho^{T_A}|| of the input quantum state."], [41, 5, 1, 0, "mana", "Compute the mana of states or channels."], [41, 5, 1, 0, "mutual_information", "Compute the mutual information of a bipartite state."], [41, 5, 1, 0, "negativity", "Compute the Negativity N = ||\\frac{\\rho^{T_A}-1}{2}|| of the input quantum state."], [41, 5, 1, 0, "pauli_str_convertor", "Concatenate the input observable with coefficient 1."], [41, 5, 1, 0, "purity", "Calculate the purity of a quantum state."], [41, 5, 1, 0, "relative_entropy", "Calculate the relative entropy of two quantum states."], [41, 5, 1, 0, "stab_nullity", "Tool for calculation of unitary-stabilizer nullity."], [41, 5, 1, 0, "stab_renyi", "Tool for calculation of stabilizer Renyi entropy."], [41, 5, 1, 0, "state_fidelity", "Calculate the fidelity of two quantum states, no extra square is taken."], [41, 5, 1, 0, "trace_distance", "Calculate the trace distance of two quantum states."], [41, 5, 1, 0, "von_neumann_entropy", "Calculate the von Neumann entropy of a quantum state."]], "quairkit.qinfo.qinfo.channel_repr_convert": [[41, 2, 2, 0, "representation", "Input representation."], [41, 2, 2, 0, "source", "Input form, should be 'choi', 'kraus' or 'stinespring'."], [41, 2, 2, 0, "target", "Target form, should be 'choi', 'kraus' or 'stinespring'."], [41, 2, 2, 0, "tol", "Error tolerance for the conversion from Choi, 10^{-6} by default."]], "quairkit.qinfo.qinfo.create_choi_repr": [[41, 2, 2, 0, "input_dim", "The dimension of the space in which the linear map operates."], [41, 2, 2, 0, "input_dtype", "The dtype of the input."], [41, 2, 2, 0, "linear_map", "A function representing the linear map, which takes and returns a square matrix."]], "quairkit.qinfo.qinfo.decomp_1qubit": [[41, 2, 2, 0, "return_global", "If set to True, the global phase angle alpha is also returned."], [41, 2, 2, 0, "unitary", "A batch of 2x2 unitary matrices representing single-qubit gates, as either a numpy ndarray or a torch Tensor."]], "quairkit.qinfo.qinfo.decomp_ctrl_1qubit": [[41, 2, 2, 0, "unitary", "A 2x2 unitary matrix representing the single-qubit gate, as either a numpy ndarray or a torch Tensor."]], "quairkit.qinfo.qinfo.diamond_norm": [[41, 2, 2, 0, "channel_repr", "A Channel or a torch.Tensor instance."], [41, 2, 2, 0, "dim_io", "The input and output dimensions."], [41, 2, 2, 0, "kwargs", "Parameters to set cvx."]], "quairkit.qinfo.qinfo.gate_fidelity": [[41, 2, 2, 0, "U", "Quantum gate U in matrix form."], [41, 2, 2, 0, "V", "Quantum gate V in matrix form."]], "quairkit.qinfo.qinfo.general_state_fidelity": [[41, 2, 2, 0, "rho", "A subnormalized quantum state."], [41, 2, 2, 0, "sigma", "A subnormalized quantum state."]], "quairkit.qinfo.qinfo.link": [[41, 2, 2, 0, "JE", "Tuple containing the Choi representation of channel E, its label, input dimensions, and output dimensions."], [41, 2, 2, 0, "JF", "Tuple containing the Choi representation of channel F, its label, input dimensions, and output dimensions."]], "quairkit.qinfo.qinfo.logarithmic_negativity": [[41, 2, 2, 0, "density_op", "Density matrix form of the quantum state."]], "quairkit.qinfo.qinfo.mana": [[41, 2, 2, 0, "input_str", "\"state\" or \"channel\"."], [41, 2, 2, 0, "matrix", "Quantum state or channel, when \"channel\", it should be the choi matrix of channel."], [41, 2, 2, 0, "out_dim", "Output system dimension, only need to compute mana of channel."]], "quairkit.qinfo.qinfo.mutual_information": [[41, 2, 2, 0, "dim_A", "Dimension of system A."], [41, 2, 2, 0, "dim_B", "Dimension of system B."], [41, 2, 2, 0, "state", "Input bipartite quantum state with system AB."]], "quairkit.qinfo.qinfo.negativity": [[41, 2, 2, 0, "density_op", "Density matrix form of the quantum state."]], "quairkit.qinfo.qinfo.pauli_str_convertor": [[41, 2, 2, 0, "observable", "The observable to be concatenated with coefficient 1."]], "quairkit.qinfo.qinfo.purity": [[41, 2, 2, 0, "rho", "Density matrix form of the quantum state."]], "quairkit.qinfo.qinfo.relative_entropy": [[41, 2, 2, 0, "base", "The base of logarithm."], [41, 2, 2, 0, "rho", "Density matrix form of the quantum state."], [41, 2, 2, 0, "sigma", "Density matrix form of the quantum state."]], "quairkit.qinfo.qinfo.stab_nullity": [[41, 2, 2, 0, "unitary", "A batch of unitary matrices."]], "quairkit.qinfo.qinfo.stab_renyi": [[41, 2, 2, 0, "alpha", "The Renyi entropy exponent."], [41, 2, 2, 0, "density", "A batch of density matrices."]], "quairkit.qinfo.qinfo.state_fidelity": [[41, 2, 2, 0, "rho", "A quantum state."], [41, 2, 2, 0, "sigma", "A quantum state."]], "quairkit.qinfo.qinfo.trace_distance": [[41, 2, 2, 0, "rho", "A quantum state."], [41, 2, 2, 0, "sigma", "A quantum state."]], "quairkit.qinfo.qinfo.von_neumann_entropy": [[41, 2, 2, 0, "base", "The base of logarithm."], [41, 2, 2, 0, "rho", "Density matrix form of the quantum state."]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "parameter", "Python parameter"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:parameter", "3": "py:method", "4": "py:property", "5": "py:function", "6": "py:attribute"}, "terms": {"": [4, 6, 9, 12, 13, 14, 16, 18, 19, 22, 29, 31, 35, 39, 41], "0": [4, 6, 9, 14, 17, 18, 19, 20, 21, 22, 24, 25, 29, 33, 34, 35, 39, 40, 41], "00": [18, 21, 22, 25], "0000": [18, 19, 20, 21, 40, 41], "0000e": [18, 21], "0000j": [18, 19, 20, 21, 40, 41], "0001": [14, 39], "0010e": 18, "0041j": 18, "0044j": 18, "0057j": 18, "00633": 5, "0072": 19, "0078": 18, "0081": 25, "0085j": 19, "00j": [18, 21], "01": [18, 19, 40], "0100": 18, "0104": 18, "0112j": 18, "0149j": 18, "0160j": 19, "0170": 18, "0180": 18, "0188": 18, "0194j": 18, "0198": 25, "01j": [19, 21, 40], "02": 40, "02109": 29, "0224": 19, "0230j": 18, "0232j": 18, "0251": 18, "0258": 20, "0270j": 18, "0293": 18, "0296": 19, "0299j": 18, "02j": 40, "03": 40, "0303j": 18, "0323j": 18, "0330": 18, "0332j": 18, "0357": 19, "0384e": 18, "0396j": 19, "03j": [19, 40], "04": 40, "0430": 19, "0440j": 19, "0442": 18, "0447": 20, "0449": 18, "0455": 18, "0482j": 18, "0486": 18, "0494j": 18, "04j": 40, "05": [39, 40], "0546": 41, "0572": 40, "0578e": 19, "0598j": 18, "05j": 40, "06": [39, 40, 41], "0609050v2": 19, "0630j": 18, "0651j": 18, "0675": 18, "06j": 40, "07": [40, 41], "0701j": 18, "0720": 18, "0749j": 19, "0768": 25, "0790": 19, "0791j": 18, "07j": 40, "08": [18, 19], "0825": 18, "0827": 18, "0866j": 18, "0874": 18, "0876": 41, "0886j": 19, "0894": 18, "0894e": 19, "0894j": 18, "08j": 40, "09": [19, 40], "0914": 18, "0918j": 18, "0931j": 18, "0941j": 18, "0947j": 19, "0956": 25, "09j": 19, "0j": 40, "1": [4, 5, 6, 8, 9, 12, 13, 14, 17, 18, 19, 20, 21, 22, 24, 25, 29, 32, 33, 34, 35, 39, 40, 41], "10": [25, 29, 41], "100": 20, "10000000149011612": 17, "1008j": 18, "1017": 29, "102": 29, "1024": 40, "1030": 18, "1038": 19, "1052j": 18, "1053": 18, "10876": 5, "10j": 19, "10th": [29, 41], "11": [22, 25, 40], "1111j": 18, "1123": 18, "1123e": 19, "1128": 19, "1135": 18, "1140": 18, "1148j": 18, "1154j": 18, "1155": 18, "1162": 25, "1163": 19, "1177": 18, "11801365595625102": 19, "1185j": 19, "1194j": 18, "11j": [19, 40], "12": [19, 22], "1215e": 19, "1222": 18, "1232e": 21, "12440505341821817": 25, "1272": 18, "1273": 25, "12777564473712655": 19, "1277j": 41, "13": 40, "1351j": 18, "1356": 19, "1362": 19, "1387": 18, "13j": 19, "14": 40, "1401": 18, "1404j": 19, "1406": 18, "1414": 20, "1416": 41, "1431": 18, "1433j": 18, "1446j": 19, "1459": 18, "1473": 18, "1480j": 18, "1486j": 18, "14j": 40, "15": [5, 6, 18, 40], "1503j": 18, "1504j": 19, "1513": 25, "1546": 18, "1573j": 18, "1575j": 18, "1581": 20, "1581j": 20, "1583": 19, "16": [21, 40], "1624j": 19, "1634j": 19, "1646j": 19, "1647": 18, "1652": 19, "1676": 25, "1677j": 18, "1686": 18, "1692": 19, "16j": [18, 19, 21, 40], "17": 21, "1704": 19, "1706j": 19, "1714": 18, "1744j": 18, "1748": 25, "1748j": 18, "1760": 18, "1774j": 18, "1778j": 18, "17j": [18, 21], "18": 40, "1804": 5, "1817j": 18, "1826": 25, "1841j": 18, "1847j": 18, "1873": 19, "1873j": 18, "1891": 25, "18j": 19, "1903": 18, "1905": 5, "1913j": 18, "1931j": 19, "1940j": 18, "1943j": 18, "1966": 41, "1e": [39, 41], "1j": [6, 34], "2": [4, 6, 9, 14, 17, 18, 19, 20, 21, 22, 24, 25, 28, 30, 32, 33, 34, 35, 37, 39, 40, 41], "2000": 20, "20000000298023224": 17, "2001": 19, "2010": 29, "2018e": 19, "2021": 19, "2071": 18, "2080": 18, "2099": 18, "21": 40, "2101": 29, "2138": 18, "2146j": 19, "2150j": 19, "2151": 18, "2180j": 18, "2218": 19, "2229": 25, "2231j": 18, "2236": 20, "2236j": 20, "2238": 19, "2246e": [18, 21], "2298": 19, "2306": 18, "2322": 18, "2324": 18, "2345": 18, "2361": 19, "2388e": 18, "23j": 40, "24": [19, 40], "2414j": 19, "2424": 18, "2431": 18, "2459j": 19, "2460e": 19, "2485": 18, "2489e": 19, "25": [22, 40], "2500": 41, "2516e": 19, "2529j": 41, "2612": 18, "2620": 19, "2620j": 41, "2635": 18, "2655j": 18, "2663": 25, "2665": 25, "2671j": 19, "2677": 19, "2697j": 18, "2703": 18, "2711j": 19, "2712": 18, "2735": 18, "28": 19, "2800": 19, "2804": 19, "2806j": 18, "28233465254251144": 25, "2828": 20, "283185307179586": 4, "2846": 25, "2846j": 18, "2850": 19, "2854054036807161": 25, "2858": 18, "2869j": 18, "29": [19, 40], "2926j": 18, "2963j": 18, "2991j": 18, "2n": 18, "2nd": 40, "2x2": 41, "2x\u2082\u00b2": 40, "3": [6, 9, 14, 17, 18, 19, 20, 21, 22, 25, 40, 41], "30": 20, "300": [4, 6], "30000001192092896": 17, "3009j": 19, "3023j": 19, "3033j": 19, "3040j": 18, "3056j": 18, "3090j": 18, "3118": 18, "3141e": 18, "3154": 41, "3156": 18, "3162": [20, 41], "3162j": 20, "3189": 19, "31j": 19, "3212j": 18, "3240": 19, "3242": 18, "3267": 19, "3280j": 19, "3289j": 18, "3294": 18, "33": 19, "3312": 25, "3314j": 18, "3364j": 19, "3369j": 18, "3380": 19, "3414": 19, "3451j": 18, "3465j": 18, "3500e": 19, "3538j": 18, "3539j": 18, "3577": 41, "3587": 19, "36": 6, "3601": 20, "3619j": 18, "3627": 19, "3635j": 18, "3671": 18, "37": 19, "37j": 19, "38": [21, 22], "3811": 19, "3825": 18, "3827": 18, "3827j": 18, "3835": 18, "3842e": 41, "3844j": 18, "3854j": 18, "3862": 19, "3887": 19, "3944j": 19, "3959j": 19, "3984j": 18, "3p": [20, 29], "3rd": 40, "3x": 19, "3x\u2083\u00b2": 40, "4": [6, 17, 18, 19, 20, 21, 22, 25, 29, 35, 39, 40, 41], "4000000059604645": 17, "4003": 18, "4019j": 19, "4038e": 19, "4106j": 19, "4124": 18, "4142135381698608": 40, "4142j": 19, "4166": 19, "4195j": 18, "4229": 18, "4243": 20, "4251": 19, "43": 19, "4309": 18, "4328": 19, "4331": 18, "4385j": 18, "4451e": 19, "4459": 25, "4472": 20, "4472j": 20, "4494": 40, "45": 19, "4546": 19, "4563": 19, "4579": 19, "4602": 18, "4619j": 18, "4751": 19, "4784": 19, "4855e": 19, "4864": 19, "4875": 19, "4886j": 19, "4921": 25, "4925j": 19, "4954": 19, "4999999701976776": 41, "5": [6, 17, 18, 19, 20, 21, 22, 39, 40, 41], "50": 20, "500": 6, "5000": [21, 40], "5000725984573364": 41, "5000j": [21, 40], "5076": 40, "5121": 19, "5136": 19, "5158": 18, "5167": 19, "5173j": 18, "5174": 19, "5193e": 19, "5196": 19, "5253j": 19, "5277": 19, "5288": 19, "5296j": 19, "53": 41, "5321": 19, "5347j": 19, "5359": 18, "5372j": 19, "5374j": 18, "5391": 18, "54": 40, "5444j": 19, "5454": 18, "5460": 18, "5477": 20, "5514e": 19, "55j": 19, "5646j": 19, "5658": 24, "57": [6, 19], "5703j": 18, "5708": 41, "5708j": 40, "5772": 4, "5804": 18, "5852j": 19, "5942": 19, "5y": 19, "6": [4, 18, 21, 39, 41], "600": 6, "6003j": 19, "6019637631250563": 19, "6062": 18, "6068": 19, "6095j": 19, "6113": 19, "6178j": 19, "6194e": 18, "6235j": 19, "6294": 19, "63": 19, "6310": 19, "6315": 19, "6316e": 19, "6325": 20, "6385j": 19, "6464j": 18, "6481j": 18, "6546j": 19, "6596e": 18, "6603e": 19, "6620": 19, "67": 19, "6728e": 18, "6740j": 19, "6790j": 19, "6813": 41, "6847e": 19, "6859": 19, "6996": 19, "699999988079071": 17, "7": [17, 18, 19], "7007e": 19, "7008e": 19, "7071": [18, 19, 20, 21, 24, 40, 41], "7071067690849304": 40, "70710688829422": 41, "7071j": [18, 19, 21, 40], "7090": [18, 24], "71": [21, 22], "7121j": 19, "7183": 40, "7277": 19, "7283": 24, "7289": 19, "7298": 19, "72j": 19, "7333": 19, "7456e": 19, "7497j": 19, "75": [22, 41], "7500035113999476": 41, "7771": 25, "7860": 19, "7873e": 19, "7912": 24, "8": [18, 19, 20, 29, 40], "8000": 20, "8001j": 18, "8084j": 19, "81": [5, 6, 18, 40], "8151": 18, "8185e": 19, "8296": 19, "83": 19, "8367": 20, "8370e": 21, "8377j": 19, "8408": 19, "8485": 20, "8562e": 40, "88": 19, "8916j": 19, "8944": 20, "9": [18, 19, 41], "9013e": 19, "9059897222160238": 19, "9104j": 41, "9134e": 18, "92": 21, "9239": 18, "9239j": 18, "9432j": 41, "9486": 18, "9487": [20, 41], "9618": 20, "9704": 19, "9908": 19, "9918": 41, "9987": 20, "999999761581421": 41, "A": [4, 5, 6, 9, 17, 18, 19, 21, 22, 29, 30, 33, 34, 35, 37, 39, 40, 41], "By": 40, "For": [6, 14, 18, 29, 33, 34, 39, 40, 41], "If": [6, 9, 18, 19, 22, 25, 37, 39, 40, 41], "Ising": 17, "It": [22, 37, 39], "Its": [22, 29, 41], "Of": [16, 18], "One": [5, 6, 33], "Such": [19, 29], "The": [4, 5, 6, 8, 9, 12, 13, 14, 17, 18, 19, 20, 21, 22, 24, 25, 28, 29, 30, 32, 33, 34, 35, 36, 37, 39, 40, 41], "These": 21, "To": 6, "_": 6, "__circuit_plot_param": 36, "ab": [5, 29, 40, 41], "about": [6, 34, 35, 37], "abs_nor": 40, "abs_norm": [38, 40], "academ": 6, "accept": 39, "access": 21, "accord": 4, "act": [4, 6, 9, 28, 29, 30, 32, 33, 37], "acted_system_dim": [28, 30, 32, 33, 37], "activ": [33, 37], "ad": [4, 6], "add": [4, 6], "add_system": 4, "addit": [6, 28], "adjust": 14, "after": 41, "algorithm": 18, "alia": [6, 19, 21, 22, 34], "align": [17, 34, 35], "all": [4, 6, 9, 18, 19, 21, 22, 25, 28, 30, 32, 33, 37, 40], "allow": [14, 25], "along": [21, 40], "alpha": 41, "alpha_": 17, "also": 41, "amplitud": [6, 20, 29], "amplitude_damp": 6, "amplitude_damping_krau": [16, 20], "amplitudedamp": [27, 29], "an": [4, 6, 14, 18, 19, 20, 21, 22, 28, 30, 32, 33, 37, 39, 40, 41], "ancilla": 40, "angl": 41, "ani": 36, "anniversari": 29, "anoth": 4, "ansatz": [1, 36], "answer": 4, "apostroph": 41, "append": 4, "appli": [4, 5, 6, 33, 34, 35, 37, 39], "ar": [4, 6, 14, 18, 20, 21, 22, 25, 29, 32, 33, 34, 35, 37, 39, 40, 41], "arbitrarili": 40, "arg": [14, 40], "arg0": 4, "arg1": 4, "argument": 4, "arrai": [12, 13, 39, 40], "arxiv": [5, 19, 29], "assum": [4, 18, 28, 40], "automat": [9, 14], "ax": [32, 40], "axi": [6, 34, 35, 40], "axis1": 40, "axis2": 40, "b": [21, 22, 40, 41], "backend": [7, 8, 10, 14, 19, 21, 22, 24, 25, 40], "base": [1, 4, 7, 18, 26, 27, 31, 37, 40, 41], "basi": [6, 9, 18, 21, 22, 25, 37, 40], "basic": [8, 28, 32], "batch": [6, 14, 18, 19, 21, 24, 25, 32, 33, 37, 39, 41], "batch_channel": 19, "batch_result": 24, "been": 29, "begin": [6, 17, 18, 20, 29, 34, 35], "behav": 39, "behavior": 39, "bell": [21, 22, 40, 41], "bell_basi": [16, 21], "bell_diagonal_st": [16, 22], "bell_mana": 41, "bell_stat": [16, 22, 24, 39, 40, 41], "belong": 40, "beta": 41, "beta_": 17, "beta_k": 17, "between": [14, 24, 41], "bf": 6, "binari": 40, "bipartit": 41, "bit": [6, 18, 20, 29], "bit_flip": 6, "bit_flip_krau": [16, 20], "bit_phase_flip": 6, "bit_phase_flip_krau": [16, 20], "bitflip": [27, 29], "bitphaseflip": [27, 29], "block": [6, 19, 40], "block_enc": 40, "block_enc_herm": [38, 40], "bmatrix": [6, 18, 20, 29, 34, 35], "bool": [4, 6, 9, 19, 25, 28, 32, 33, 34, 35, 37, 39, 40, 41], "boolean": 39, "both": 25, "boundari": 8, "bpf": 6, "bravyi": 19, "broadcast": 14, "built": 4, "c": [6, 21, 40, 41], "c_i": 40, "calcul": [9, 14, 40, 41], "call": 32, "callabl": [6, 18, 32, 33, 39, 40, 41], "cambridg": 29, "can": [4, 6, 8, 9, 14, 19, 21, 22, 24, 25, 28, 30, 32, 33, 37, 39, 40], "candid": 39, "care": 14, "case": [6, 19, 21, 22, 30, 32, 33, 37, 40, 41], "cat": 6, "caus": 41, "cbo9780511976667": 29, "ccx": [6, 31, 34], "cd": 41, "cdot": [6, 18], "cfloat": 18, "channel": [1, 6, 19, 20, 26, 37, 41], "channel_choi": 19, "channel_info": 28, "channel_krau": 19, "channel_repr": 41, "channel_repr_convert": [38, 41], "channel_stinespr": 19, "check": [1, 9, 14, 28, 32, 38, 41], "check_leg": [28, 32], "choi": [6, 19, 20, 28, 30, 37, 39, 41], "choi_channel": 6, "choi_matrix": 41, "choi_oper": 20, "choi_repr": [6, 28, 30], "choirepr": [27, 30, 41], "chuang": 29, "circuit": [1, 4, 5, 19, 32, 33, 34, 36], "class": [4, 5, 6, 8, 9, 12, 13, 14, 24, 25, 28, 29, 30, 32, 33, 34, 35, 37], "classifi": 8, "clifford": 19, "clifford_matrix": 19, "close": 39, "cnot": [5, 6, 16, 18, 31, 34], "cnot_gat": [16, 18], "co": [6, 18, 34, 35], "code": [4, 6], "coeffici": [6, 9, 20, 40, 41], "collaps": [6, 26, 37], "collect": [29, 33, 34, 35], "com": 4, "comb": [1, 2], "common": [14, 17, 22, 26, 27], "commonli": 6, "compact": [4, 6], "complet": [22, 28, 32], "completely_mixed_comput": [16, 22, 41], "complex": [5, 6], "complex128": [8, 20, 41], "complex64": [6, 8, 41], "complex_block_lay": 6, "complex_entangled_lay": 6, "complexblocklay": [2, 5], "complexentangledlay": [2, 5], "compon": 41, "compos": [21, 25], "compress": 9, "compris": 6, "comput": [6, 13, 17, 21, 22, 24, 25, 29, 37, 40, 41], "computational_st": [16, 22], "concaten": [4, 41], "conj": 41, "consist": [5, 6], "const_t": [6, 20, 29], "construct": [9, 18, 40], "construct_h_matrix": 9, "contain": [1, 2, 9, 19, 37, 40, 41], "control": [6, 33, 34, 41], "control_idx": 6, "control_oracl": 6, "control_permut": 6, "controlledrot": 6, "controloracl": [31, 33], "controlparamoracl": [31, 33], "convent": 41, "convers": 41, "convert": [13, 41], "copi": 36, "copyslic": 40, "core": 1, "correct": 39, "correspond": [9, 20, 25, 29, 40], "cos_theta": 6, "could": [9, 32], "count": 40, "cp": [6, 16, 18, 31, 34], "cp_gate": [16, 18], "cr_x": [6, 18], "cr_y": [6, 18], "cr_z": [6, 18], "creat": [9, 40, 41], "create_choi_repr": [38, 41], "create_matrix": [38, 40], "crx": [6, 16, 18, 31, 34], "crx_gate": [16, 18], "cry": [6, 16, 18, 31, 34], "cry_gat": [16, 18], "crz": [6, 16, 18, 31, 34], "crz_gate": [16, 18], "cswap": [6, 16, 18, 31, 34], "cswap_gat": [16, 18], "ctrl": 6, "cu": [6, 16, 18, 31, 34], "cu_gat": [16, 18], "cuda": 8, "current": [4, 8, 29, 41], "custom": [6, 25, 26, 27, 31, 32], "cvx": 41, "cx": [31, 34], "cy": [6, 16, 18, 31, 34], "cy_gat": [16, 18], "cycl": 6, "cz": [6, 16, 18, 31, 34], "cz_gate": [16, 18], "d": [6, 12, 13, 14, 18, 19, 20, 21, 22, 29, 33, 40, 41], "d1": 14, "d_": 28, "dag": 40, "dagger": [6, 18, 35, 38, 39, 40, 41], "damp": [6, 20, 29], "dash": 6, "data": [8, 12, 13, 14, 19, 28, 39, 41], "databas": [1, 24, 25], "datatyp": 14, "ddot": [6, 18], "decid": 9, "decim": [4, 6], "decomp_1qubit": [38, 41], "decomp_ctrl_1qubit": [38, 41], "decompos": [9, 25, 40, 41], "decompose_pauli_word": 9, "decompose_with_sit": 9, "decomposit": [6, 40, 41], "def": [6, 18, 39, 40, 41], "default": [4, 5, 6, 9, 12, 13, 14, 18, 19, 21, 22, 25, 28, 29, 30, 32, 33, 34, 35, 37, 39, 40, 41], "defin": [21, 24, 25, 29, 39], "definit": 39, "delta": 41, "denot": [14, 25], "densiti": [12, 14, 19, 22, 28, 39, 41], "density_matrix": [10, 11, 14, 19, 22, 25, 40, 41], "density_op": [39, 41], "depend": 6, "depolar": [6, 20, 27, 29], "depolarizing_choi": 41, "depolarizing_krau": [16, 20], "deprec": 6, "depth": [4, 5, 6], "desir": 37, "desired_result": [25, 37], "detail": [4, 6], "determin": [9, 14, 39, 40], "devic": [8, 29, 34], "diagon": [22, 40], "diagram": 6, "diamond": 41, "diamond_norm": [38, 41], "dict": [25, 28, 32, 33, 36, 40], "dictionari": [36, 40], "differ": [9, 41], "dim": [6, 18, 19, 21, 28, 41], "dim_a": 41, "dim_b": 41, "dim_in": 41, "dim_io": 41, "dim_out": 41, "dimens": [4, 6, 12, 13, 14, 18, 19, 21, 22, 25, 28, 30, 32, 33, 37, 39, 40, 41], "dimension": [18, 40, 41], "dir_sum": 40, "direct": 40, "direct_sum": [38, 40], "disabl": 14, "displai": [4, 6, 32, 36], "display_in_circuit": 32, "dist": 40, "distanc": [1, 23, 41], "distribut": [6, 12, 13, 14, 25, 37, 40], "divid": 19, "dmitri": 19, "dn": [14, 41], "doe": [39, 41], "doi": 29, "dot": [4, 6], "dpi": [4, 6], "draw": 6, "dtype": [6, 8, 14, 18, 20, 40, 41], "dynam": 6, "e": [6, 9, 17, 18, 21, 25, 28, 32, 33, 34, 35, 39, 41], "e_": 22, "e_0": [20, 29], "e_1": [20, 29], "e_2": [20, 29], "e_3": [20, 29], "e_4": [20, 29], "e_k": [20, 29], "e_n": 41, "each": [9, 12, 13, 18, 21, 22, 25, 29, 40, 41], "edg": 17, "edit": [29, 41], "eigen": 25, "eigenbasi": 21, "eigenspac": 40, "eigenvalu": [39, 40], "eigenvector": 21, "eigh": 41, "either": [39, 41], "element": [6, 9, 22, 33, 36, 41], "empti": 6, "encod": [14, 19, 40], "end": [4, 6, 17, 18, 20, 29, 34, 35], "enhanc": 6, "enough": 39, "ensur": 6, "ent": 41, "entangl": [5, 6], "entir": 21, "entropi": 41, "ep": [14, 39], "equal": 29, "equal_dim": 4, "equat": 41, "error": [4, 39, 41], "evolut": 6, "exampl": [6, 14, 17, 18, 19, 20, 21, 22, 24, 33, 40, 41], "except": 22, "excit": [6, 29], "exclud": 9, "exec_tim": [6, 20, 29], "execut": [6, 20, 29], "exemplifi": 41, "exp": [18, 40], "expand": 40, "expec_v": 25, "expect": 25, "expecv": [23, 25], "experi": 6, "expon": 41, "expos": 19, "extend": 4, "extra": 41, "ey": [6, 16, 18, 39, 40, 41], "eye_g": [16, 18], "f": [6, 17, 18, 19, 20, 21, 22, 25, 39, 40, 41], "f_": 41, "fals": [4, 6, 9, 19, 25, 32, 33, 34, 35, 37, 39, 40, 41], "fcn": 40, "featur": [6, 29, 42], "fh": 40, "fidel": [24, 41], "fidelity_calcul": 24, "figur": [6, 36], "file": [4, 5, 6, 12, 13, 14, 24, 25, 28, 29, 30, 32, 33, 34, 35, 37], "first": [4, 6, 14, 18, 21, 25, 33, 34, 35, 39, 40], "flatten": [4, 41], "flip": [6, 20, 29], "float": [4, 6, 8, 9, 14, 18, 20, 22, 29, 32, 33, 34, 35, 36, 39, 40, 41], "float64": 41, "follow": [5, 8, 9, 19], "form": [4, 6, 9, 12, 13, 18, 19, 20, 22, 32, 34, 35, 39, 40, 41], "format": [4, 6], "formula": 29, "forward": [4, 24, 25, 37], "four": 21, "fourier": [18, 21], "frac": [6, 18, 20, 22, 34, 35, 41], "fredkin": [6, 34], "free": 19, "from": [4, 5, 6, 12, 13, 17, 19, 24, 25, 40, 41], "full": [6, 19, 25], "fulli": 6, "func": 39, "function": [6, 8, 14, 18, 19, 24, 25, 32, 33, 36, 37, 39, 40, 41], "futur": [6, 37], "g": [9, 18, 25], "gad": 6, "gamma": [6, 18, 20, 29, 34, 41], "gamma_": 17, "gate": [1, 4, 5, 6, 18, 20, 26, 28, 29, 37, 41], "gate_fidel": [38, 41], "gate_info": [32, 33], "gate_nam": 6, "gell": [18, 21], "gell_mann": [16, 21], "gener": [4, 5, 6, 14, 18, 19, 20, 21, 22, 29, 32, 33, 40, 41], "general_state_fidel": [38, 41], "generalized_amplitude_damp": 6, "generalized_amplitude_damping_krau": [16, 20], "generalized_depolar": 6, "generalized_depolarizing_krau": [16, 20], "generalizedamplitudedamp": [27, 29], "generalizeddepolar": [27, 29], "get": [4, 8, 21], "get_backend": [7, 8], "get_circuit_plot_param": [31, 36], "get_devic": [7, 8], "get_dtyp": [7, 8], "get_float_dtyp": [7, 8], "get_latex_nam": 4, "get_se": [7, 8], "ghz": 22, "ghz_state": [16, 22], "ghz_state_inst": 22, "give": 21, "given": [6, 8, 21, 40, 41], "global": [8, 14, 41], "go": 0, "grad": [4, 40], "grad_fn": 40, "gradient": [4, 38, 40], "grai": 6, "group": [19, 21], "grover": 18, "grover_matrix": [16, 18], "grover_op": 18, "h": [6, 16, 18, 31, 35, 40, 41], "h_": 17, "h_gate": [16, 18], "h_heisenberg": 17, "h_xy": 17, "ha": [29, 41], "haar": 19, "haar_density_oper": [16, 19], "haar_orthogon": [16, 19], "haar_state_vector": [16, 19, 40], "haar_unitari": [16, 19], "hadamard": [6, 18, 19, 35, 41], "half": 40, "hamiltonian": [1, 6, 7, 16, 19, 25], "have": [4, 6, 18], "he": 40, "heisenberg": [17, 21], "heisenberg_hamiltonian": [16, 17], "heisenberg_weyl": [16, 21], "herm_transform": [38, 40], "hermitian": [19, 39, 40], "hessian": [38, 40], "high": 40, "highest": 6, "hilbert": 18, "histori": [4, 32, 33], "home": 0, "horizont": 32, "http": [4, 5, 6, 29], "i": [4, 5, 6, 8, 9, 12, 13, 14, 17, 18, 19, 20, 21, 22, 24, 25, 28, 29, 32, 33, 34, 35, 37, 39, 40, 41], "i_a": 40, "i_b": 40, "ident": [6, 18, 40, 41], "identif": 41, "identity_choi": 41, "identity_map": 41, "idx": 4, "ieee": 19, "if_print": [6, 37], "ignor": 40, "ignore_zero": 40, "iix": 9, "imag": [4, 6, 14], "image_filepath": 14, "image_to_density_matrix": [10, 14], "implement": [8, 19, 22, 29, 33, 37, 41], "impli": 41, "import": [17, 24, 25], "inch": [4, 6], "includ": [6, 40], "include_empti": 6, "index": [4, 6, 9, 21, 22, 25, 33, 39], "indic": [4, 5, 6, 9, 21, 25, 28, 29, 30, 32, 33, 34, 35, 37, 40, 41], "individu": 18, "info": [6, 28, 32, 33, 37, 39], "inform": [4, 9, 19, 28, 29, 32, 33, 37, 41], "initi": [4, 5], "input": [4, 6, 9, 14, 18, 24, 25, 28, 29, 32, 33, 37, 39, 40, 41], "input_batch": 24, "input_dim": [40, 41], "input_dtyp": [39, 40, 41], "input_st": [24, 25], "input_state_batch": [24, 25], "input_str": 41, "instal": 6, "instanc": [4, 6, 14, 28, 32, 41], "instanti": 9, "int": [4, 5, 6, 8, 9, 12, 13, 14, 18, 19, 20, 21, 22, 25, 28, 29, 30, 32, 33, 34, 35, 37, 39, 40, 41], "integ": [14, 18, 21, 39], "interfac": [24, 25], "introduct": 42, "invers": [6, 35], "ion": 34, "is_choi": [38, 39], "is_dens_mat": 39, "is_density_matrix": [38, 39], "is_hermit": 39, "is_hermitian": [38, 39], "is_lin": 39, "is_linear": [38, 39], "is_po": 39, "is_posit": [38, 39], "is_pov": 39, "is_povm": [38, 39], "is_ppt": [38, 39], "is_proj": 39, "is_projector": [38, 39], "is_pt": 39, "is_pv": 39, "is_pvm": [38, 39], "is_real": 19, "is_st_vec": 39, "is_state_vector": [38, 39], "is_unit": 39, "is_unitari": [19, 38, 39], "ischoi": 39, "ising_hamiltonian": [16, 17], "isometri": 41, "isotrop": 22, "isotropic_st": [16, 22], "isotropic_state_inst": 22, "item": 9, "iter": [4, 6, 9, 18, 20, 25, 28, 29, 30, 32, 33, 34, 35, 37, 40, 41], "its": [19, 40, 41], "j": [18, 19, 20, 21, 22, 25, 40, 41], "j_result": 41, "je": 41, "jf": 41, "k": [17, 20, 29, 40], "k0": 41, "k1": 41, "keep_stat": 25, "kp": 40, "krau": [6, 19, 20, 28, 29, 30, 37, 41], "kraus_channel": 6, "kraus_op": [6, 41], "kraus_oper": 20, "kraus_repr": [28, 30], "krausrepr": [27, 30], "kron": [6, 41], "kron_pow": [38, 40], "kroneck": [14, 40], "kwarg": [6, 36, 37, 41], "l": [29, 40], "label": [6, 37, 41], "lambda": [6, 18, 34, 35], "langl": [6, 18, 22, 34], "langle0": 18, "langle00": 22, "langle1": 18, "langle11": 22, "largest": 4, "latex": [4, 6, 37], "latex_nam": [6, 37], "layer": [1, 2, 4, 6, 33, 34, 35], "le": 29, "least": 14, "left": [18, 19, 22], "legal": 39, "legitimaci": 9, "length": [14, 18, 29], "less": 29, "letter": 41, "lgm": 40, "librari": [17, 19, 22], "like": 4, "linalg": [1, 14, 38], "line": 6, "linear": [5, 6, 39, 40, 41], "linear_entangled_lay": 6, "linear_map": [40, 41], "linearentangledlay": [2, 5], "link": [38, 41], "linspac": 18, "list": [4, 5, 6, 9, 12, 13, 14, 18, 19, 20, 21, 22, 25, 28, 29, 30, 32, 33, 37, 39, 40, 41], "list_channel": 37, "live": 6, "local": 6, "local_unitari": 6, "locc": [6, 37], "log": [40, 41], "log_": 41, "log_neg": 41, "logarithm": [40, 41], "logarithmic_neg": [38, 41], "logic": [4, 6, 29], "logm": [38, 40], "loss": [1, 40], "loss_funct": 40, "lowercas": 41, "lstick": 6, "lvert": 40, "m": [6, 16, 18, 29, 31, 34, 37, 40, 41], "mai": 40, "make": [24, 25], "mana": [38, 41], "mana_chan": 41, "mann": [18, 21], "map": [40, 41], "maslov": 19, "mat": [39, 40], "mat_repr": 40, "match": 41, "math": [19, 40], "mathbb": 21, "mathcal": 6, "mathemat": 5, "mathit": 6, "matplotlib": [6, 32], "matric": [9, 18, 21, 40, 41], "matrix": [1, 4, 5, 6, 9, 12, 14, 16, 19, 21, 22, 28, 30, 32, 33, 34, 35, 39, 40, 41], "matrix_1st": 40, "max_mix": 41, "maxim": 41, "mean": [4, 6, 14, 25, 37], "measur": [1, 4, 6, 19, 23, 37, 39, 41], "measure_basi": [6, 37], "measure_dim": 37, "measure_idx": 37, "measure_op": 25, "merg": 9, "meter": 6, "method": 4, "mi": 41, "microsecond": [20, 29], "mix": [12, 13, 22, 41], "mixedst": [11, 12, 14, 20, 39, 40, 41], "mixtur": 29, "mode": 28, "model": 37, "modul": [4, 8, 9], "more": 40, "ms_gate": [16, 18], "multi": 34, "multi_qubit_g": [26, 31], "multipl": 25, "must": [29, 34, 35, 41], "mutual": 41, "mutual_inform": [38, 41], "m\u00f8lmer": [6, 34], "n": [4, 6, 12, 13, 17, 18, 19, 20, 21, 22, 25, 29, 39, 40, 41], "n_qubit": 9, "n_term": 9, "name": [4, 6, 8, 37], "nanosecond": [20, 29], "natur": 40, "ndarrai": [4, 9, 14, 18, 20, 39, 40, 41], "need": [4, 14, 28, 32, 40, 41], "neg": [38, 39, 41], "neumann": 41, "new": 4, "new_physical_idx": 4, "new_system_dim": 4, "niel": 4, "nielsen": 29, "nkron": [14, 38, 40], "noisi": 28, "non": 39, "none": [4, 5, 6, 8, 9, 12, 13, 14, 18, 19, 25, 28, 29, 30, 32, 33, 34, 35, 37, 39, 40, 41], "norm": [39, 40, 41], "normal": [4, 19], "notimpl": 37, "notimplementederror": [19, 22, 24, 25, 28, 37, 41], "now": 6, "nulliti": 41, "num_acted_param": [6, 32, 33], "num_acted_qubit": 32, "num_acted_system": 4, "num_block_qubit": 40, "num_new_system": 4, "num_qubit": [4, 6, 18, 19, 20, 21, 22, 25, 29], "num_qutrit": 4, "num_step": 6, "num_system": [4, 6, 19, 21, 22, 24, 25], "number": [4, 5, 6, 9, 14, 18, 19, 20, 21, 22, 28, 29, 32, 33, 40], "numpi": [8, 14, 39, 41], "o": [6, 19, 37], "observ": [9, 19, 21, 25, 41], "obtain": 14, "occupi": 32, "octrl": 6, "of_gat": [16, 18], "omega_n": 18, "omit": 4, "one": [4, 6, 22, 37, 40], "one_st": [16, 22, 24], "onewaylocc": [26, 37], "onli": [4, 14, 19, 21, 28, 41], "op": [4, 25, 39], "openqasm": 4, "oper": [1, 4, 6, 9, 18, 20, 21, 39, 41], "operator_histori": 4, "operator_idx": 4, "operatorinfotyp": [4, 28, 32, 33, 37], "operatorlist": [2, 4], "operatornam": 6, "oplu": 18, "optim": [24, 25], "option": 39, "oracl": [6, 18, 31, 33], "order": [6, 12, 13, 40, 41], "org": [5, 6, 29], "orthogon": 19, "orthogonal_projector": 19, "other": [4, 14, 22, 37, 40], "otherwis": [6, 39], "otim": [6, 18, 19, 34, 40], "out": [28, 40], "out_dim": 41, "outcom": 25, "outer": 41, "output": [4, 6, 20, 24, 28, 36, 40, 41], "output_plot": 6, "over": [13, 25], "overload": 32, "p": [6, 16, 18, 20, 22, 29, 31, 34, 35, 39, 40, 41], "p_": 22, "p_gate": [16, 18], "p_matrix": 18, "p_nor": 40, "p_norm": [38, 40], "packag": 6, "paper": 5, "param": [4, 5, 6, 32, 33, 34, 35], "param_locc": 6, "param_oracl": 6, "param_shar": [6, 32, 33, 34, 35], "paramet": [4, 5, 6, 8, 9, 12, 13, 14, 17, 18, 19, 20, 21, 22, 24, 25, 28, 29, 30, 32, 33, 34, 35, 36, 37, 39, 40, 41], "parameter": [6, 32, 33], "paramg": [31, 32], "paramoracl": [31, 33], "partial": [13, 40], "partial_trac": [38, 40], "partial_trace_discontigu": [38, 40], "partial_transpos": [38, 40], "pass": [4, 37], "path": [6, 14], "pauli": [6, 9, 18, 20, 21, 29, 40], "pauli_basi": [16, 21], "pauli_channel": 6, "pauli_dec": 40, "pauli_decomposit": [38, 40], "pauli_group": [16, 21], "pauli_krau": [16, 20], "pauli_str": [9, 21], "pauli_str_basi": [16, 21], "pauli_str_convertor": [38, 41], "pauli_str_povm": [16, 21], "pauli_term": 41, "pauli_word": 9, "pauli_words_matrix": 9, "pauli_words_r": 9, "paulichannel": [27, 29], "pd": 6, "pdf": 5, "per": [4, 6], "perform": 6, "perm": [6, 18, 33], "perm_list": 40, "permut": [6, 18, 31, 33, 40], "permutation_matrix": [16, 18], "permute_system": [38, 40], "pf": 6, "ph": 19, "phase": [6, 16, 18, 20, 21, 29, 41], "phase_damp": 6, "phase_damping_krau": [16, 20], "phase_flip": 6, "phase_flip_krau": [16, 20], "phase_g": [16, 18], "phase_oper": 18, "phase_space_point": [16, 21], "phasedamp": [27, 29], "phaseflip": [27, 29], "phi": [6, 18, 22, 34, 35], "phi_": 22, "physic": [4, 6, 39], "physical_idx": [4, 6], "pi": [4, 6, 18, 21, 34, 35], "place": [4, 6, 32, 33], "platform": 0, "pleas": [6, 29], "plot": [4, 6, 32, 33], "point": 21, "posit": [21, 32, 39], "post": [6, 25], "post_select": 6, "post_stat": 25, "povm": [21, 39], "power": [6, 40], "pp": 39, "ppt": 39, "preserv": [37, 40], "preserve_qubit": 40, "press": 29, "print": [4, 6, 17, 18, 19, 20, 21, 22, 24, 25, 37, 39, 40, 41], "print_cod": [4, 6], "prob": [6, 14, 20, 22, 25, 29], "prob_list": 20, "prob_sampl": [38, 40], "probabilist": 37, "probabl": [6, 12, 13, 14, 20, 22, 25, 29, 37, 40], "problem": 18, "process": [20, 29], "product": [13, 14, 40, 41], "product_trac": 13, "project": [25, 39], "projector": [19, 39], "proper": 40, "properti": [4, 9, 12, 13, 28, 32, 33, 37], "proport": 40, "protocol": [6, 37], "provid": [28, 32, 39], "psd": 39, "psi": [22, 40], "pt": 40, "ptdi": 40, "public": 6, "pure": [13, 22], "purest": [11, 13, 14, 20, 39, 40, 41], "puriti": [38, 41], "push": 6, "pvm": [25, 37, 39], "pvm_tensor": 25, "q": [20, 29, 40], "qasm": 4, "qc": 6, "qft": [18, 21], "qft_basi": [16, 21], "qft_gate": 18, "qft_matrix": [16, 18], "qft_state": 21, "qinfo": 1, "quad": 18, "quadratic_loss": 40, "quair": 0, "qualnam": 8, "quantikz": 6, "quantum": [4, 5, 6, 12, 13, 14, 18, 19, 20, 21, 22, 25, 28, 29, 30, 32, 33, 34, 37, 39, 40, 41], "quantumcomput": 4, "quasi": 37, "quasi_prob": 37, "quasioper": [26, 37], "qubit": [4, 5, 6, 9, 14, 18, 19, 20, 21, 22, 25, 29, 30, 32, 33, 34, 35, 37, 40, 41], "qubit_num": 9, "qubits_idx": [5, 6, 29, 34, 35], "qudit": [6, 18, 21, 33], "qutrit": [4, 14], "r": [6, 22, 28, 29], "r_": [6, 18], "r_state": [16, 22], "r_state_inst": 22, "r_x": [6, 18], "r_xx": 18, "r_y": [6, 18], "r_yi": 18, "r_z": [6, 18], "r_zz": 18, "rais": [8, 19, 22, 24, 25, 28, 32, 34, 35, 37, 39, 40, 41], "rand": 39, "random": [1, 4, 8, 16, 32, 33, 41], "random_channel": [16, 19], "random_clifford": [16, 19], "random_density_matrix": [16, 19], "random_hamiltonian_gener": [16, 19, 25], "random_hermitian": [16, 19], "random_orthogonal_project": [16, 19], "random_pauli_str_gener": [16, 19], "random_projector": [16, 19], "random_st": [16, 19, 24, 25, 40], "random_unitari": [16, 19, 39, 41], "random_unitary_hermitian": [16, 19], "random_unitary_with_hermitian_block": [16, 19], "randomize_param": 4, "randomli": 19, "rang": [28, 29, 32], "rangl": [6, 18, 20, 22, 29, 34, 40], "rangle_": 22, "rank": [19, 25, 28], "real": [5, 6, 19], "real_block_lay": 6, "real_entangled_lay": 6, "realblocklay": [2, 5], "realentangledlay": [2, 5], "recogn": 41, "record": 40, "refer": [4, 19, 29], "referenc": 19, "register_idx": 4, "rel": 41, "rel_ent": 41, "relative_entropi": [38, 41], "relax": [6, 20, 29], "remain": [33, 40], "remov": 4, "render": 6, "renyi": 41, "replac": [4, 20, 29], "replacement_choi": [16, 20], "replacementchannel": [27, 29], "report": 4, "repres": [4, 5, 6, 18, 19, 21, 22, 28, 30, 32, 33, 37, 40, 41], "represent": [1, 4, 5, 6, 12, 13, 14, 16, 17, 19, 28, 30, 40, 41], "requir": [5, 6, 32, 33, 41], "requires_grad": 40, "reset": [6, 20, 29, 36, 37], "reset_channel": 6, "reset_circuit_plot_param": [31, 36], "reset_krau": [16, 20], "resetchannel": [27, 29], "resetst": [26, 37], "reshap": 39, "respect": [4, 9, 21, 25, 40], "result": [6, 24, 25, 37, 40, 41], "retriev": 25, "return": [4, 6, 8, 9, 14, 17, 18, 19, 20, 21, 22, 24, 25, 28, 32, 36, 37, 39, 40, 41], "return_glob": 41, "rho": [29, 39, 40, 41], "rho1": 19, "rho2": 19, "right": [18, 22], "root": 40, "rotat": [5, 6, 18, 34, 35, 41], "rotation_gener": 6, "run": 28, "runtimeerror": 41, "runtimewarn": [40, 41], "rx": [6, 16, 18, 31, 34, 35], "rx_gate": [16, 18], "rxx": [6, 16, 18, 31, 34], "rxx_gate": [16, 18], "ry": [5, 6, 16, 18, 31, 34, 35], "ry_gat": [16, 18], "ryi": [6, 16, 18, 31, 34], "ryy_gat": [16, 18], "rz": [5, 6, 16, 18, 31, 34, 35], "rz_gate": [16, 18], "rzz": [6, 16, 18, 31, 34], "rzz_gate": [16, 18], "s_gate": [16, 18], "s_state": [16, 22], "s_state_inst": 22, "same": [4, 6, 18, 28, 32, 33, 34, 35, 39, 41], "sampl": [4, 19, 40], "satisfi": [18, 29], "save": [6, 8], "save_path": 6, "scalar": 36, "scale": [6, 36], "scale_circuit_plot_param": [31, 36], "schatten": 40, "schmidt": 40, "schmidt_decompos": [38, 40], "sdg": [6, 16, 18, 31, 35], "sdg_gate": [16, 18], "search": 18, "second": [14, 39, 40], "see": [4, 29], "seed": 8, "select": [6, 25, 40], "self": [5, 6], "semi": 39, "sequenc": [4, 19, 21, 22, 25, 40], "sequenti": 4, "sergei": 19, "seri": 40, "set": [1, 4, 8, 14, 16, 32, 36, 39, 41], "set_backend": [7, 8], "set_circuit_plot_param": [31, 36], "set_devic": [7, 8], "set_dtyp": [7, 8], "set_op": 39, "set_se": [7, 8], "setup": [14, 25], "shape": [12, 13, 17, 18, 21, 28, 39, 40, 41], "share": [6, 32, 33, 34, 35], "shift": [16, 18], "shift_gat": [16, 18], "shift_oper": 18, "shot": 40, "should": [8, 19, 22, 28, 29, 39, 41], "show": [4, 6], "show_plot": [4, 6], "shown": 40, "sigma": [20, 29, 41], "sigma_k": [20, 29], "sigx_p": 9, "sigy_p": 9, "sigz_p": 9, "simon": 18, "simpli": 9, "simplifi": 9, "simul": [6, 29], "sin": [6, 18, 34, 35], "sin_theta": 6, "singl": [5, 6, 14, 24, 32, 33, 34, 35, 41], "single_qubit_g": [26, 31], "site": 9, "size": [9, 19, 21, 24, 25, 40], "soon": 37, "sort": 4, "sourc": [4, 5, 6, 12, 13, 24, 25, 28, 29, 30, 32, 33, 34, 35, 37, 41], "space": [18, 21, 40, 41], "span": 21, "spars": 9, "special": [1, 26], "specif": 25, "specifi": [6, 14, 18, 25, 28, 32, 39, 40, 41], "spin": 9, "spinop": [7, 9], "sqrt": [6, 18, 20, 22, 29, 34, 35, 40, 41], "sqrtm": [38, 40], "squar": [40, 41], "st": [18, 39], "stab_nul": [38, 41], "stab_renyi": [38, 41], "stabil": 41, "stabilizer_renyi_entropi": 41, "stackexchang": 4, "standard": [4, 6, 21], "start": [4, 6, 8, 32], "state": [1, 4, 6, 7, 16, 19, 20, 21, 24, 25, 29, 37, 39, 40, 41], "state_1st": 14, "state_backend": 14, "state_basi": 21, "state_batch": 25, "state_fidel": [38, 41], "state_vector": [10, 11, 14, 19, 21, 22, 25], "statefidel": [23, 24], "std_basi": [16, 21, 25], "stine": 41, "stinespr": [6, 19, 28, 30, 37, 41], "stinespring_channel": 6, "stinespring_mat": 30, "stinespring_repr": [6, 28], "stinespringrepr": [27, 30], "stop_gradi": 4, "store": [12, 13], "str": [4, 6, 8, 9, 14, 19, 21, 25, 28, 29, 33, 34, 35, 37, 40, 41], "string": [4, 9, 18, 21, 25], "strongli": [5, 6], "structur": 19, "style": [4, 6], "sub": [4, 40], "subnorm": 41, "subsystem": [6, 18, 25, 33, 40], "sum": [29, 40], "sum_": [17, 22], "sum_i": 40, "superconduct": 29, "support": [4, 6, 14, 24, 25, 32, 33, 39, 41], "support_batch": [6, 32, 33], "surround": 5, "suzuki": 6, "swap": [6, 16, 18, 31, 33, 34, 40], "swap_gat": [16, 18], "sys_a": 40, "sys_dim": [12, 13], "system": [4, 6, 9, 12, 13, 14, 18, 19, 21, 22, 25, 28, 30, 32, 33, 37, 39, 40, 41], "system_dim": [4, 6, 14, 18, 19, 21, 22, 40], "system_idx": [4, 6, 25, 28, 29, 30, 32, 33, 37], "system_seq": [12, 13], "s\u00f8rensen": [6, 34], "t": [6, 16, 18, 21, 31, 35, 40], "t1": 6, "t2": 6, "t_1": [20, 29], "t_2": [20, 29], "t_a": [40, 41], "t_gate": [16, 18], "tabl": 14, "take": [40, 41], "taken": [40, 41], "targ": 6, "target": [19, 24, 25, 41], "target_batch": 24, "target_st": 24, "target_state_batch": 24, "taylor": 40, "tdg": [6, 16, 18, 31, 35], "tdg_gate": [16, 18], "templat": 5, "tensor": [4, 5, 6, 8, 9, 12, 13, 14, 17, 18, 19, 20, 21, 24, 25, 28, 29, 30, 32, 33, 34, 35, 37, 39, 40, 41], "tensor_st": [10, 14], "term": [9, 19, 25], "test": 39, "tex": 6, "texliv": 6, "text": [6, 20, 28, 29, 41], "textrm": 6, "th": 22, "than": [29, 40], "thei": 21, "theori": 19, "thermal": [6, 20, 29], "thermal_relax": 6, "thermal_relaxation_krau": [16, 20], "thermalrelax": [27, 29], "theta": [4, 6, 18, 34, 35], "theta2": [6, 34, 35], "thi": [4, 5, 6, 12, 13, 14, 19, 20, 21, 22, 24, 25, 28, 29, 30, 32, 33, 37, 39, 40, 41], "three": [5, 6, 18, 20, 29, 34], "through": 37, "tikz": 6, "time": [6, 19, 20, 21, 29, 40, 41], "tini": 6, "to_latex": 6, "to_mix": 13, "to_stat": [10, 14], "todo": 4, "toffoli": [6, 16, 18, 31, 34], "toffoli_g": [16, 18], "tol": 41, "toler": [14, 39, 41], "tool": [40, 41], "torch": [6, 8, 14, 17, 18, 20, 25, 34, 35, 39, 40, 41], "total": [6, 29, 32], "tr": [29, 40, 41], "tr_dist": 41, "tr_norm": 40, "trace": [13, 24, 38, 39, 40, 41], "trace_dist": [24, 38, 41], "trace_idx": [13, 40], "trace_norm": [38, 40], "trace_st": 13, "tracedist": [23, 24], "trainabl": 4, "transact": 19, "transfer_stat": 4, "transform": [21, 40], "transpos": [18, 40], "transpose_idx": 40, "trap": 34, "trotter": 6, "true": [4, 6, 9, 19, 25, 28, 32, 39, 40, 41], "tug": 6, "tupl": [9, 25, 40, 41], "tutori": [0, 19], "two": [4, 5, 6, 9, 14, 18, 20, 25, 29, 33, 34, 39, 40, 41], "type": [4, 6, 8, 9, 14, 17, 18, 19, 20, 21, 22, 24, 25, 28, 32, 36, 37, 39, 40, 41], "type_repr": [28, 37], "typeerror": [28, 39, 41], "u": [6, 17, 18, 40, 41], "u3": [5, 6, 16, 18, 31, 35], "u3_gat": [16, 18], "u3_matrix": 18, "u_3": [6, 18], "u_perm": 18, "u_qudit_matrix": 18, "uf": [16, 18], "uf_gat": [16, 18], "unexpect": 28, "uni": 6, "uniform": 4, "unitari": [4, 5, 6, 18, 19, 32, 33, 37, 39, 40, 41], "unitary_hermitian": 19, "unitary_matrix": [4, 18], "unitary_matrix_1": 19, "unitary_matrix_2": 19, "unitary_matrix_3": 19, "unitary_stabilizer_nul": 41, "univers": [5, 6, 18, 29, 33], "universal2": [2, 5, 16, 18], "universal2_g": [16, 18], "universal3": [2, 5, 16, 18], "universal3_g": [16, 18], "universal_qudit": [6, 16, 18], "universal_three_qubit": 6, "universal_two_qubit": 6, "universalqudit": [31, 33], "unknown": 6, "unnorm": 21, "unsqueez": 6, "unstructur": 18, "unsupport": [28, 41], "updat": [4, 29, 36], "update_param": 4, "upper": 19, "uppercas": 41, "us": [4, 6, 8, 9, 14, 18, 24, 25, 37, 39, 40], "usag": 40, "use_spars": 9, "user": [9, 25, 32], "util": 6, "uv": [17, 41], "v": [17, 40, 41], "valid": [14, 39, 41], "valu": [8, 24, 25, 29, 39], "valueerror": [8, 28, 32, 34, 35, 41], "var": 40, "variabl": 40, "vdot": [6, 18], "vec": 39, "vector": [13, 19, 21, 39, 40], "verifi": [39, 41], "version": 29, "vertic": [6, 17], "visual": [1, 6, 7, 26, 31], "von": 41, "von_neumann_entropi": [38, 41], "w": 22, "w_state": [16, 22], "w_state_inst": 22, "wai": [6, 37], "want": 37, "we": [4, 6], "weakli": [5, 6], "weyl": 21, "when": [6, 13, 14, 21, 32, 34, 41], "where": [6, 17, 20, 21, 28, 29, 37, 41], "whether": [4, 6, 9, 19, 25, 28, 32, 33, 34, 35, 37, 39, 40], "which": [4, 5, 6, 9, 24, 25, 28, 29, 30, 32, 33, 34, 35, 37, 40, 41], "whose": [6, 19, 22, 40], "width": 32, "wire": 6, "wireoverrid": 6, "within": 39, "without": [40, 41], "word": 9, "written": 6, "wrong": [19, 22, 24, 25], "www": 6, "x": [6, 9, 16, 18, 20, 21, 25, 29, 31, 32, 34, 35, 39, 40, 41], "x0": [17, 19, 25], "x1": [17, 41], "x2": [17, 19], "x3": 9, "x_gate": [16, 18], "x_i": 9, "x_k": 17, "x_u": 17, "x_v": 17, "xx": [6, 18], "xy": [17, 25], "xy_fidel": 41, "xy_hamiltonian": [16, 17], "x\u2081\u00b2": 40, "y": [6, 16, 18, 20, 21, 25, 29, 31, 34, 35, 40, 41], "y0": [17, 19, 25], "y1": 17, "y2": [17, 41], "y_gate": [16, 18], "y_i": 9, "y_u": 17, "y_v": 17, "yield": 4, "you": [24, 25, 37], "your": 6, "yy": [6, 18], "yz": 25, "z": [6, 9, 16, 18, 19, 20, 21, 25, 29, 31, 34, 35, 37, 41], "z0": [9, 17, 19, 25, 41], "z1": [9, 17, 19, 41], "z2": [17, 19], "z_gate": [16, 18], "z_i": 9, "z_u": 17, "z_v": 17, "zero": [4, 22, 40, 41], "zero_st": [16, 22, 41], "ziz": 9, "zxzz": 9, "zz": [6, 18], "zzix": 9, "zzx": 9}, "titles": ["Welcome to QuAIRKit\u2019s documentation!", "quairkit", "quairkit.ansatz", "quairkit.ansatz.comb", "quairkit.ansatz.container", "quairkit.ansatz.layer", "quairkit.circuit", "quairkit.core", "quairkit.core.base", "quairkit.core.hamiltonian", "quairkit.core.state", "quairkit.core.state.backend", "quairkit.core.state.backend.density_matrix", "quairkit.core.state.backend.state_vector", "quairkit.core.state.state", "quairkit.core.visual", "quairkit.database", "quairkit.database.hamiltonian", "quairkit.database.matrix", "quairkit.database.random", "quairkit.database.representation", "quairkit.database.set", "quairkit.database.state", "quairkit.loss", "quairkit.loss.distance", "quairkit.loss.measure", "quairkit.operator", "quairkit.operator.channel", "quairkit.operator.channel.base", "quairkit.operator.channel.common", "quairkit.operator.channel.custom", "quairkit.operator.gate", "quairkit.operator.gate.base", "quairkit.operator.gate.custom", "quairkit.operator.gate.multi_qubit_gate", "quairkit.operator.gate.single_qubit_gate", "quairkit.operator.gate.visual", "quairkit.operator.special", "quairkit.qinfo", "quairkit.qinfo.check", "quairkit.qinfo.linalg", "quairkit.qinfo.qinfo", "tutorials", "tutorials.feature", "tutorials.introduction"], "titleterms": {"": 0, "ansatz": [2, 3, 4, 5], "backend": [11, 12, 13], "base": [8, 28, 32], "channel": [27, 28, 29, 30], "check": 39, "circuit": 6, "comb": 3, "common": 29, "contain": 4, "core": [7, 8, 9, 10, 11, 12, 13, 14, 15], "custom": [30, 33], "databas": [16, 17, 18, 19, 20, 21, 22], "density_matrix": 12, "distanc": 24, "document": 0, "featur": 43, "gate": [31, 32, 33, 34, 35, 36], "hamiltonian": [9, 17], "introduct": 44, "layer": 5, "linalg": 40, "loss": [23, 24, 25], "matrix": 18, "measur": 25, "multi_qubit_g": 34, "note": [4, 5, 6, 8, 9, 12, 13, 14, 25, 28, 29, 32, 39, 41], "oper": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "qinfo": [38, 39, 40, 41], "quairkit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "random": 19, "represent": 20, "set": 21, "single_qubit_g": 35, "special": 37, "state": [10, 11, 12, 13, 14, 22], "state_vector": 13, "tutori": [42, 43, 44], "visual": [15, 36], "warn": [6, 41], "welcom": 0}})