Search.setIndex({"alltitles": {"Note": [[2, null], [3, null], [3, null], [3, null], [3, null], [3, null], [3, null], [4, null], [4, null], [4, null], [4, null], [4, null], [6, null], [7, null], [9, null], [9, null], [9, null], [9, null], [9, null], [9, null], [10, null], [11, null], [12, null], [12, null], [23, null], [26, null], [27, null], [27, null], [27, null], [27, null], [30, null], [30, null], [36, null]], "Welcome to QuAIRKit\u2019s documentation!": [[0, null]], "quairkit.ansatz": [[1, null]], "quairkit.ansatz.container": [[2, null]], "quairkit.ansatz.layer": [[3, null]], "quairkit.circuit": [[4, null]], "quairkit.core": [[5, null]], "quairkit.core.base": [[6, null]], "quairkit.core.hamiltonian": [[7, null]], "quairkit.core.state": [[8, null]], "quairkit.core.state.backend": [[9, null]], "quairkit.core.state.backend.density_matrix": [[10, null]], "quairkit.core.state.backend.state_vector": [[11, null]], "quairkit.core.state.state": [[12, null]], "quairkit.core.visual": [[13, null]], "quairkit.database": [[14, null]], "quairkit.database.hamiltonian": [[15, null]], "quairkit.database.matrix": [[16, null]], "quairkit.database.random": [[17, null]], "quairkit.database.representation": [[18, null]], "quairkit.database.set": [[19, null]], "quairkit.database.state": [[20, null]], "quairkit.loss": [[21, null]], "quairkit.loss.distance": [[22, null]], "quairkit.loss.measure": [[23, null]], "quairkit.operator": [[24, null]], "quairkit.operator.channel": [[25, null]], "quairkit.operator.channel.base": [[26, null]], "quairkit.operator.channel.common": [[27, null]], "quairkit.operator.channel.custom": [[28, null]], "quairkit.operator.gate": [[29, null]], "quairkit.operator.gate.base": [[30, null]], "quairkit.operator.gate.custom": [[31, null]], "quairkit.operator.gate.encoding": [[32, null]], "quairkit.operator.gate.multi_qubit_gate": [[33, null]], "quairkit.operator.gate.single_qubit_gate": [[34, null]], "quairkit.operator.gate.visual": [[35, null]], "quairkit.operator.special": [[36, null]], "quairkit.qinfo": [[37, null]]}, "docurls": ["index.html", "quairkit.ansatz.html", "quairkit.ansatz.container.html", "quairkit.ansatz.layer.html", "quairkit.circuit.html", "quairkit.core.html", "quairkit.core.base.html", "quairkit.core.hamiltonian.html", "quairkit.core.state.html", "quairkit.core.state.backend.html", "quairkit.core.state.backend.density_matrix.html", "quairkit.core.state.backend.state_vector.html", "quairkit.core.state.state.html", "quairkit.core.visual.html", "quairkit.database.html", "quairkit.database.hamiltonian.html", "quairkit.database.matrix.html", "quairkit.database.random.html", "quairkit.database.representation.html", "quairkit.database.set.html", "quairkit.database.state.html", "quairkit.loss.html", "quairkit.loss.distance.html", "quairkit.loss.measure.html", "quairkit.operator.html", "quairkit.operator.channel.html", "quairkit.operator.channel.base.html", "quairkit.operator.channel.common.html", "quairkit.operator.channel.custom.html", "quairkit.operator.gate.html", "quairkit.operator.gate.base.html", "quairkit.operator.gate.custom.html", "quairkit.operator.gate.encoding.html", "quairkit.operator.gate.multi_qubit_gate.html", "quairkit.operator.gate.single_qubit_gate.html", "quairkit.operator.gate.visual.html", "quairkit.operator.special.html", "quairkit.qinfo.html"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2}, "indexentries": {"amplitude_damping() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.amplitude_damping", false]], "amplitude_damping_kraus() (in module quairkit.database.representation)": [[18, "quairkit.database.representation.amplitude_damping_kraus", false]], "amplitudedamping (class in quairkit.operator.channel.common)": [[27, "quairkit.operator.channel.common.AmplitudeDamping", false]], "append() (quairkit.ansatz.container.operatorlist method)": [[2, "quairkit.ansatz.container.OperatorList.append", false]], "are_qubits() (quairkit.core.state.backend.state method)": [[9, "quairkit.core.state.backend.State.are_qubits", false]], "are_qutrits() (quairkit.core.state.backend.state method)": [[9, "quairkit.core.state.backend.State.are_qutrits", false]], "backend (class in quairkit.core.base)": [[6, "quairkit.core.base.Backend", false]], "backend (quairkit.core.state.backend.state property)": [[9, "quairkit.core.state.backend.State.backend", false]], "batch_dim (quairkit.core.state.backend.state property)": [[9, "quairkit.core.state.backend.State.batch_dim", false]], "bell_basis() (in module quairkit.database.set)": [[19, "quairkit.database.set.bell_basis", false]], "bell_diagonal_state() (in module quairkit.database.state)": [[20, "quairkit.database.state.bell_diagonal_state", false]], "bell_state() (in module quairkit.database.state)": [[20, "quairkit.database.state.bell_state", false]], "bit_flip() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.bit_flip", false]], "bit_flip_kraus() (in module quairkit.database.representation)": [[18, "quairkit.database.representation.bit_flip_kraus", false]], "bit_phase_flip() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.bit_phase_flip", false]], "bit_phase_flip_kraus() (in module quairkit.database.representation)": [[18, "quairkit.database.representation.bit_phase_flip_kraus", false]], "bitflip (class in quairkit.operator.channel.common)": [[27, "quairkit.operator.channel.common.BitFlip", false]], "bitphaseflip (class in quairkit.operator.channel.common)": [[27, "quairkit.operator.channel.common.BitPhaseFlip", false]], "bra (quairkit.core.state.backend.state property)": [[9, "quairkit.core.state.backend.State.bra", false]], "ccx (class in quairkit.operator.gate.multi_qubit_gate)": [[33, "quairkit.operator.gate.multi_qubit_gate.CCX", false]], "ccx() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.ccx", false]], "channel (class in quairkit.operator.channel.base)": [[26, "quairkit.operator.channel.base.Channel", false]], "check() (quairkit.core.state.backend.state static method)": [[9, "quairkit.core.state.backend.State.check", false]], "choi_channel() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.choi_channel", false]], "choi_repr (quairkit.operator.channel.base.channel property)": [[26, "quairkit.operator.channel.base.Channel.choi_repr", false]], "choirepr (class in quairkit.operator.channel.custom)": [[28, "quairkit.operator.channel.custom.ChoiRepr", false]], "circuit (class in quairkit.circuit)": [[4, "quairkit.circuit.Circuit", false]], "clone() (quairkit.core.state.backend.state method)": [[9, "quairkit.core.state.backend.State.clone", false]], "cnot (class in quairkit.operator.gate.multi_qubit_gate)": [[33, "quairkit.operator.gate.multi_qubit_gate.CNOT", false]], "cnot() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.cnot", false]], "cnot() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.cnot", false]], "cnot_gate() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.cnot_gate", false]], "coefficients (quairkit.core.hamiltonian.hamiltonian property)": [[7, "quairkit.core.hamiltonian.Hamiltonian.coefficients", false]], "collapse (class in quairkit.operator.special)": [[36, "quairkit.operator.special.Collapse", false]], "collapse() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.collapse", false]], "completely_mixed_computational() (in module quairkit.database.state)": [[20, "quairkit.database.state.completely_mixed_computational", false]], "complex_block_layer() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.complex_block_layer", false]], "complex_entangled_layer() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.complex_entangled_layer", false]], "complexblocklayer (class in quairkit.ansatz.layer)": [[3, "quairkit.ansatz.layer.ComplexBlockLayer", false]], "complexentangledlayer (class in quairkit.ansatz.layer)": [[3, "quairkit.ansatz.layer.ComplexEntangledLayer", false]], "computational_state() (in module quairkit.database.state)": [[20, "quairkit.database.state.computational_state", false]], "construct_h_matrix() (quairkit.core.hamiltonian.hamiltonian method)": [[7, "quairkit.core.hamiltonian.Hamiltonian.construct_h_matrix", false]], "control_oracle() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.control_oracle", false]], "controloracle (class in quairkit.operator.gate.custom)": [[31, "quairkit.operator.gate.custom.ControlOracle", false]], "cp (class in quairkit.operator.gate.multi_qubit_gate)": [[33, "quairkit.operator.gate.multi_qubit_gate.CP", false]], "cp() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.cp", false]], "cp() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.cp", false]], "cp_gate() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.cp_gate", false]], "crx (class in quairkit.operator.gate.multi_qubit_gate)": [[33, "quairkit.operator.gate.multi_qubit_gate.CRX", false]], "crx() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.crx", false]], "crx() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.crx", false]], "crx_gate() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.crx_gate", false]], "cry (class in quairkit.operator.gate.multi_qubit_gate)": [[33, "quairkit.operator.gate.multi_qubit_gate.CRY", false]], "cry() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.cry", false]], "cry() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.cry", false]], "cry_gate() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.cry_gate", false]], "crz (class in quairkit.operator.gate.multi_qubit_gate)": [[33, "quairkit.operator.gate.multi_qubit_gate.CRZ", false]], "crz() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.crz", false]], "crz() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.crz", false]], "crz_gate() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.crz_gate", false]], "cswap (class in quairkit.operator.gate.multi_qubit_gate)": [[33, "quairkit.operator.gate.multi_qubit_gate.CSWAP", false]], "cswap() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.cswap", false]], "cswap() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.cswap", false]], "cswap_gate() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.cswap_gate", false]], "cu (class in quairkit.operator.gate.multi_qubit_gate)": [[33, "quairkit.operator.gate.multi_qubit_gate.CU", false]], "cu() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.cu", false]], "cu() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.cu", false]], "cu_gate() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.cu_gate", false]], "cx (in module quairkit.operator.gate.multi_qubit_gate)": [[33, "quairkit.operator.gate.multi_qubit_gate.CX", false]], "cy (class in quairkit.operator.gate.multi_qubit_gate)": [[33, "quairkit.operator.gate.multi_qubit_gate.CY", false]], "cy() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.cy", false]], "cy() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.cy", false]], "cy_gate() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.cy_gate", false]], "cz (class in quairkit.operator.gate.multi_qubit_gate)": [[33, "quairkit.operator.gate.multi_qubit_gate.CZ", false]], "cz() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.cz", false]], "cz() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.cz", false]], "cz_gate() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.cz_gate", false]], "data (quairkit.core.state.backend.state property)": [[9, "quairkit.core.state.backend.State.data", false]], "decompose_pauli_words() (quairkit.core.hamiltonian.hamiltonian method)": [[7, "quairkit.core.hamiltonian.Hamiltonian.decompose_pauli_words", false]], "decompose_with_sites() (quairkit.core.hamiltonian.hamiltonian method)": [[7, "quairkit.core.hamiltonian.Hamiltonian.decompose_with_sites", false]], "density_matrix (quairkit.core.state.backend.state property)": [[9, "quairkit.core.state.backend.State.density_matrix", false]], "depolarizing (class in quairkit.operator.channel.common)": [[27, "quairkit.operator.channel.common.Depolarizing", false]], "depolarizing() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.depolarizing", false]], "depolarizing_kraus() (in module quairkit.database.representation)": [[18, "quairkit.database.representation.depolarizing_kraus", false]], "depth (quairkit.circuit.circuit property)": [[4, "quairkit.circuit.Circuit.depth", false]], "device (quairkit.core.state.backend.state property)": [[9, "quairkit.core.state.backend.State.device", false]], "dim (quairkit.core.state.backend.state property)": [[9, "quairkit.core.state.backend.State.dim", false]], "dim (quairkit.operator.channel.base.channel property)": [[26, "quairkit.operator.channel.base.Channel.dim", false]], "display_in_circuit() (quairkit.operator.gate.base.gate method)": [[30, "quairkit.operator.gate.base.Gate.display_in_circuit", false]], "display_in_circuit() (quairkit.operator.gate.base.paramgate method)": [[30, "quairkit.operator.gate.base.ParamGate.display_in_circuit", false]], "dtype (quairkit.core.state.backend.state property)": [[9, "quairkit.core.state.backend.State.dtype", false]], "evolve() (quairkit.core.state.backend.state method)": [[9, "quairkit.core.state.backend.State.evolve", false]], "expand() (quairkit.core.state.backend.state method)": [[9, "quairkit.core.state.backend.State.expand", false]], "expand_as() (quairkit.core.state.backend.state method)": [[9, "quairkit.core.state.backend.State.expand_as", false]], "expec_val() (quairkit.core.state.backend.state method)": [[9, "quairkit.core.state.backend.State.expec_val", false]], "expecval (class in quairkit.loss.measure)": [[23, "quairkit.loss.measure.ExpecVal", false]], "extend() (quairkit.ansatz.container.operatorlist method)": [[2, "quairkit.ansatz.container.OperatorList.extend", false]], "extend() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.extend", false]], "eye() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.eye", false]], "eye_gate() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.eye_gate", false]], "fit() (quairkit.core.state.backend.state method)": [[9, "quairkit.core.state.backend.State.fit", false]], "forward() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.forward", false]], "forward() (quairkit.loss.distance.statefidelity method)": [[22, "quairkit.loss.distance.StateFidelity.forward", false]], "forward() (quairkit.loss.distance.tracedistance method)": [[22, "quairkit.loss.distance.TraceDistance.forward", false]], "forward() (quairkit.loss.measure.expecval method)": [[23, "quairkit.loss.measure.ExpecVal.forward", false]], "forward() (quairkit.loss.measure.measure method)": [[23, "quairkit.loss.measure.Measure.forward", false]], "forward() (quairkit.operator.special.collapse method)": [[36, "quairkit.operator.special.Collapse.forward", false]], "forward() (quairkit.operator.special.resetstate method)": [[36, "quairkit.operator.special.ResetState.forward", false]], "gate (class in quairkit.operator.gate.base)": [[30, "quairkit.operator.gate.base.Gate", false]], "gate_history (quairkit.ansatz.layer.layer property)": [[3, "quairkit.ansatz.layer.Layer.gate_history", false]], "gate_history (quairkit.circuit.circuit property)": [[4, "quairkit.circuit.Circuit.gate_history", false]], "gate_history_generation() (quairkit.operator.gate.base.gate method)": [[30, "quairkit.operator.gate.base.Gate.gate_history_generation", false]], "gate_history_generation() (quairkit.operator.gate.base.paramgate method)": [[30, "quairkit.operator.gate.base.ParamGate.gate_history_generation", false]], "gell_mann() (in module quairkit.database.set)": [[19, "quairkit.database.set.gell_mann", false]], "generalized_amplitude_damping() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.generalized_amplitude_damping", false]], "generalized_amplitude_damping_kraus() (in module quairkit.database.representation)": [[18, "quairkit.database.representation.generalized_amplitude_damping_kraus", false]], "generalized_depolarizing() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.generalized_depolarizing", false]], "generalized_depolarizing_kraus() (in module quairkit.database.representation)": [[18, "quairkit.database.representation.generalized_depolarizing_kraus", false]], "generalizedamplitudedamping (class in quairkit.operator.channel.common)": [[27, "quairkit.operator.channel.common.GeneralizedAmplitudeDamping", false]], "generalizeddepolarizing (class in quairkit.operator.channel.common)": [[27, "quairkit.operator.channel.common.GeneralizedDepolarizing", false]], "get_backend() (in module quairkit.core.base)": [[6, "quairkit.core.base.get_backend", false]], "get_circuit_plot_param() (in module quairkit.operator.gate.visual)": [[35, "quairkit.operator.gate.visual.get_circuit_plot_param", false]], "get_device() (in module quairkit.core.base)": [[6, "quairkit.core.base.get_device", false]], "get_dtype() (in module quairkit.core.base)": [[6, "quairkit.core.base.get_dtype", false]], "get_float_dtype() (in module quairkit.core.base)": [[6, "quairkit.core.base.get_float_dtype", false]], "get_seed() (in module quairkit.core.base)": [[6, "quairkit.core.base.get_seed", false]], "ghz_state() (in module quairkit.database.state)": [[20, "quairkit.database.state.ghz_state", false]], "grad (quairkit.ansatz.container.operatorlist property)": [[2, "quairkit.ansatz.container.OperatorList.grad", false]], "grover_matrix() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.grover_matrix", false]], "h (class in quairkit.operator.gate.single_qubit_gate)": [[34, "quairkit.operator.gate.single_qubit_gate.H", false]], "h() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.h", false]], "h() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.h", false]], "h_gate() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.h_gate", false]], "haar_density_operator() (in module quairkit.database.random)": [[17, "quairkit.database.random.haar_density_operator", false]], "haar_orthogonal() (in module quairkit.database.random)": [[17, "quairkit.database.random.haar_orthogonal", false]], "haar_state_vector() (in module quairkit.database.random)": [[17, "quairkit.database.random.haar_state_vector", false]], "haar_unitary() (in module quairkit.database.random)": [[17, "quairkit.database.random.haar_unitary", false]], "hamiltonian (class in quairkit.core.hamiltonian)": [[7, "quairkit.core.hamiltonian.Hamiltonian", false]], "heisenberg_hamiltonian() (in module quairkit.database.hamiltonian)": [[15, "quairkit.database.hamiltonian.heisenberg_hamiltonian", false]], "heisenberg_weyl() (in module quairkit.database.set)": [[19, "quairkit.database.set.heisenberg_weyl", false]], "image_to_density_matrix() (in module quairkit.core.state.state)": [[12, "quairkit.core.state.state.image_to_density_matrix", false]], "index_select() (quairkit.core.state.backend.state method)": [[9, "quairkit.core.state.backend.State.index_select", false]], "isdynamic (quairkit.circuit.circuit property)": [[4, "quairkit.circuit.Circuit.isdynamic", false]], "ising_hamiltonian() (in module quairkit.database.hamiltonian)": [[15, "quairkit.database.hamiltonian.ising_hamiltonian", false]], "isotropic_state() (in module quairkit.database.state)": [[20, "quairkit.database.state.isotropic_state", false]], "ket (quairkit.core.state.backend.state property)": [[9, "quairkit.core.state.backend.State.ket", false]], "kraus_channel() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.kraus_channel", false]], "kraus_repr (quairkit.operator.channel.base.channel property)": [[26, "quairkit.operator.channel.base.Channel.kraus_repr", false]], "krausrepr (class in quairkit.operator.channel.custom)": [[28, "quairkit.operator.channel.custom.KrausRepr", false]], "layer (class in quairkit.ansatz.layer)": [[3, "quairkit.ansatz.layer.Layer", false]], "linear_entangled_layer() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.linear_entangled_layer", false]], "linearentangledlayer (class in quairkit.ansatz.layer)": [[3, "quairkit.ansatz.layer.LinearEntangledLayer", false]], "log() (quairkit.core.state.backend.state method)": [[9, "quairkit.core.state.backend.State.log", false]], "matrix (quairkit.core.hamiltonian.hamiltonian property)": [[7, "quairkit.core.hamiltonian.Hamiltonian.matrix", false]], "matrix (quairkit.operator.gate.base.gate property)": [[30, "quairkit.operator.gate.base.Gate.matrix", false]], "measure (class in quairkit.loss.measure)": [[23, "quairkit.loss.measure.Measure", false]], "measure() (quairkit.core.state.backend.state method)": [[9, "quairkit.core.state.backend.State.measure", false]], "mixedstate (class in quairkit.core.state.backend.density_matrix)": [[10, "quairkit.core.state.backend.density_matrix.MixedState", false]], "module": [[1, "module-quairkit.ansatz", false], [2, "module-quairkit.ansatz.container", false], [3, "module-quairkit.ansatz.layer", false], [4, "module-quairkit.circuit", false], [5, "module-quairkit.core", false], [6, "module-quairkit.core.base", false], [7, "module-quairkit.core.hamiltonian", false], [8, "module-quairkit.core.state", false], [9, "module-quairkit.core.state.backend", false], [10, "module-quairkit.core.state.backend.density_matrix", false], [11, "module-quairkit.core.state.backend.state_vector", false], [12, "module-quairkit.core.state.state", false], [13, "module-quairkit.core.visual", false], [14, "module-quairkit.database", false], [15, "module-quairkit.database.hamiltonian", false], [16, "module-quairkit.database.matrix", false], [17, "module-quairkit.database.random", false], [18, "module-quairkit.database.representation", false], [19, "module-quairkit.database.set", false], [20, "module-quairkit.database.state", false], [21, "module-quairkit.loss", false], [22, "module-quairkit.loss.distance", false], [23, "module-quairkit.loss.measure", false], [24, "module-quairkit.operator", false], [25, "module-quairkit.operator.channel", false], [26, "module-quairkit.operator.channel.base", false], [27, "module-quairkit.operator.channel.common", false], [28, "module-quairkit.operator.channel.custom", false], [29, "module-quairkit.operator.gate", false], [30, "module-quairkit.operator.gate.base", false], [31, "module-quairkit.operator.gate.custom", false], [33, "module-quairkit.operator.gate.multi_qubit_gate", false], [34, "module-quairkit.operator.gate.single_qubit_gate", false], [35, "module-quairkit.operator.gate.visual", false], [36, "module-quairkit.operator.special", false], [37, "module-quairkit.qinfo", false]], "ms (class in quairkit.operator.gate.multi_qubit_gate)": [[33, "quairkit.operator.gate.multi_qubit_gate.MS", false]], "ms() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.ms", false]], "ms() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.ms", false]], "ms_gate() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.ms_gate", false]], "n_qubits (quairkit.core.hamiltonian.hamiltonian property)": [[7, "quairkit.core.hamiltonian.Hamiltonian.n_qubits", false]], "n_terms (quairkit.core.hamiltonian.hamiltonian property)": [[7, "quairkit.core.hamiltonian.Hamiltonian.n_terms", false]], "normalize() (quairkit.core.state.backend.state method)": [[9, "quairkit.core.state.backend.State.normalize", false]], "num_qubits (quairkit.circuit.circuit property)": [[4, "quairkit.circuit.Circuit.num_qubits", false]], "num_qubits (quairkit.core.state.backend.state property)": [[9, "quairkit.core.state.backend.State.num_qubits", false]], "num_qutrits (quairkit.circuit.circuit property)": [[4, "quairkit.circuit.Circuit.num_qutrits", false]], "num_systems (quairkit.circuit.circuit property)": [[4, "quairkit.circuit.Circuit.num_systems", false]], "num_systems (quairkit.core.state.backend.state property)": [[9, "quairkit.core.state.backend.State.num_systems", false]], "numel() (quairkit.core.state.backend.state method)": [[9, "quairkit.core.state.backend.State.numel", false]], "numpy() (quairkit.core.state.backend.state method)": [[9, "quairkit.core.state.backend.State.numpy", false]], "of() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.Of", false]], "of_gate() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.Of_gate", false]], "one_state() (in module quairkit.database.state)": [[20, "quairkit.database.state.one_state", false]], "oper_history (quairkit.ansatz.container.operatorlist property)": [[2, "quairkit.ansatz.container.OperatorList.oper_history", false]], "operator (class in quairkit.core.base)": [[6, "quairkit.core.base.Operator", false]], "operatorlist (class in quairkit.ansatz.container)": [[2, "quairkit.ansatz.container.OperatorList", false]], "oracle (class in quairkit.operator.gate.custom)": [[31, "quairkit.operator.gate.custom.Oracle", false]], "oracle() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.oracle", false]], "p (class in quairkit.operator.gate.single_qubit_gate)": [[34, "quairkit.operator.gate.single_qubit_gate.P", false]], "p() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.p", false]], "p() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.p", false]], "p_gate() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.p_gate", false]], "param (quairkit.ansatz.container.operatorlist property)": [[2, "quairkit.ansatz.container.OperatorList.param", false]], "param_oracle() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.param_oracle", false]], "paramgate (class in quairkit.operator.gate.base)": [[30, "quairkit.operator.gate.base.ParamGate", false]], "paramoracle (class in quairkit.operator.gate.custom)": [[31, "quairkit.operator.gate.custom.ParamOracle", false]], "pauli_basis() (in module quairkit.database.set)": [[19, "quairkit.database.set.pauli_basis", false]], "pauli_channel() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.pauli_channel", false]], "pauli_group() (in module quairkit.database.set)": [[19, "quairkit.database.set.pauli_group", false]], "pauli_kraus() (in module quairkit.database.representation)": [[18, "quairkit.database.representation.pauli_kraus", false]], "pauli_str (quairkit.core.hamiltonian.hamiltonian property)": [[7, "quairkit.core.hamiltonian.Hamiltonian.pauli_str", false]], "pauli_str_basis() (in module quairkit.database.set)": [[19, "quairkit.database.set.pauli_str_basis", false]], "pauli_str_povm() (in module quairkit.database.set)": [[19, "quairkit.database.set.pauli_str_povm", false]], "pauli_words (quairkit.core.hamiltonian.hamiltonian property)": [[7, "quairkit.core.hamiltonian.Hamiltonian.pauli_words", false]], "pauli_words_matrix (quairkit.core.hamiltonian.hamiltonian property)": [[7, "quairkit.core.hamiltonian.Hamiltonian.pauli_words_matrix", false]], "pauli_words_r (quairkit.core.hamiltonian.hamiltonian property)": [[7, "quairkit.core.hamiltonian.Hamiltonian.pauli_words_r", false]], "paulichannel (class in quairkit.operator.channel.common)": [[27, "quairkit.operator.channel.common.PauliChannel", false]], "permute() (quairkit.core.state.backend.state method)": [[9, "quairkit.core.state.backend.State.permute", false]], "phase() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.phase", false]], "phase_damping() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.phase_damping", false]], "phase_damping_kraus() (in module quairkit.database.representation)": [[18, "quairkit.database.representation.phase_damping_kraus", false]], "phase_flip() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.phase_flip", false]], "phase_flip_kraus() (in module quairkit.database.representation)": [[18, "quairkit.database.representation.phase_flip_kraus", false]], "phase_gate() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.phase_gate", false]], "phase_space_point() (in module quairkit.database.set)": [[19, "quairkit.database.set.phase_space_point", false]], "phasedamping (class in quairkit.operator.channel.common)": [[27, "quairkit.operator.channel.common.PhaseDamping", false]], "phaseflip (class in quairkit.operator.channel.common)": [[27, "quairkit.operator.channel.common.PhaseFlip", false]], "plot() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.plot", false]], "plot_density_matrix_graph() (in module quairkit.core.visual)": [[13, "quairkit.core.visual.plot_density_matrix_graph", false]], "plot_multi_qubits_state_in_bloch_sphere() (in module quairkit.core.visual)": [[13, "quairkit.core.visual.plot_multi_qubits_state_in_bloch_sphere", false]], "plot_rotation_in_bloch_sphere() (in module quairkit.core.visual)": [[13, "quairkit.core.visual.plot_rotation_in_bloch_sphere", false]], "plot_state_in_bloch_sphere() (in module quairkit.core.visual)": [[13, "quairkit.core.visual.plot_state_in_bloch_sphere", false]], "purestate (class in quairkit.core.state.backend.state_vector)": [[11, "quairkit.core.state.backend.state_vector.PureState", false]], "qaoalayer (class in quairkit.ansatz.layer)": [[3, "quairkit.ansatz.layer.QAOALayer", false]], "qaoalayerweighted (class in quairkit.ansatz.layer)": [[3, "quairkit.ansatz.layer.QAOALayerWeighted", false]], "qft_basis() (in module quairkit.database.set)": [[19, "quairkit.database.set.qft_basis", false]], "qft_matrix() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.qft_matrix", false]], "quairkit.ansatz": [[1, "module-quairkit.ansatz", false]], "quairkit.ansatz.container": [[2, "module-quairkit.ansatz.container", false]], "quairkit.ansatz.layer": [[3, "module-quairkit.ansatz.layer", false]], "quairkit.circuit": [[4, "module-quairkit.circuit", false]], "quairkit.core": [[5, "module-quairkit.core", false]], "quairkit.core.base": [[6, "module-quairkit.core.base", false]], "quairkit.core.hamiltonian": [[7, "module-quairkit.core.hamiltonian", false]], "quairkit.core.state": [[8, "module-quairkit.core.state", false]], "quairkit.core.state.backend": [[9, "module-quairkit.core.state.backend", false]], "quairkit.core.state.backend.density_matrix": [[10, "module-quairkit.core.state.backend.density_matrix", false]], "quairkit.core.state.backend.state_vector": [[11, "module-quairkit.core.state.backend.state_vector", false]], "quairkit.core.state.state": [[12, "module-quairkit.core.state.state", false]], "quairkit.core.visual": [[13, "module-quairkit.core.visual", false]], "quairkit.database": [[14, "module-quairkit.database", false]], "quairkit.database.hamiltonian": [[15, "module-quairkit.database.hamiltonian", false]], "quairkit.database.matrix": [[16, "module-quairkit.database.matrix", false]], "quairkit.database.random": [[17, "module-quairkit.database.random", false]], "quairkit.database.representation": [[18, "module-quairkit.database.representation", false]], "quairkit.database.set": [[19, "module-quairkit.database.set", false]], "quairkit.database.state": [[20, "module-quairkit.database.state", false]], "quairkit.loss": [[21, "module-quairkit.loss", false]], "quairkit.loss.distance": [[22, "module-quairkit.loss.distance", false]], "quairkit.loss.measure": [[23, "module-quairkit.loss.measure", false]], "quairkit.operator": [[24, "module-quairkit.operator", false]], "quairkit.operator.channel": [[25, "module-quairkit.operator.channel", false]], "quairkit.operator.channel.base": [[26, "module-quairkit.operator.channel.base", false]], "quairkit.operator.channel.common": [[27, "module-quairkit.operator.channel.common", false]], "quairkit.operator.channel.custom": [[28, "module-quairkit.operator.channel.custom", false]], "quairkit.operator.gate": [[29, "module-quairkit.operator.gate", false]], "quairkit.operator.gate.base": [[30, "module-quairkit.operator.gate.base", false]], "quairkit.operator.gate.custom": [[31, "module-quairkit.operator.gate.custom", false]], "quairkit.operator.gate.multi_qubit_gate": [[33, "module-quairkit.operator.gate.multi_qubit_gate", false]], "quairkit.operator.gate.single_qubit_gate": [[34, "module-quairkit.operator.gate.single_qubit_gate", false]], "quairkit.operator.gate.visual": [[35, "module-quairkit.operator.gate.visual", false]], "quairkit.operator.special": [[36, "module-quairkit.operator.special", false]], "quairkit.qinfo": [[37, "module-quairkit.qinfo", false]], "r_state() (in module quairkit.database.state)": [[20, "quairkit.database.state.r_state", false]], "random_channel() (in module quairkit.database.random)": [[17, "quairkit.database.random.random_channel", false]], "random_density_matrix() (in module quairkit.database.random)": [[17, "quairkit.database.random.random_density_matrix", false]], "random_hamiltonian_generator() (in module quairkit.database.random)": [[17, "quairkit.database.random.random_hamiltonian_generator", false]], "random_hermitian() (in module quairkit.database.random)": [[17, "quairkit.database.random.random_hermitian", false]], "random_orthogonal_projection() (in module quairkit.database.random)": [[17, "quairkit.database.random.random_orthogonal_projection", false]], "random_pauli_str_generator() (in module quairkit.database.random)": [[17, "quairkit.database.random.random_pauli_str_generator", false]], "random_state() (in module quairkit.database.random)": [[17, "quairkit.database.random.random_state", false]], "random_unitary() (in module quairkit.database.random)": [[17, "quairkit.database.random.random_unitary", false]], "random_unitary_hermitian() (in module quairkit.database.random)": [[17, "quairkit.database.random.random_unitary_hermitian", false]], "random_unitary_with_hermitian_block() (in module quairkit.database.random)": [[17, "quairkit.database.random.random_unitary_with_hermitian_block", false]], "randomize_param() (quairkit.ansatz.container.operatorlist method)": [[2, "quairkit.ansatz.container.OperatorList.randomize_param", false]], "rank (quairkit.core.state.backend.state property)": [[9, "quairkit.core.state.backend.State.rank", false]], "real_block_layer() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.real_block_layer", false]], "real_entangled_layer() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.real_entangled_layer", false]], "realblocklayer (class in quairkit.ansatz.layer)": [[3, "quairkit.ansatz.layer.RealBlockLayer", false]], "realentangledlayer (class in quairkit.ansatz.layer)": [[3, "quairkit.ansatz.layer.RealEntangledLayer", false]], "reduce_gate() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.reduce_gate", false]], "replacement_choi() (in module quairkit.database.representation)": [[18, "quairkit.database.representation.replacement_choi", false]], "replacementchannel (class in quairkit.operator.channel.common)": [[27, "quairkit.operator.channel.common.ReplacementChannel", false]], "reset_channel() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.reset_channel", false]], "reset_circuit_plot_param() (in module quairkit.operator.gate.visual)": [[35, "quairkit.operator.gate.visual.reset_circuit_plot_param", false]], "reset_kraus() (in module quairkit.database.representation)": [[18, "quairkit.database.representation.reset_kraus", false]], "reset_sequence() (quairkit.core.state.backend.state method)": [[9, "quairkit.core.state.backend.State.reset_sequence", false]], "resetchannel (class in quairkit.operator.channel.common)": [[27, "quairkit.operator.channel.common.ResetChannel", false]], "resetstate (class in quairkit.operator.special)": [[36, "quairkit.operator.special.ResetState", false]], "rx (class in quairkit.operator.gate.single_qubit_gate)": [[34, "quairkit.operator.gate.single_qubit_gate.RX", false]], "rx() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.rx", false]], "rx() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.rx", false]], "rx_gate() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.rx_gate", false]], "rxx (class in quairkit.operator.gate.multi_qubit_gate)": [[33, "quairkit.operator.gate.multi_qubit_gate.RXX", false]], "rxx() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.rxx", false]], "rxx() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.rxx", false]], "rxx_gate() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.rxx_gate", false]], "ry (class in quairkit.operator.gate.single_qubit_gate)": [[34, "quairkit.operator.gate.single_qubit_gate.RY", false]], "ry() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.ry", false]], "ry() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.ry", false]], "ry_gate() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.ry_gate", false]], "ryy (class in quairkit.operator.gate.multi_qubit_gate)": [[33, "quairkit.operator.gate.multi_qubit_gate.RYY", false]], "ryy() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.ryy", false]], "ryy() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.ryy", false]], "ryy_gate() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.ryy_gate", false]], "rz (class in quairkit.operator.gate.single_qubit_gate)": [[34, "quairkit.operator.gate.single_qubit_gate.RZ", false]], "rz() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.rz", false]], "rz() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.rz", false]], "rz_gate() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.rz_gate", false]], "rzz (class in quairkit.operator.gate.multi_qubit_gate)": [[33, "quairkit.operator.gate.multi_qubit_gate.RZZ", false]], "rzz() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.rzz", false]], "rzz() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.rzz", false]], "rzz_gate() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.rzz_gate", false]], "s (class in quairkit.operator.gate.single_qubit_gate)": [[34, "quairkit.operator.gate.single_qubit_gate.S", false]], "s() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.s", false]], "s() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.s", false]], "s_gate() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.s_gate", false]], "s_state() (in module quairkit.database.state)": [[20, "quairkit.database.state.s_state", false]], "scale_circuit_plot_param() (in module quairkit.operator.gate.visual)": [[35, "quairkit.operator.gate.visual.scale_circuit_plot_param", false]], "sdg (class in quairkit.operator.gate.single_qubit_gate)": [[34, "quairkit.operator.gate.single_qubit_gate.Sdg", false]], "sdg() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.sdg", false]], "sdg() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.sdg", false]], "sdg_gate() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.sdg_gate", false]], "set_backend() (in module quairkit.core.base)": [[6, "quairkit.core.base.set_backend", false]], "set_circuit_plot_param() (in module quairkit.operator.gate.visual)": [[35, "quairkit.operator.gate.visual.set_circuit_plot_param", false]], "set_device() (in module quairkit.core.base)": [[6, "quairkit.core.base.set_device", false]], "set_dtype() (in module quairkit.core.base)": [[6, "quairkit.core.base.set_dtype", false]], "set_gate_info() (quairkit.operator.gate.base.gate method)": [[30, "quairkit.operator.gate.base.Gate.set_gate_info", false]], "set_seed() (in module quairkit.core.base)": [[6, "quairkit.core.base.set_seed", false]], "shape (quairkit.core.state.backend.state property)": [[9, "quairkit.core.state.backend.State.shape", false]], "shift() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.shift", false]], "shift_gate() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.shift_gate", false]], "sigx_p (quairkit.core.hamiltonian.spinops property)": [[7, "quairkit.core.hamiltonian.SpinOps.sigx_p", false]], "sigy_p (quairkit.core.hamiltonian.spinops property)": [[7, "quairkit.core.hamiltonian.SpinOps.sigy_p", false]], "sigz_p (quairkit.core.hamiltonian.spinops property)": [[7, "quairkit.core.hamiltonian.SpinOps.sigz_p", false]], "sites (quairkit.core.hamiltonian.hamiltonian property)": [[7, "quairkit.core.hamiltonian.Hamiltonian.sites", false]], "spinops (class in quairkit.core.hamiltonian)": [[7, "quairkit.core.hamiltonian.SpinOps", false]], "sqrt() (quairkit.core.state.backend.state method)": [[9, "quairkit.core.state.backend.State.sqrt", false]], "state (class in quairkit.core.state.backend)": [[9, "quairkit.core.state.backend.State", false]], "statefidelity (class in quairkit.loss.distance)": [[22, "quairkit.loss.distance.StateFidelity", false]], "std_basis() (in module quairkit.database.set)": [[19, "quairkit.database.set.std_basis", false]], "stinespring_channel() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.stinespring_channel", false]], "stinespring_repr (quairkit.operator.channel.base.channel property)": [[26, "quairkit.operator.channel.base.Channel.stinespring_repr", false]], "stinespringrepr (class in quairkit.operator.channel.custom)": [[28, "quairkit.operator.channel.custom.StinespringRepr", false]], "superposition_layer() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.superposition_layer", false]], "superpositionlayer (class in quairkit.ansatz.layer)": [[3, "quairkit.ansatz.layer.SuperpositionLayer", false]], "swap (class in quairkit.operator.gate.multi_qubit_gate)": [[33, "quairkit.operator.gate.multi_qubit_gate.SWAP", false]], "swap() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.swap", false]], "swap() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.swap", false]], "swap_gate() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.swap_gate", false]], "system_dim (quairkit.circuit.circuit property)": [[4, "quairkit.circuit.Circuit.system_dim", false]], "system_dim (quairkit.core.state.backend.state property)": [[9, "quairkit.core.state.backend.State.system_dim", false]], "system_history (quairkit.circuit.circuit property)": [[4, "quairkit.circuit.Circuit.system_history", false]], "system_seq (quairkit.core.state.backend.density_matrix.mixedstate property)": [[10, "quairkit.core.state.backend.density_matrix.MixedState.system_seq", false]], "system_seq (quairkit.core.state.backend.state property)": [[9, "quairkit.core.state.backend.State.system_seq", false]], "system_seq (quairkit.core.state.backend.state_vector.purestate property)": [[11, "quairkit.core.state.backend.state_vector.PureState.system_seq", false]], "t (class in quairkit.operator.gate.single_qubit_gate)": [[34, "quairkit.operator.gate.single_qubit_gate.T", false]], "t() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.t", false]], "t() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.t", false]], "t_gate() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.t_gate", false]], "tdg (class in quairkit.operator.gate.single_qubit_gate)": [[34, "quairkit.operator.gate.single_qubit_gate.Tdg", false]], "tdg() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.tdg", false]], "tdg() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.tdg", false]], "tdg_gate() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.tdg_gate", false]], "tensor_state() (in module quairkit.core.state.state)": [[12, "quairkit.core.state.state.tensor_state", false]], "terms (quairkit.core.hamiltonian.hamiltonian property)": [[7, "quairkit.core.hamiltonian.Hamiltonian.terms", false]], "thermal_relaxation() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.thermal_relaxation", false]], "thermal_relaxation_kraus() (in module quairkit.database.representation)": [[18, "quairkit.database.representation.thermal_relaxation_kraus", false]], "thermalrelaxation (class in quairkit.operator.channel.common)": [[27, "quairkit.operator.channel.common.ThermalRelaxation", false]], "to() (quairkit.core.state.backend.state method)": [[9, "quairkit.core.state.backend.State.to", false]], "to_state() (in module quairkit.core.state.state)": [[12, "quairkit.core.state.state.to_state", false]], "toffoli (in module quairkit.operator.gate.multi_qubit_gate)": [[33, "quairkit.operator.gate.multi_qubit_gate.Toffoli", false]], "toffoli() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.toffoli", false]], "toffoli_gate() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.toffoli_gate", false]], "trace() (quairkit.core.state.backend.state method)": [[9, "quairkit.core.state.backend.State.trace", false]], "tracedistance (class in quairkit.loss.distance)": [[22, "quairkit.loss.distance.TraceDistance", false]], "transfer_static() (quairkit.ansatz.container.operatorlist method)": [[2, "quairkit.ansatz.container.OperatorList.transfer_static", false]], "transform() (quairkit.core.state.backend.state method)": [[9, "quairkit.core.state.backend.State.transform", false]], "transpose() (quairkit.core.state.backend.state method)": [[9, "quairkit.core.state.backend.State.transpose", false]], "u3 (class in quairkit.operator.gate.single_qubit_gate)": [[34, "quairkit.operator.gate.single_qubit_gate.U3", false]], "u3() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.u3", false]], "u3() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.u3", false]], "u3_gate() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.u3_gate", false]], "uf() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.Uf", false]], "uf_gate() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.Uf_gate", false]], "unitary_matrix() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.unitary_matrix", false]], "universal2() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.universal2", false]], "universal2_gate() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.universal2_gate", false]], "universal3() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.universal3", false]], "universal3_gate() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.universal3_gate", false]], "universal_qudit() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.universal_qudit", false]], "universal_qudits() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.universal_qudits", false]], "universal_three_qubits() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.universal_three_qubits", false]], "universal_two_qubits() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.universal_two_qubits", false]], "universalqudits (class in quairkit.operator.gate.custom)": [[31, "quairkit.operator.gate.custom.UniversalQudits", false]], "universalthreequbits (class in quairkit.operator.gate.multi_qubit_gate)": [[33, "quairkit.operator.gate.multi_qubit_gate.UniversalThreeQubits", false]], "universaltwoqubits (class in quairkit.operator.gate.multi_qubit_gate)": [[33, "quairkit.operator.gate.multi_qubit_gate.UniversalTwoQubits", false]], "update_param() (quairkit.ansatz.container.operatorlist method)": [[2, "quairkit.ansatz.container.OperatorList.update_param", false]], "vec (quairkit.core.state.backend.state property)": [[9, "quairkit.core.state.backend.State.vec", false]], "w_state() (in module quairkit.database.state)": [[20, "quairkit.database.state.w_state", false]], "weak_superposition_layer() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.weak_superposition_layer", false]], "weaksuperpositionlayer (class in quairkit.ansatz.layer)": [[3, "quairkit.ansatz.layer.WeakSuperpositionLayer", false]], "x (class in quairkit.operator.gate.single_qubit_gate)": [[34, "quairkit.operator.gate.single_qubit_gate.X", false]], "x() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.x", false]], "x() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.x", false]], "x_gate() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.x_gate", false]], "xy_hamiltonian() (in module quairkit.database.hamiltonian)": [[15, "quairkit.database.hamiltonian.xy_hamiltonian", false]], "y (class in quairkit.operator.gate.single_qubit_gate)": [[34, "quairkit.operator.gate.single_qubit_gate.Y", false]], "y() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.y", false]], "y() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.y", false]], "y_gate() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.y_gate", false]], "z (class in quairkit.operator.gate.single_qubit_gate)": [[34, "quairkit.operator.gate.single_qubit_gate.Z", false]], "z() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.z", false]], "z() (quairkit.circuit.circuit method)": [[4, "quairkit.circuit.Circuit.z", false]], "z_gate() (in module quairkit.database.matrix)": [[16, "quairkit.database.matrix.z_gate", false]], "zero_state() (in module quairkit.database.state)": [[20, "quairkit.database.state.zero_state", false]]}, "objects": {"quairkit": [[1, 0, 0, 1, "ansatz", ""], [4, 0, 0, 1, "circuit", ""], [5, 0, 0, 1, "core", ""], [14, 0, 0, 1, "database", ""], [21, 0, 0, 1, "loss", ""], [24, 0, 0, 1, "operator", ""], [37, 0, 0, 1, "qinfo", ""]], "quairkit.ansatz": [[2, 0, 0, 1, "container", ""], [3, 0, 0, 1, "layer", ""]], "quairkit.ansatz.container": [[2, 1, 1, 0, "OperatorList", "Sequential container."]], "quairkit.ansatz.container.OperatorList": [[2, 3, 1, 0, "append", "Appends an given operator to the end."], [2, 3, 1, 0, "extend", "Appends an given operator to the end."], [2, 4, 1, 0, "grad", "Gradients with respect to the flattened parameters."], [2, 4, 1, 0, "oper_history", "Return the operator history of this Sequential"], [2, 4, 1, 0, "param", "Flattened parameters in this list."], [2, 3, 1, 0, "randomize_param", "Randomize parameters of the list based on the initializer. Current we only support Uniform and Normal initializer."], [2, 3, 1, 0, "transfer_static", "set stop_gradient of all parameters of the list as True"], [2, 3, 1, 0, "update_param", "Replace parameters of all/one layer(s) by theta."]], "quairkit.ansatz.container.OperatorList.__init__": [[2, 2, 2, 0, "operators", "initial operators ready to be a sequential"]], "quairkit.ansatz.container.OperatorList.append": [[2, 2, 2, 0, "op", "module to append"]], "quairkit.ansatz.container.OperatorList.extend": [[2, 2, 2, 0, "sequential", "module to append"]], "quairkit.ansatz.container.OperatorList.randomize_param": [[2, 2, 2, 0, "arg0", "first argument of the initializer."], [2, 2, 2, 0, "arg1", "first argument of the initializer."], [2, 2, 2, 0, "method", "The sampling method."]], "quairkit.ansatz.container.OperatorList.update_param": [[2, 2, 2, 0, "idx", "Index of replacement."], [2, 2, 2, 0, "theta", "New parameters"]], "quairkit.ansatz.layer": [[3, 1, 1, 0, "ComplexBlockLayer", "Weakly entangled layers consisting of single-qubit rotation gates and CNOT gates."], [3, 1, 1, 0, "ComplexEntangledLayer", "Strongly entangled layers consisting of single-qubit rotation gates and CNOT gates."], [3, 1, 1, 0, "Layer", "Base class for Layers."], [3, 1, 1, 0, "LinearEntangledLayer", "Linear entangled layers consisting of Ry gates, Rz gates, and CNOT gates."], [3, 1, 1, 0, "QAOALayer", "QAOA driving layers"], [3, 1, 1, 0, "QAOALayerWeighted", "QAOA driving layers with weights"], [3, 1, 1, 0, "RealBlockLayer", "Weakly entangled layers consisting of Ry gates and CNOT gates."], [3, 1, 1, 0, "RealEntangledLayer", "Strongly entangled layers consisting of Ry gates and CNOT gates."], [3, 1, 1, 0, "SuperpositionLayer", "Layers of Hadamard gates."], [3, 1, 1, 0, "WeakSuperpositionLayer", "Layers of Ry gates with a rotation angle \\pi/4."]], "quairkit.ansatz.layer.ComplexBlockLayer.__init__": [[3, 2, 2, 0, "depth", "Number of layers."], [3, 2, 2, 0, "num_qubits", "Total number of qubits."], [3, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the layer is applied. Defaults to None i.e."]], "quairkit.ansatz.layer.ComplexEntangledLayer.__init__": [[3, 2, 2, 0, "depth", "Number of layers."], [3, 2, 2, 0, "num_qubits", "Total number of qubits."], [3, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the layer is applied. Defaults to None i.e."]], "quairkit.ansatz.layer.Layer": [[3, 4, 1, 0, "gate_history", "list of gates information of this layer"]], "quairkit.ansatz.layer.Layer.__init__": [[3, 2, 2, 0, "depth", "Number of layers."], [3, 2, 2, 0, "num_qubits", "Total number of qubits."], [3, 2, 2, 0, "qubits_idx", "Indices of the qubits on which this layer is applied."]], "quairkit.ansatz.layer.LinearEntangledLayer.__init__": [[3, 2, 2, 0, "depth", "Number of layers."], [3, 2, 2, 0, "num_qubits", "Total number of qubits."], [3, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the layer is applied. Defaults to None i.e."]], "quairkit.ansatz.layer.QAOALayer.__init__": [[3, 2, 2, 0, "depth", "depth of layer"], [3, 2, 2, 0, "edges", "edges of the graph"], [3, 2, 2, 0, "nodes", "nodes of the graph"]], "quairkit.ansatz.layer.QAOALayerWeighted.__init__": [[3, 2, 2, 0, "depth", "depth of layer"], [3, 2, 2, 0, "edges", "edges of the graph with weights"], [3, 2, 2, 0, "nodes", "nodes of the graph with weights"]], "quairkit.ansatz.layer.RealBlockLayer.__init__": [[3, 2, 2, 0, "depth", "Number of layers."], [3, 2, 2, 0, "num_qubits", "Total number of qubits."], [3, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the layer is applied. Defaults to None i.e."]], "quairkit.ansatz.layer.RealEntangledLayer.__init__": [[3, 2, 2, 0, "depth", "Number of layers."], [3, 2, 2, 0, "num_qubits", "Total number of qubits."], [3, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the layer is applied. Defaults to None i.e."]], "quairkit.ansatz.layer.SuperpositionLayer.__init__": [[3, 2, 2, 0, "num_qubits", "Total number of qubits."], [3, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the layer is applied. Defaults to None i.e."]], "quairkit.ansatz.layer.WeakSuperpositionLayer.__init__": [[3, 2, 2, 0, "num_qubits", "Total number of qubits."], [3, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the layer is applied. Defaults to None i.e."]], "quairkit.circuit": [[4, 1, 1, 0, "Circuit", "Quantum circuit."]], "quairkit.circuit.Circuit": [[4, 3, 1, 0, "amplitude_damping", "Add amplitude damping channels."], [4, 3, 1, 0, "bit_flip", "Add bit flip channels."], [4, 3, 1, 0, "bit_phase_flip", "Add bit phase flip channels."], [4, 3, 1, 0, "ccx", "Add CCX (Toffoli) gates."], [4, 3, 1, 0, "choi_channel", "Add custom channels in the Choi representation."], [4, 3, 1, 0, "cnot", "Add CNOT gates."], [4, 3, 1, 0, "collapse", "list of systems to be collapsed. Defaults to all qubits."], [4, 3, 1, 0, "complex_block_layer", "Add weakly entangled layers consisting of single-qubit rotation gates and CNOT gates."], [4, 3, 1, 0, "complex_entangled_layer", "Add strongly entangled layers consisting of single-qubit rotation gates and CNOT gates."], [4, 3, 1, 0, "control_oracle", "Add a controlled oracle gate."], [4, 3, 1, 0, "cp", "Add controlled P gates."], [4, 3, 1, 0, "crx", "Add controlled rotation gates about the x-axis."], [4, 3, 1, 0, "cry", "Add controlled rotation gates about the y-axis."], [4, 3, 1, 0, "crz", "Add controlled rotation gates about the z-axis."], [4, 3, 1, 0, "cswap", "Add CSWAP (Fredkin) gates."], [4, 3, 1, 0, "cu", "Add controlled single-qubit rotation gates."], [4, 3, 1, 0, "cy", "Add controlled Y gates."], [4, 3, 1, 0, "cz", "Add controlled Z gates."], [4, 3, 1, 0, "depolarizing", "Add depolarizing channels."], [4, 4, 1, 0, "depth", "Depth of gate sequences."], [4, 3, 1, 0, "extend", "extend for quantum circuit"], [4, 3, 1, 0, "forward", "forward the input"], [4, 4, 1, 0, "gate_history", "List of gates information of circuit"], [4, 3, 1, 0, "generalized_amplitude_damping", "Add generalized amplitude damping channels."], [4, 3, 1, 0, "generalized_depolarizing", "Add a general depolarizing channel."], [4, 3, 1, 0, "h", "Add single-qubit Hadamard gates."], [4, 4, 1, 0, "isdynamic", "Whether the circuit is dynamic"], [4, 3, 1, 0, "kraus_channel", "Add custom channels in the Kraus representation."], [4, 3, 1, 0, "linear_entangled_layer", "Add linear entangled layers consisting of Ry gates, Rz gates, and CNOT gates."], [4, 3, 1, 0, "ms", "Add M\u00f8lmer-S\u00f8rensen (MS) gates."], [4, 4, 1, 0, "num_qubits", "Number of qubits."], [4, 4, 1, 0, "num_qutrits", "Number of qutrits."], [4, 4, 1, 0, "num_systems", "Number of systems."], [4, 3, 1, 0, "oracle", "Add an oracle gate."], [4, 3, 1, 0, "p", "Add single-qubit P gates."], [4, 3, 1, 0, "param_oracle", "Add a parameterized oracle gate."], [4, 3, 1, 0, "pauli_channel", "Add Pauli channels."], [4, 3, 1, 0, "phase_damping", "Add phase damping channels."], [4, 3, 1, 0, "phase_flip", "Add phase flip channels."], [4, 3, 1, 0, "plot", "display the circuit using matplotlib"], [4, 3, 1, 0, "real_block_layer", "Add weakly entangled layers consisting of Ry gates and CNOT gates."], [4, 3, 1, 0, "real_entangled_layer", "Add strongly entangled layers consisting of Ry gates and CNOT gates."], [4, 3, 1, 0, "reset_channel", "Add reset channels."], [4, 3, 1, 0, "rx", "Add single-qubit rotation gates about the x-axis."], [4, 3, 1, 0, "rxx", "Add RXX gates."], [4, 3, 1, 0, "ry", "Add single-qubit rotation gates about the y-axis."], [4, 3, 1, 0, "ryy", "Add RYY gates."], [4, 3, 1, 0, "rz", "Add single-qubit rotation gates about the z-axis."], [4, 3, 1, 0, "rzz", "Add RZZ gates."], [4, 3, 1, 0, "s", "Add single-qubit S gates."], [4, 3, 1, 0, "sdg", "Add single-qubit S dagger (S inverse) gates."], [4, 3, 1, 0, "stinespring_channel", "Add custom channels in the Stinespring representation."], [4, 3, 1, 0, "superposition_layer", "Add layers of Hadamard gates."], [4, 3, 1, 0, "swap", "Add SWAP gates."], [4, 4, 1, 0, "system_dim", "Dimension of systems."], [4, 4, 1, 0, "system_history", "gate information on each system"], [4, 3, 1, 0, "t", "Add single-qubit T gates."], [4, 3, 1, 0, "tdg", "Add single-qubit T dagger (T inverse) gates."], [4, 3, 1, 0, "thermal_relaxation", "Add thermal relaxation channels."], [4, 3, 1, 0, "u3", "Add single-qubit rotation gates."], [4, 3, 1, 0, "unitary_matrix", "Get the unitary matrix form of the circuit."], [4, 3, 1, 0, "universal_qudits", "Add universal qudit gates. One of such a gate requires d^2 - 1 parameters, where d is the gate dimension."], [4, 3, 1, 0, "universal_three_qubits", "Add universal three-qubit gates. One of such a gate requires 81 parameters."], [4, 3, 1, 0, "universal_two_qubits", "Add universal two-qubit gates. One of such a gate requires 15 parameters."], [4, 3, 1, 0, "weak_superposition_layer", "Add layers of Ry gates with a rotation angle \\pi/4."], [4, 3, 1, 0, "x", "Add single-qubit X gates."], [4, 3, 1, 0, "y", "Add single-qubit Y gates."], [4, 3, 1, 0, "z", "Add single-qubit Z gates."]], "quairkit.circuit.Circuit.__init__": [[4, 2, 2, 0, "num_systems", "number of systems in the circuit."], [4, 2, 2, 0, "system_dim", "dimension of systems of this circuit."]], "quairkit.circuit.Circuit.amplitude_damping": [[4, 2, 2, 0, "gamma", "Damping probability."], [4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the channels are applied."]], "quairkit.circuit.Circuit.bit_flip": [[4, 2, 2, 0, "prob", "Probability of a bit flip."], [4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the channels are applied."]], "quairkit.circuit.Circuit.bit_phase_flip": [[4, 2, 2, 0, "prob", "Probability of a bit phase flip."], [4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the channels are applied."]], "quairkit.circuit.Circuit.ccx": [[4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.choi_channel": [[4, 2, 2, 0, "choi_repr", "Choi representation of this channel."], [4, 2, 2, 0, "system_idx", "Indices of the systems on which the channels are applied."]], "quairkit.circuit.Circuit.cnot": [[4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.collapse": [[4, 2, 2, 0, "desired_result", "The desired result you want to collapse."], [4, 2, 2, 0, "if_print", "whether print the information about the collapsed state."], [4, 2, 2, 0, "measure_basis", "The basis of the measurement."], [4, 2, 2, 0, "system_idx", "list of systems to be collapsed."]], "quairkit.circuit.Circuit.complex_block_layer": [[4, 2, 2, 0, "depth", "Number of layers."], [4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.complex_entangled_layer": [[4, 2, 2, 0, "depth", "Number of layers."], [4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.control_oracle": [[4, 2, 2, 0, "gate_name", "name of this oracle."], [4, 2, 2, 0, "latex_name", "latex name of this oracle, default to be the gate name."], [4, 2, 2, 0, "oracle", "Unitary oracle to be implemented."], [4, 2, 2, 0, "plot_width", "width of this gate in circuit plot, default to be proportional with the gate name."], [4, 2, 2, 0, "system_idx", "Indices of the systems on which the gates are applied."]], "quairkit.circuit.Circuit.cp": [[4, 2, 2, 0, "param", "Parameters of the gates."], [4, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.crx": [[4, 2, 2, 0, "param", "Parameters of the gates."], [4, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.cry": [[4, 2, 2, 0, "param", "Parameters of the gates."], [4, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.crz": [[4, 2, 2, 0, "param", "Parameters of the gates."], [4, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.cswap": [[4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.cu": [[4, 2, 2, 0, "param", "Parameters of the gates."], [4, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.cy": [[4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.cz": [[4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.depolarizing": [[4, 2, 2, 0, "prob", "Parameter of the depolarizing channel."], [4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the channels are applied."]], "quairkit.circuit.Circuit.extend": [[4, 2, 2, 0, "cir", "a Circuit or a OperatorList"]], "quairkit.circuit.Circuit.forward": [[4, 2, 2, 0, "state", "initial state"]], "quairkit.circuit.Circuit.generalized_amplitude_damping": [[4, 2, 2, 0, "gamma", "Damping probability."], [4, 2, 2, 0, "prob", "Excitation probability."], [4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the channels are applied."]], "quairkit.circuit.Circuit.generalized_depolarizing": [[4, 2, 2, 0, "prob", "Probabilities corresponding to the Pauli basis."], [4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the channel is applied."]], "quairkit.circuit.Circuit.h": [[4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.kraus_channel": [[4, 2, 2, 0, "kraus_oper", "Kraus representation of this channel."], [4, 2, 2, 0, "system_idx", "Indices of the systems on which the channels are applied."]], "quairkit.circuit.Circuit.linear_entangled_layer": [[4, 2, 2, 0, "depth", "Number of layers."], [4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.ms": [[4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.oracle": [[4, 2, 2, 0, "gate_name", "name of this oracle."], [4, 2, 2, 0, "latex_name", "latex name of this oracle, default to be the gate name."], [4, 2, 2, 0, "oracle", "Unitary oracle to be implemented."], [4, 2, 2, 0, "plot_width", "width of this gate in circuit plot, default to be proportional with the gate name."], [4, 2, 2, 0, "system_idx", "Indices of the systems on which the gates are applied."]], "quairkit.circuit.Circuit.p": [[4, 2, 2, 0, "param", "Parameters of the gates."], [4, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.param_oracle": [[4, 2, 2, 0, "gate_name", "name of this oracle."], [4, 2, 2, 0, "generator", "function that generates the oracle."], [4, 2, 2, 0, "latex_name", "latex name of this oracle, default to be the gate name."], [4, 2, 2, 0, "num_acted_param", "the number of parameters required for a single operation."], [4, 2, 2, 0, "param", "input parameters of quantum parameterized gates."], [4, 2, 2, 0, "plot_width", "width of this gate in circuit plot, default to be proportional with the gate name."], [4, 2, 2, 0, "system_idx", "indices of the system on which this gate acts on."]], "quairkit.circuit.Circuit.pauli_channel": [[4, 2, 2, 0, "prob", "Probabilities corresponding to the Pauli X, Y, and Z operators."], [4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the channels are applied."]], "quairkit.circuit.Circuit.phase_damping": [[4, 2, 2, 0, "gamma", "Parameter of the phase damping channel."], [4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the channels are applied."]], "quairkit.circuit.Circuit.phase_flip": [[4, 2, 2, 0, "prob", "Probability of a phase flip."], [4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the channels are applied."]], "quairkit.circuit.Circuit.plot": [[4, 2, 2, 0, "dpi", "dots per inches, here is resolution ratio"], [4, 2, 2, 0, "output", "whether return the matplotlib.figure.Figure instance"], [4, 2, 2, 0, "save_path", "the save path of image"], [4, 2, 2, 0, "scale", "scale coefficient of figure, default to 1.0"], [4, 2, 2, 0, "show", "whether execute plt.show()"], [4, 2, 2, 0, "tex", "a bool flag which controls latex fonts of gate display, default to False."]], "quairkit.circuit.Circuit.real_block_layer": [[4, 2, 2, 0, "depth", "Number of layers."], [4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.real_entangled_layer": [[4, 2, 2, 0, "depth", "Number of layers."], [4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.reset_channel": [[4, 2, 2, 0, "prob", "Probabilities of resetting to |0\\rangle and to |1\\rangle."], [4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the channels are applied."]], "quairkit.circuit.Circuit.rx": [[4, 2, 2, 0, "param", "Parameters of the gates."], [4, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.rxx": [[4, 2, 2, 0, "param", "Parameters of the gates."], [4, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.ry": [[4, 2, 2, 0, "param", "Parameters of the gates."], [4, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.ryy": [[4, 2, 2, 0, "param", "Parameters of the gates."], [4, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.rz": [[4, 2, 2, 0, "param", "Parameters of the gates."], [4, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.rzz": [[4, 2, 2, 0, "param", "Parameters of the gates."], [4, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.s": [[4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.sdg": [[4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.stinespring_channel": [[4, 2, 2, 0, "stinespring_repr", "Stinespring representation of this channel."], [4, 2, 2, 0, "system_idx", "Indices of the systems on which the channels are applied."]], "quairkit.circuit.Circuit.superposition_layer": [[4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.swap": [[4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.t": [[4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.tdg": [[4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.thermal_relaxation": [[4, 2, 2, 0, "const_t", "T_1 and T_2 relaxation time in microseconds."], [4, 2, 2, 0, "exec_time", "Quantum gate execution time in the process of relaxation in nanoseconds."], [4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the channels are applied."]], "quairkit.circuit.Circuit.u3": [[4, 2, 2, 0, "param", "Parameters of the gates."], [4, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.universal_qudits": [[4, 2, 2, 0, "param", "Parameters of the gates."], [4, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [4, 2, 2, 0, "system_idx", "Indices of the systems on which the gates are applied."]], "quairkit.circuit.Circuit.universal_three_qubits": [[4, 2, 2, 0, "param", "Parameters of the gates."], [4, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.universal_two_qubits": [[4, 2, 2, 0, "param", "Parameters of the gates."], [4, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.weak_superposition_layer": [[4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.x": [[4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.y": [[4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.circuit.Circuit.z": [[4, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.core": [[6, 0, 0, 1, "base", ""], [7, 0, 0, 1, "hamiltonian", ""], [8, 0, 0, 1, "state", ""], [13, 0, 0, 1, "visual", ""]], "quairkit.core.base": [[6, 1, 1, 0, "Backend", "Backend classifier in the QuAIRKit."], [6, 1, 1, 0, "Operator", "The basic class to implement the operation in QuAIRKit."], [6, 5, 1, 0, "get_backend", "Get the current backend of QuAIRKit."], [6, 5, 1, 0, "get_device", "Get the current device to save the tensor."], [6, 5, 1, 0, "get_dtype", "Return currently used data type."], [6, 5, 1, 0, "get_float_dtype", "Return currently used float data type."], [6, 5, 1, 0, "get_seed", "Get the currently used seed of QuAIRKit."], [6, 5, 1, 0, "set_backend", "Set the backend implementation of QuAIRKit."], [6, 5, 1, 0, "set_device", "Set the device to save the tensor."], [6, 5, 1, 0, "set_dtype", "Set the data type ."], [6, 5, 1, 0, "set_seed", "Set the global seed of QuAIRKit."]], "quairkit.core.base.Backend.__init__": [[6, 2, 2, "quairkit.core.base.Backend", "value", "Backend classifier in the QuAIRKit."]], "quairkit.core.base.Operator.__init__": [[6, 2, 2, 0, "backend", "The backend implementation of the operator. Defaults to None, which means to use the default backend implementation."], [6, 2, 2, 0, "dtype", "The data type of the operator. Defaults to None, which means to use the default data type."]], "quairkit.core.base.set_backend": [[6, 2, 2, 0, "backend", "The name of the backend."]], "quairkit.core.base.set_device": [[6, 2, 2, 0, "device", "The name of the device."]], "quairkit.core.base.set_dtype": [[6, 2, 2, 0, "dtype", "The dtype can be complex64 and complex128."]], "quairkit.core.base.set_seed": [[6, 2, 2, 0, "seed", "the random seed used in QuAIRKit."]], "quairkit.core.hamiltonian": [[7, 1, 1, 0, "Hamiltonian", "Hamiltonian class in QuAIRKit."], [7, 1, 1, 0, "SpinOps", "The spin operators in matrix forms, could be used to construct Hamiltonian matrix or spin observables."]], "quairkit.core.hamiltonian.Hamiltonian": [[7, 4, 1, 0, "coefficients", "The coefficient of each term in the Hamiltonian, i.e. [1.0, 2.0]."], [7, 3, 1, 0, "construct_h_matrix", "Construct a matrix form of the Hamiltonian in Z-basis."], [7, 3, 1, 0, "decompose_pauli_words", "Decompose pauli_str into coefficients and Pauli strings."], [7, 3, 1, 0, "decompose_with_sites", "Decompose pauli_str into coefficients, a simplified form of Pauli strings, and the indices of qubits on which the Pauli operators act on."], [7, 4, 1, 0, "matrix", "The matrix form of the Hamiltonian."], [7, 4, 1, 0, "n_qubits", "Number of qubits."], [7, 4, 1, 0, "n_terms", "Number of terms of the hamiltonian."], [7, 4, 1, 0, "pauli_str", "The Pauli string corresponding to the hamiltonian."], [7, 4, 1, 0, "pauli_words", "The Pauli word of each term, i.e. ['ZIZ', 'IIX']."], [7, 4, 1, 0, "pauli_words_matrix", "The list of matrices with respect to simplied Pauli words."], [7, 4, 1, 0, "pauli_words_r", "A list of Pauli word (exclude I), i.e. ['ZXZZ', 'Z', 'X']."], [7, 4, 1, 0, "sites", "A list of qubits index corresponding to the hamiltonian."], [7, 4, 1, 0, "terms", "All items in hamiltonian, i.e. [['Z0, Z1'], ['I']]."]], "quairkit.core.hamiltonian.Hamiltonian.__init__": [[7, 2, 2, 0, "compress", "Determines whether the input list will be automatically merged (e.g."], [7, 2, 2, 0, "pauli_str", "A list of Hamiltonian information, e.g."]], "quairkit.core.hamiltonian.Hamiltonian.construct_h_matrix": [[7, 2, 2, 0, "qubit_num", "The number of qubits."]], "quairkit.core.hamiltonian.SpinOps": [[7, 4, 1, 0, "sigx_p", "A list of S^x_i operators, different elements correspond to different indices i."], [7, 4, 1, 0, "sigy_p", "A list of S^y_i operators, different elements correspond to different indices i."], [7, 4, 1, 0, "sigz_p", "A list of S^z_i operators, different elements correspond to different indices i."]], "quairkit.core.hamiltonian.SpinOps.__init__": [[7, 2, 2, 0, "size", "Size of the system (number of qubits)."], [7, 2, 2, 0, "use_sparse", "Decide whether to use the sparse matrix to calculate."]], "quairkit.core.state": [[9, 0, 0, 1, "backend", ""], [12, 0, 0, 1, "state", ""]], "quairkit.core.state.backend": [[9, 1, 1, 0, "State", "The abstract base class for quantum states in QuAIRKit."], [10, 0, 0, 1, "density_matrix", ""], [11, 0, 0, 1, "state_vector", ""]], "quairkit.core.state.backend.State": [[9, 3, 1, 0, "are_qubits", "Whether all systems are qubits"], [9, 3, 1, 0, "are_qutrits", "Whether all systems are qutrits"], [9, 4, 1, 0, "backend", "The backend of this state."], [9, 4, 1, 0, "batch_dim", "The batch dimension of this state"], [9, 4, 1, 0, "bra", "Dagger of the ket form."], [9, 3, 1, 0, "check", "Assert whether the input data is valid for the specific State class."], [9, 3, 1, 0, "clone", "Return a copy of the quantum state."], [9, 4, 1, 0, "data", "The data tensor of this state"], [9, 4, 1, 0, "density_matrix", "The density matrix representation of this state."], [9, 4, 1, 0, "device", "The device of this state"], [9, 4, 1, 0, "dim", "The dimension of this state"], [9, 4, 1, 0, "dtype", "The data type of this state"], [9, 3, 1, 0, "evolve", "Evolve this state with unitary operators."], [9, 3, 1, 0, "expand", "Expand the batch dimension of the State."], [9, 3, 1, 0, "expand_as", "Expand this tensor to the same size as other."], [9, 3, 1, 0, "expec_val", "The expectation value of the observable with respect to the quantum state."], [9, 3, 1, 0, "fit", "Convert the data to the specified backend."], [9, 3, 1, 0, "index_select", "Indexing elements from the State batch along the given dimension."], [9, 4, 1, 0, "ket", "The ket form of this state"], [9, 3, 1, 0, "log", "Matrix logarithm of the state."], [9, 3, 1, 0, "measure", "Measure the quantum state"], [9, 3, 1, 0, "normalize", "Normalize this state"], [9, 4, 1, 0, "num_qubits", "The number of qubits of this state, when all systems are qubits"], [9, 4, 1, 0, "num_systems", "The number of systems"], [9, 3, 1, 0, "numel", "The number of elements in this data"], [9, 3, 1, 0, "numpy", "Get the data in numpy."], [9, 3, 1, 0, "permute", "Permute the systems order of the state."], [9, 4, 1, 0, "rank", "The rank of the state."], [9, 3, 1, 0, "reset_sequence", "reset the system order to default sequence i.e. from 1 to n."], [9, 4, 1, 0, "shape", "The shape of this state"], [9, 3, 1, 0, "sqrt", "Matrix square root of the state."], [9, 4, 1, 0, "system_dim", "The list of dimensions for each system"], [9, 4, 1, 0, "system_seq", "The system order of this state"], [9, 3, 1, 0, "to", "Change the property of the data tensor, and return a copy of this State"], [9, 3, 1, 0, "trace", "(Partial) trace of the state"], [9, 3, 1, 0, "transform", "Apply a general linear operator to the state."], [9, 3, 1, 0, "transpose", "(Partial) transpose of the state"], [9, 4, 1, 0, "vec", "\\textrm{vec}(|i \\rangle\\langle j|)=|j, i \\rangle"]], "quairkit.core.state.backend.State.__init__": [[9, 2, 2, 0, "data", "tensor array for quantum state(s)."], [9, 2, 2, 0, "sys_dim", "a list of dimensions for each system."], [9, 2, 2, 0, "system_seq", "the system order of this state."]], "quairkit.core.state.backend.State.check": [[9, 2, 2, 0, "data", "tensor array for quantum state(s)."], [9, 2, 2, 0, "eps", "the tolerance for the numerical check."], [9, 2, 2, 0, "sys_dim", "(list of) dimension(s) of the systems, can be a list of integers or an integer."]], "quairkit.core.state.backend.State.evolve": [[9, 2, 2, 0, "sys_idx", "the system indices to be acted on."], [9, 2, 2, 0, "unitary", "the unitary operator."]], "quairkit.core.state.backend.State.expand": [[9, 2, 2, 0, "batch_dim", "the new batch dimension"]], "quairkit.core.state.backend.State.expand_as": [[9, 2, 2, 0, "other", "the state/tensor to be expanded to."]], "quairkit.core.state.backend.State.expec_val": [[9, 2, 2, 0, "decompose", "If decompose is True, it will return the expectation value of each term."], [9, 2, 2, 0, "hamiltonian", "Input observable."], [9, 2, 2, "quairkit.core.state.backend.State.expec_val", "shots", "The expectation value of the observable with respect to the quantum state."]], "quairkit.core.state.backend.State.fit": [[9, 2, 2, 0, "state_backend", "the target backend of the state."]], "quairkit.core.state.backend.State.index_select": [[9, 2, 2, 0, "dim", "the dimension in which we index"], [9, 2, 2, 0, "index", "the 1-D tensor containing the indices to index"]], "quairkit.core.state.backend.State.measure": [[9, 2, 2, 0, "is_povm", "whether the measurement is a POVM."], [9, 2, 2, 0, "keep_state", "whether to keep the state after measurement."], [9, 2, 2, 0, "measured_op", "measurement operator."], [9, 2, 2, 0, "sys_idx", "the system indices to be measured."]], "quairkit.core.state.backend.State.permute": [[9, 2, 2, 0, "target_seq", "the target systems order."]], "quairkit.core.state.backend.State.to": [[9, 2, 2, 0, "device", "the new device of the state."], [9, 2, 2, 0, "dtype", "the new data type of the state."]], "quairkit.core.state.backend.State.trace": [[9, 2, 2, 0, "trace_idx", "the subsystem indices to be traced out."]], "quairkit.core.state.backend.State.transform": [[9, 2, 2, 0, "op", "the input operator."], [9, 2, 2, 0, "repr_type", "the representation type of input operator."], [9, 2, 2, 0, "sys_idx", "the qubit indices to be applied."]], "quairkit.core.state.backend.State.transpose": [[9, 2, 2, 0, "transpose_idx", "the subsystem indices to be transposed."]], "quairkit.core.state.backend.density_matrix": [[10, 1, 1, 0, "MixedState", "The mixed state class."]], "quairkit.core.state.backend.density_matrix.MixedState": [[10, 4, 1, 0, "system_seq", "The system order of this state"]], "quairkit.core.state.backend.density_matrix.MixedState.__init__": [[10, 2, 2, 0, "data", "tensor array (in density matrix representation) for quantum mixed state(s)."], [10, 2, 2, 0, "sys_dim", "a list of dimensions for each system."], [10, 2, 2, 0, "system_seq", "the system order of this state."]], "quairkit.core.state.backend.state_vector": [[11, 1, 1, 0, "PureState", "The pure state class."]], "quairkit.core.state.backend.state_vector.PureState": [[11, 4, 1, 0, "system_seq", "The system order of this state"]], "quairkit.core.state.backend.state_vector.PureState.__init__": [[11, 2, 2, 0, "data", "tensor array in vector representation for quantum pure state(s)."], [11, 2, 2, 0, "sys_dim", "a list of dimensions for each system."], [11, 2, 2, 0, "system_seq", "the system order of this state."]], "quairkit.core.state.state": [[12, 5, 1, 0, "image_to_density_matrix", "Encode image to density matrix"], [12, 5, 1, 0, "tensor_state", "calculate tensor product (kronecker product) between at least two state. This function automatically returns State instance"], [12, 5, 1, 0, "to_state", "The function to generate a specified state instance."]], "quairkit.core.state.state.image_to_density_matrix": [[12, 2, 2, 0, "image_filepath", "Path to the image file."]], "quairkit.core.state.state.tensor_state": [[12, 2, 2, 0, "args", "other states"], [12, 2, 2, 0, "state_a", "State"], [12, 2, 2, 0, "state_b", "State"]], "quairkit.core.state.state.to_state": [[12, 2, 2, 0, "data", "a representation of the quantum state in allowable backend, or an instance of the State class."], [12, 2, 2, 0, "dtype", "Used to specify the data dtype of the data."], [12, 2, 2, 0, "eps", "The tolerance for checking the validity of the input state."], [12, 2, 2, 0, "state_backend", "The backend of the state."], [12, 2, 2, 0, "system_dim", "(list of) dimension(s) of the systems, can be a list of integers or an integer. For example, system_dim = 2 means the systems are qubits (default setup); system_dim = [2, 3] means the first system is a qubit and the second is a qutrit."]], "quairkit.core.visual": [[13, 5, 1, 0, "plot_density_matrix_graph", "Density matrix visualization tools"], [13, 5, 1, 0, "plot_multi_qubits_state_in_bloch_sphere", "Displaying the quantum state on the Bloch sphere which has multi qubits."], [13, 5, 1, 0, "plot_rotation_in_bloch_sphere", "Plot the rotation starting from the initial quantum state on the Bloch sphere."], [13, 5, 1, 0, "plot_state_in_bloch_sphere", "Plot the input quantum state on the Bloch sphere."]], "quairkit.core.visual.plot_density_matrix_graph": [[13, 2, 2, 0, "density_matrix", "The state vector or density matrix of quantum state with multi qubits, requiring the number of qubits greater than 1"], [13, 2, 2, 0, "size", "Bar width, between 0 and 1, default is 0.3."]], "quairkit.core.visual.plot_multi_qubits_state_in_bloch_sphere": [[13, 2, 2, 0, "filename", "The name of the picture to be stored."], [13, 2, 2, 0, "save_gif", "Whether to store the gif."], [13, 2, 2, 0, "save_pic", "Whether to store the picture."], [13, 2, 2, 0, "set_color", "To set the specified color, consult the cmap table."], [13, 2, 2, 0, "show_arrow", "Whether to show an arrow for each vector."], [13, 2, 2, 0, "state", "List of the input quantum states in the state vector form or the density matrix form."], [13, 2, 2, 0, "view_angle", "View angle."], [13, 2, 2, 0, "view_dist", "View distance."], [13, 2, 2, 0, "which_qubits", "Index of qubits to display, default to be fully displayed."]], "quairkit.core.visual.plot_rotation_in_bloch_sphere": [[13, 2, 2, 0, "color_scheme", "initial color, trace color, and end color, respectively."], [13, 2, 2, 0, "filename", "The name of the gif file to be stored."], [13, 2, 2, 0, "init_state", "Initial quantum state in the state vector form or the density matrix form."], [13, 2, 2, 0, "rotating_angle", "Rotation angle [theta, phi, lam]."], [13, 2, 2, 0, "save_gif", "Whether to store the gif."], [13, 2, 2, 0, "show_arrow", "Whether to show an arrow for each vector."], [13, 2, 2, 0, "view_angle", "The first element is the angle [0-360] to the x-y plane, and the second element is the angle [0-360] to the x-z plane."], [13, 2, 2, 0, "view_dist", "View distance."]], "quairkit.core.visual.plot_state_in_bloch_sphere": [[13, 2, 2, 0, "filename", "The name of the gif file to be stored."], [13, 2, 2, 0, "save_gif", "Whether to store the gif."], [13, 2, 2, 0, "set_color", "To set the specified color, consult the cmap table."], [13, 2, 2, 0, "show_arrow", "Whether to show an arrow for each vector."], [13, 2, 2, 0, "state", "List of the input quantum states in the state vector form or the density matrix form."], [13, 2, 2, 0, "view_angle", "View angle."], [13, 2, 2, 0, "view_dist", "View distance."]], "quairkit.database": [[15, 0, 0, 1, "hamiltonian", ""], [16, 0, 0, 1, "matrix", ""], [17, 0, 0, 1, "random", ""], [18, 0, 0, 1, "representation", ""], [19, 0, 0, 1, "set", ""], [20, 0, 0, 1, "state", ""]], "quairkit.database.hamiltonian": [[15, 5, 1, 0, "heisenberg_hamiltonian", "Compute the Heisenberg Hamiltonian"], [15, 5, 1, 0, "ising_hamiltonian", "Compute the Ising Hamiltonian"], [15, 5, 1, 0, "xy_hamiltonian", "Compute the Ising Hamiltonian"]], "quairkit.database.hamiltonian.heisenberg_hamiltonian": [[15, 2, 2, 0, "edges", "A tensor E shape=[3, V, V], where E[0][u][v] is alpha_{uv}, E[1][u][v] is beta_{uv} and E[2][u][v] is gamma_{uv}."]], "quairkit.database.hamiltonian.ising_hamiltonian": [[15, 2, 2, 0, "edges", "A tensor E shape=[V, V], where E[u][v] is gamma_{uv}."], [15, 2, 2, 0, "vertices", "A tensor E shape=[V], where V[k] is beta_{k}."]], "quairkit.database.hamiltonian.xy_hamiltonian": [[15, 2, 2, 0, "edges", "A tensor E shape=[2, V, V], where E[0][u][v] is alpha_{uv} and E[1][u][v] is beta_{uv}."]], "quairkit.database.matrix": [[16, 5, 1, 0, "Of", "Construct the unitary matrix maps |x\\rangle to (-1)^{f(x)}|x\\rangle based on a boolean function f."], [16, 5, 1, 0, "Of_gate", "Construct the unitary matrix maps |x\\rangle to (-1)^{f(x)}|x\\rangle based on a boolean function f."], [16, 5, 1, 0, "Uf", "Construct the unitary matrix maps |x\\rangle|y\\rangle to |x\\rangle|y\\oplus f(x)\\rangle based on a boolean function f."], [16, 5, 1, 0, "Uf_gate", "Construct the unitary matrix maps |x\\rangle|y\\rangle to |x\\rangle|y\\oplus f(x)\\rangle based on a boolean function f."], [16, 5, 1, 0, "cnot", "Generate the matrix"], [16, 5, 1, 0, "cnot_gate", "Generate the matrix"], [16, 5, 1, 0, "cp", "Generate the matrix"], [16, 5, 1, 0, "cp_gate", "Generate the matrix"], [16, 5, 1, 0, "crx", "Generate the matrix"], [16, 5, 1, 0, "crx_gate", "Generate the matrix"], [16, 5, 1, 0, "cry", "Generate the matrix"], [16, 5, 1, 0, "cry_gate", "Generate the matrix"], [16, 5, 1, 0, "crz", "Generate the matrix"], [16, 5, 1, 0, "crz_gate", "Generate the matrix"], [16, 5, 1, 0, "cswap", "Generate the matrix"], [16, 5, 1, 0, "cswap_gate", "Generate the matrix"], [16, 5, 1, 0, "cu", "Generate the matrix"], [16, 5, 1, 0, "cu_gate", "Generate the matrix"], [16, 5, 1, 0, "cy", "Generate the matrix"], [16, 5, 1, 0, "cy_gate", "Generate the matrix"], [16, 5, 1, 0, "cz", "Generate the matrix"], [16, 5, 1, 0, "cz_gate", "Generate the matrix"], [16, 5, 1, 0, "eye", "Generate the matrix"], [16, 5, 1, 0, "eye_gate", "Generate the matrix"], [16, 5, 1, 0, "grover_matrix", "Construct the Grover operator based on oracle."], [16, 5, 1, 0, "h", "Generate the matrix"], [16, 5, 1, 0, "h_gate", "Generate the matrix"], [16, 5, 1, 0, "ms", "Generate the matrix"], [16, 5, 1, 0, "ms_gate", "Generate the matrix"], [16, 5, 1, 0, "p", "Generate the matrix"], [16, 5, 1, 0, "p_gate", "Generate the matrix"], [16, 5, 1, 0, "phase", "Generate phase operator for qudit"], [16, 5, 1, 0, "phase_gate", "Generate phase operator for qudit"], [16, 5, 1, 0, "qft_matrix", "Construct the quantum fourier transpose (QFT) gate."], [16, 5, 1, 0, "reduce_gate", "reduce(function, iterable[, initial]) -> value"], [16, 5, 1, 0, "rx", "Generate the matrix"], [16, 5, 1, 0, "rx_gate", "Generate the matrix"], [16, 5, 1, 0, "rxx", "Generate the matrix"], [16, 5, 1, 0, "rxx_gate", "Generate the matrix"], [16, 5, 1, 0, "ry", "Generate the matrix"], [16, 5, 1, 0, "ry_gate", "Generate the matrix"], [16, 5, 1, 0, "ryy", "Generate the matrix"], [16, 5, 1, 0, "ryy_gate", "Generate the matrix"], [16, 5, 1, 0, "rz", "Generate the matrix"], [16, 5, 1, 0, "rz_gate", "Generate the matrix"], [16, 5, 1, 0, "rzz", "Generate the matrix"], [16, 5, 1, 0, "rzz_gate", "Generate the matrix"], [16, 5, 1, 0, "s", "Generate the matrix"], [16, 5, 1, 0, "s_gate", "Generate the matrix"], [16, 5, 1, 0, "sdg", "Generate the matrix"], [16, 5, 1, 0, "sdg_gate", "Generate the matrix"], [16, 5, 1, 0, "shift", "Generate shift operator for qudit"], [16, 5, 1, 0, "shift_gate", "Generate shift operator for qudit"], [16, 5, 1, 0, "swap", "Generate the matrix"], [16, 5, 1, 0, "swap_gate", "Generate the matrix"], [16, 5, 1, 0, "t", "Generate the matrix"], [16, 5, 1, 0, "t_gate", "Generate the matrix"], [16, 5, 1, 0, "tdg", "Generate the matrix"], [16, 5, 1, 0, "tdg_gate", "Generate the matrix"], [16, 5, 1, 0, "toffoli", "Generate the matrix"], [16, 5, 1, 0, "toffoli_gate", "Generate the matrix"], [16, 5, 1, 0, "u3", "Generate the matrix"], [16, 5, 1, 0, "u3_gate", "Generate the matrix"], [16, 5, 1, 0, "universal2", "Generate the matrix"], [16, 5, 1, 0, "universal2_gate", "Generate the matrix"], [16, 5, 1, 0, "universal3", "Generate the matrix"], [16, 5, 1, 0, "universal3_gate", "Generate the matrix"], [16, 5, 1, 0, "universal_qudit", "Generalized GellMann matrix basis were used to construct the universal gate for qudits"], [16, 5, 1, 0, "x", "Generate the matrix"], [16, 5, 1, 0, "x_gate", "Generate the matrix"], [16, 5, 1, 0, "y", "Generate the matrix"], [16, 5, 1, 0, "y_gate", "Generate the matrix"], [16, 5, 1, 0, "z", "Generate the matrix"], [16, 5, 1, 0, "z_gate", "Generate the matrix"]], "quairkit.database.matrix.Of": [[16, 2, 2, 0, "f", "a boolean function f that maps \\{ 0,1 \\}^{n} to \\{ 0,1 \\};"], [16, 2, 2, 0, "n", "the length of input \\{ 0,1 \\}^{n};"]], "quairkit.database.matrix.Of_gate": [[16, 2, 2, 0, "f", "a boolean function f that maps \\{ 0,1 \\}^{n} to \\{ 0,1 \\};"], [16, 2, 2, 0, "n", "the length of input \\{ 0,1 \\}^{n};"]], "quairkit.database.matrix.Uf": [[16, 2, 2, 0, "f", "a boolean function f that maps \\{ 0,1 \\}^{n} to \\{ 0,1 \\};"], [16, 2, 2, 0, "n", "the length of input \\{ 0,1 \\}^{n};"]], "quairkit.database.matrix.Uf_gate": [[16, 2, 2, 0, "f", "a boolean function f that maps \\{ 0,1 \\}^{n} to \\{ 0,1 \\};"], [16, 2, 2, 0, "n", "the length of input \\{ 0,1 \\}^{n};"]], "quairkit.database.matrix.cnot": [[16, 2, 2, 0, "dtype", "the dtype of this matrix."]], "quairkit.database.matrix.cnot_gate": [[16, 2, 2, 0, "dtype", "the dtype of this matrix."]], "quairkit.database.matrix.cp": [[16, 2, 2, 0, "theta", "the parameter of this matrix."]], "quairkit.database.matrix.cp_gate": [[16, 2, 2, 0, "theta", "the parameter of this matrix."]], "quairkit.database.matrix.crx": [[16, 2, 2, 0, "theta", "the parameter of this matrix."]], "quairkit.database.matrix.crx_gate": [[16, 2, 2, 0, "theta", "the parameter of this matrix."]], "quairkit.database.matrix.cry": [[16, 2, 2, 0, "theta", "the parameter of this matrix."]], "quairkit.database.matrix.cry_gate": [[16, 2, 2, 0, "theta", "the parameter of this matrix."]], "quairkit.database.matrix.crz": [[16, 2, 2, 0, "theta", "the parameter of this matrix."]], "quairkit.database.matrix.crz_gate": [[16, 2, 2, 0, "theta", "the parameter of this matrix."]], "quairkit.database.matrix.cswap": [[16, 2, 2, 0, "dtype", "the dtype of this matrix."]], "quairkit.database.matrix.cswap_gate": [[16, 2, 2, 0, "dtype", "the dtype of this matrix."]], "quairkit.database.matrix.cu": [[16, 2, 2, 0, "theta", "the parameter of this matrix."]], "quairkit.database.matrix.cu_gate": [[16, 2, 2, 0, "theta", "the parameter of this matrix."]], "quairkit.database.matrix.cy": [[16, 2, 2, 0, "dtype", "the dtype of this matrix."]], "quairkit.database.matrix.cy_gate": [[16, 2, 2, 0, "dtype", "the dtype of this matrix."]], "quairkit.database.matrix.cz": [[16, 2, 2, 0, "dtype", "the dtype of this matrix."]], "quairkit.database.matrix.cz_gate": [[16, 2, 2, 0, "dtype", "the dtype of this matrix."]], "quairkit.database.matrix.eye": [[16, 2, 2, 0, "dtype", "the dtype of this matrix."]], "quairkit.database.matrix.eye_gate": [[16, 2, 2, 0, "dtype", "the dtype of this matrix."]], "quairkit.database.matrix.grover_matrix": [[16, 2, 2, 0, "oracle", "the input oracle A to be rotated."]], "quairkit.database.matrix.h": [[16, 2, 2, 0, "dtype", "the dtype of this matrix."]], "quairkit.database.matrix.h_gate": [[16, 2, 2, 0, "dtype", "the dtype of this matrix."]], "quairkit.database.matrix.ms": [[16, 2, 2, 0, "dtype", "the dtype of this matrix."]], "quairkit.database.matrix.ms_gate": [[16, 2, 2, 0, "dtype", "the dtype of this matrix."]], "quairkit.database.matrix.p": [[16, 2, 2, 0, "theta", "the parameter of this matrix."]], "quairkit.database.matrix.p_gate": [[16, 2, 2, 0, "theta", "the parameter of this matrix."]], "quairkit.database.matrix.phase": [[16, 2, 2, 0, "dim", "dimension of qudit"]], "quairkit.database.matrix.phase_gate": [[16, 2, 2, 0, "dim", "dimension of qudit"]], "quairkit.database.matrix.qft_matrix": [[16, 2, 2, 0, "dtype", "the data type you used, default type is torch.complex64"], [16, 2, 2, 0, "num_qubits", "number of qubits n st."]], "quairkit.database.matrix.rx": [[16, 2, 2, 0, "theta", "the parameter of this matrix."]], "quairkit.database.matrix.rx_gate": [[16, 2, 2, 0, "theta", "the parameter of this matrix."]], "quairkit.database.matrix.rxx": [[16, 2, 2, 0, "theta", "the parameter of this matrix."]], "quairkit.database.matrix.rxx_gate": [[16, 2, 2, 0, "theta", "the parameter of this matrix."]], "quairkit.database.matrix.ry": [[16, 2, 2, 0, "theta", "the parameter of this matrix."]], "quairkit.database.matrix.ry_gate": [[16, 2, 2, 0, "theta", "the parameter of this matrix."]], "quairkit.database.matrix.ryy": [[16, 2, 2, 0, "theta", "the parameter of this matrix."]], "quairkit.database.matrix.ryy_gate": [[16, 2, 2, 0, "theta", "the parameter of this matrix."]], "quairkit.database.matrix.rz": [[16, 2, 2, 0, "theta", "the parameter of this matrix."]], "quairkit.database.matrix.rz_gate": [[16, 2, 2, 0, "theta", "the parameter of this matrix."]], "quairkit.database.matrix.rzz": [[16, 2, 2, 0, "theta", "the parameter of this matrix."]], "quairkit.database.matrix.rzz_gate": [[16, 2, 2, 0, "theta", "the parameter of this matrix."]], "quairkit.database.matrix.s": [[16, 2, 2, 0, "dtype", "the dtype of this matrix."]], "quairkit.database.matrix.s_gate": [[16, 2, 2, 0, "dtype", "the dtype of this matrix."]], "quairkit.database.matrix.sdg": [[16, 2, 2, 0, "dtype", "the dtype of this matrix."]], "quairkit.database.matrix.sdg_gate": [[16, 2, 2, 0, "dtype", "the dtype of this matrix."]], "quairkit.database.matrix.shift": [[16, 2, 2, 0, "dim", "dimension of qudit"]], "quairkit.database.matrix.shift_gate": [[16, 2, 2, 0, "dim", "dimension of qudit"]], "quairkit.database.matrix.swap": [[16, 2, 2, 0, "dtype", "the dtype of this matrix."]], "quairkit.database.matrix.swap_gate": [[16, 2, 2, 0, "dtype", "the dtype of this matrix."]], "quairkit.database.matrix.t": [[16, 2, 2, 0, "dtype", "the dtype of this matrix."]], "quairkit.database.matrix.t_gate": [[16, 2, 2, 0, "dtype", "the dtype of this matrix."]], "quairkit.database.matrix.tdg": [[16, 2, 2, 0, "dtype", "the dtype of this matrix."]], "quairkit.database.matrix.tdg_gate": [[16, 2, 2, 0, "dtype", "the dtype of this matrix."]], "quairkit.database.matrix.toffoli": [[16, 2, 2, 0, "dtype", "the dtype of this matrix."]], "quairkit.database.matrix.toffoli_gate": [[16, 2, 2, 0, "dtype", "the dtype of this matrix."]], "quairkit.database.matrix.u3": [[16, 2, 2, 0, "theta", "the parameter of this matrix."]], "quairkit.database.matrix.u3_gate": [[16, 2, 2, 0, "theta", "the parameter of this matrix."]], "quairkit.database.matrix.universal2": [[16, 2, 2, 0, "theta", "the parameter of this matrix."]], "quairkit.database.matrix.universal2_gate": [[16, 2, 2, 0, "theta", "the parameter of this matrix."]], "quairkit.database.matrix.universal3": [[16, 2, 2, 0, "theta", "the parameter of this matrix."]], "quairkit.database.matrix.universal3_gate": [[16, 2, 2, 0, "theta", "the parameter of this matrix."]], "quairkit.database.matrix.universal_qudit": [[16, 2, 2, 0, "dimension", "the dimension of the qudit"], [16, 2, 2, 0, "theta", "the parameter of this matrix."]], "quairkit.database.matrix.x": [[16, 2, 2, 0, "dtype", "the dtype of this matrix."]], "quairkit.database.matrix.x_gate": [[16, 2, 2, 0, "dtype", "the dtype of this matrix."]], "quairkit.database.matrix.y": [[16, 2, 2, 0, "dtype", "the dtype of this matrix."]], "quairkit.database.matrix.y_gate": [[16, 2, 2, 0, "dtype", "the dtype of this matrix."]], "quairkit.database.matrix.z": [[16, 2, 2, 0, "dtype", "the dtype of this matrix."]], "quairkit.database.matrix.z_gate": [[16, 2, 2, 0, "dtype", "the dtype of this matrix."]], "quairkit.database.random": [[17, 5, 1, 0, "haar_density_operator", "randomly generate a density matrix following Haar random"], [17, 5, 1, 0, "haar_orthogonal", "randomly generate an orthogonal matrix following Haar random, referenced by arXiv:math-ph/0609050v2"], [17, 5, 1, 0, "haar_state_vector", "randomly generate a state vector following Haar random"], [17, 5, 1, 0, "haar_unitary", "randomly generate a unitary following Haar random, referenced by arXiv:math-ph/0609050v2"], [17, 5, 1, 0, "random_channel", "Generate a random channel from its Stinespring representation"], [17, 5, 1, 0, "random_density_matrix", "randomly generate an num_qubits-qubit state in density matrix form"], [17, 5, 1, 0, "random_hamiltonian_generator", "Generate a random Hamiltonian."], [17, 5, 1, 0, "random_hermitian", "randomly generate a 2^n \\times 2^n hermitian matrix"], [17, 5, 1, 0, "random_orthogonal_projection", "randomly generate a 2^n \\times 2^n rank-1 orthogonal projector"], [17, 5, 1, 0, "random_pauli_str_generator", "Generate a random observable in list form."], [17, 5, 1, 0, "random_state", "Generate a random quantum state."], [17, 5, 1, 0, "random_unitary", "randomly generate a d \\times d unitary"], [17, 5, 1, 0, "random_unitary_hermitian", "randomly generate a 2^n \\times 2^n hermitian unitary"], [17, 5, 1, 0, "random_unitary_with_hermitian_block", "randomly generate a unitary 2^n \\times 2^n matrix that is a block encoding of a 2^{n/2} \\times 2^{n/2} Hermitian matrix"]], "quairkit.database.random.haar_density_operator": [[17, 2, 2, 0, "dim", "dimension of density matrix"], [17, 2, 2, 0, "is_real", "whether the density matrix is real, default to be False"], [17, 2, 2, 0, "rank", "rank of density matrix, default to be None refering to full ranks"]], "quairkit.database.random.haar_orthogonal": [[17, 2, 2, 0, "dim", "dimension of orthogonal matrix"]], "quairkit.database.random.haar_state_vector": [[17, 2, 2, 0, "dim", "dimension of density matrix"], [17, 2, 2, 0, "is_real", "whether the vector is real, default to be False"]], "quairkit.database.random.haar_unitary": [[17, 2, 2, 0, "dim", "dimension of unitary"]], "quairkit.database.random.random_channel": [[17, 2, 2, 0, "num_systems", "number of systems"], [17, 2, 2, 0, "rank", "rank of this Channel."], [17, 2, 2, 0, "size", "batch size."], [17, 2, 2, 0, "system_dim", "dimension of systems."], [17, 2, 2, 0, "target", "target representation, should to be 'choi', 'kraus' or 'stinespring'"]], "quairkit.database.random.random_density_matrix": [[17, 2, 2, 0, "num_qubits", "number of qubits n"]], "quairkit.database.random.random_hamiltonian_generator": [[17, 2, 2, 0, "num_qubits", "Number of qubits."], [17, 2, 2, 0, "terms", "Number of terms in the Hamiltonian."]], "quairkit.database.random.random_hermitian": [[17, 2, 2, 0, "num_qubits", "number of qubits n"]], "quairkit.database.random.random_orthogonal_projection": [[17, 2, 2, 0, "num_qubits", "number of qubits n"]], "quairkit.database.random.random_pauli_str_generator": [[17, 2, 2, 0, "num_qubits", "Number of qubits."], [17, 2, 2, 0, "terms", "Number of terms in the observable."]], "quairkit.database.random.random_state": [[17, 2, 2, 0, "is_real", "If the quantum state only contains the real number."], [17, 2, 2, 0, "num_systems", "The number of qubits contained in the quantum state."], [17, 2, 2, 0, "rank", "The rank of the density matrix."], [17, 2, 2, 0, "size", "Batch size."], [17, 2, 2, 0, "system_dim", "dimension of systems."]], "quairkit.database.random.random_unitary": [[17, 2, 2, 0, "num_systems", "number of systems in this unitary."], [17, 2, 2, 0, "size", "batch size."], [17, 2, 2, 0, "system_dim", "dimension of systems."]], "quairkit.database.random.random_unitary_hermitian": [[17, 2, 2, 0, "num_qubits", "number of qubits n"]], "quairkit.database.random.random_unitary_with_hermitian_block": [[17, 2, 2, 0, "is_unitary", "whether the hermitian block is a unitary divided by 2 (for tutorial only)"], [17, 2, 2, 0, "num_qubits", "number of qubits n"]], "quairkit.database.representation": [[18, 5, 1, 0, "amplitude_damping_kraus", "Kraus representation of an amplitude damping channel with form"], [18, 5, 1, 0, "bit_flip_kraus", "Kraus representation of a bit flip channel with form"], [18, 5, 1, 0, "bit_phase_flip_kraus", "Kraus representation of a bit-phase flip channel with form"], [18, 5, 1, 0, "depolarizing_kraus", "Kraus representation of a depolarizing channel with form"], [18, 5, 1, 0, "generalized_amplitude_damping_kraus", "Kraus representation of a generalized amplitude damping channel with form"], [18, 5, 1, 0, "generalized_depolarizing_kraus", "Kraus representation of a generalized depolarizing channel with form"], [18, 5, 1, 0, "pauli_kraus", "Kraus representation of a pauli channel"], [18, 5, 1, 0, "phase_damping_kraus", "Kraus representation of a phase damping channel with form"], [18, 5, 1, 0, "phase_flip_kraus", "Kraus representation of a phase flip channel with form"], [18, 5, 1, 0, "replacement_choi", "Choi representation of a replacement channel"], [18, 5, 1, 0, "reset_kraus", "Kraus representation of a reset channel with form"], [18, 5, 1, 0, "thermal_relaxation_kraus", "Kraus representation of a thermal relaxation channel"]], "quairkit.database.representation.amplitude_damping_kraus": [[18, 2, 2, 0, "dtype", "data type."], [18, 2, 2, 0, "gamma", "coefficient \\gamma."]], "quairkit.database.representation.bit_flip_kraus": [[18, 2, 2, 0, "dtype", "data type."], [18, 2, 2, 0, "prob", "probability p."]], "quairkit.database.representation.bit_phase_flip_kraus": [[18, 2, 2, 0, "dtype", "data type."], [18, 2, 2, 0, "prob", "probability p."]], "quairkit.database.representation.depolarizing_kraus": [[18, 2, 2, 0, "dtype", "data type."], [18, 2, 2, 0, "prob", "probability p."]], "quairkit.database.representation.generalized_amplitude_damping_kraus": [[18, 2, 2, 0, "dtype", "data type."], [18, 2, 2, 0, "gamma", "coefficient \\gamma."], [18, 2, 2, 0, "prob", "probability p."]], "quairkit.database.representation.generalized_depolarizing_kraus": [[18, 2, 2, 0, "dtype", "data type."], [18, 2, 2, 0, "num_qubits", "number of qubits n of this channel."], [18, 2, 2, 0, "prob", "probability p."]], "quairkit.database.representation.pauli_kraus": [[18, 2, 2, 0, "dtype", "data type."], [18, 2, 2, 0, "prob", "a list of three probabilities corresponding to X, Y, Z gate p."]], "quairkit.database.representation.phase_damping_kraus": [[18, 2, 2, 0, "dtype", "data type."], [18, 2, 2, 0, "gamma", "coefficient \\gamma."]], "quairkit.database.representation.phase_flip_kraus": [[18, 2, 2, 0, "dtype", "data type."], [18, 2, 2, 0, "prob", "probability p."]], "quairkit.database.representation.replacement_choi": [[18, 2, 2, 0, "dtype", "data type."], [18, 2, 2, 0, "sigma", "output state of this channel."]], "quairkit.database.representation.reset_kraus": [[18, 2, 2, 0, "dtype", "data type."], [18, 2, 2, 0, "prob", "list of two probabilities of resetting to state |0\\rangle and |1\\rangle."]], "quairkit.database.representation.thermal_relaxation_kraus": [[18, 2, 2, 0, "const_t", "list of T_1 and T_2 relaxation time in microseconds."], [18, 2, 2, 0, "dtype", "data type."], [18, 2, 2, 0, "exec_time", "quantum gate execution time in the process of relaxation in nanoseconds."]], "quairkit.database.set": [[19, 5, 1, 0, "bell_basis", "Generate the Bell basis for a 2-qubit system, with each basis state accessible along the first dimension of a tensor."], [19, 5, 1, 0, "gell_mann", "Generate a set of Gell-Mann matrices for a given dimension. These matrices span the entire space dim-by-dim matrices, and they generalize the Pauli operators when dim = 2 and the Gell-Mann operators when dim = 3."], [19, 5, 1, 0, "heisenberg_weyl", "The Heisenberg-Weyl operators are defined as T(a,b) = e^{-(d+1) pi i a b/ d}Z^a X^b."], [19, 5, 1, 0, "pauli_basis", "Generate a Pauli basis."], [19, 5, 1, 0, "pauli_group", "Generate a Pauli group i.e., an unnormalized Pauli basis."], [19, 5, 1, 0, "pauli_str_basis", "Get the state basis with respect to the Pauli string"], [19, 5, 1, 0, "pauli_str_povm", "Get the povm with respect to the Pauli string"], [19, 5, 1, 0, "phase_space_point", "Generate phase space point operator for qudit"], [19, 5, 1, 0, "qft_basis", "Compute the eigenvectors (eigenbasis) of the Quantum Fourier Transform (QFT) matrix."], [19, 5, 1, 0, "std_basis", "Generate all standard basis states for a given number of qubits."]], "quairkit.database.set.gell_mann": [[19, 2, 2, 0, "dim", "a positive integer indicating the dimension."]], "quairkit.database.set.heisenberg_weyl": [[19, 2, 2, 0, "dim", "dimension of qudit"]], "quairkit.database.set.pauli_basis": [[19, 2, 2, 0, "num_qubits", "the number of qubits n."]], "quairkit.database.set.pauli_group": [[19, 2, 2, 0, "num_qubits", "the number of qubits n."]], "quairkit.database.set.pauli_str_basis": [[19, 2, 2, 0, "pauli_str", "the string composed of 'i', 'x', 'y' and 'z' only."]], "quairkit.database.set.pauli_str_povm": [[19, 2, 2, 0, "pauli_str", "the string composed of 'i', 'x', 'y' and 'z' only."]], "quairkit.database.set.phase_space_point": [[19, 2, 2, 0, "dim", "dimension of qudit"]], "quairkit.database.set.qft_basis": [[19, 2, 2, 0, "num_qubits", "Number of qubits n such that N = 2^n."]], "quairkit.database.set.std_basis": [[19, 2, 2, 0, "num_systems", "number of systems in this state."], [19, 2, 2, 0, "system_dim", "dimension of systems."]], "quairkit.database.state": [[20, 5, 1, 0, "bell_diagonal_state", "Generate a bell diagonal state."], [20, 5, 1, 0, "bell_state", "Generate a bell state."], [20, 5, 1, 0, "completely_mixed_computational", "Generate the density matrix of the completely mixed state."], [20, 5, 1, 0, "computational_state", "Generate a computational state |e_{i}\\rangle , whose i-th element is 1 and all the other elements are 0."], [20, 5, 1, 0, "ghz_state", "Generate a GHZ-state."], [20, 5, 1, 0, "isotropic_state", "Generate the isotropic state."], [20, 5, 1, 0, "one_state", "The function to generate a one state."], [20, 5, 1, 0, "r_state", "Generate an R-state."], [20, 5, 1, 0, "s_state", "Generate the S-state."], [20, 5, 1, 0, "w_state", "Generate a W-state."], [20, 5, 1, 0, "zero_state", "The function to generate a zero state."]], "quairkit.database.state.bell_diagonal_state": [[20, 2, 2, 0, "prob", "The prob of each bell state."]], "quairkit.database.state.bell_state": [[20, 2, 2, 0, "num_systems", "number of systems in this state."], [20, 2, 2, 0, "system_dim", "dimension of systems."]], "quairkit.database.state.completely_mixed_computational": [[20, 2, 2, 0, "num_qubits", "The number of qubits contained in the quantum state."]], "quairkit.database.state.computational_state": [[20, 2, 2, 0, "index", "Index i of the computational basis state :math`|e_{i}rangle` ."], [20, 2, 2, 0, "num_systems", "number of systems in this state."], [20, 2, 2, 0, "system_dim", "dimension of systems."]], "quairkit.database.state.ghz_state": [[20, 2, 2, 0, "num_qubits", "The number of qubits contained izn the quantum state."]], "quairkit.database.state.isotropic_state": [[20, 2, 2, 0, "num_qubits", "The number of qubits contained in the quantum state."], [20, 2, 2, 0, "prob", "The parameter of the isotropic state to be generated."]], "quairkit.database.state.one_state": [[20, 2, 2, 0, "num_systems", "number of systems in this state."], [20, 2, 2, 0, "system_dim", "dimension of systems."]], "quairkit.database.state.r_state": [[20, 2, 2, 0, "prob", "The parameter of the R-state to be generated."]], "quairkit.database.state.s_state": [[20, 2, 2, 0, "prob", "The parameter of the S-state to be generated."]], "quairkit.database.state.w_state": [[20, 2, 2, 0, "num_qubits", "The number of qubits contained in the quantum state."]], "quairkit.database.state.zero_state": [[20, 2, 2, 0, "num_systems", "number of systems in this state."], [20, 2, 2, 0, "system_dim", "dimension of systems."]], "quairkit.loss": [[22, 0, 0, 1, "distance", ""], [23, 0, 0, 1, "measure", ""]], "quairkit.loss.distance": [[22, 1, 1, 0, "StateFidelity", "The class of the loss function to compute the state fidelity."], [22, 1, 1, 0, "TraceDistance", "The class of the loss function to compute the trace distance."]], "quairkit.loss.distance.StateFidelity": [[22, 3, 1, 0, "forward", "Compute the state fidelity between the input state and the target state."]], "quairkit.loss.distance.StateFidelity.__init__": [[22, 2, 2, 0, "target_state", "The target state to be used to compute the state fidelity."]], "quairkit.loss.distance.StateFidelity.forward": [[22, 2, 2, 0, "state", "The input state which will be used to compute the state fidelity with the target state."]], "quairkit.loss.distance.TraceDistance": [[22, 3, 1, 0, "forward", "Compute the trace distance between the input state and the target state."]], "quairkit.loss.distance.TraceDistance.__init__": [[22, 2, 2, 0, "target_state", "The target state to be used to compute the trace distance."]], "quairkit.loss.distance.TraceDistance.forward": [[22, 2, 2, 0, "state", "The input state which will be used to compute the trace distance with the target state."]], "quairkit.loss.measure": [[23, 1, 1, 0, "ExpecVal", "The class of the loss function to compute the expectation value for the observable."], [23, 1, 1, 0, "Measure", "Compute the probability of the specified measurement result."]], "quairkit.loss.measure.ExpecVal": [[23, 3, 1, 0, "forward", "Compute the expectation value of the observable with respect to the input state."]], "quairkit.loss.measure.ExpecVal.__init__": [[23, 2, 2, 0, "hamiltonian", "The input observable."]], "quairkit.loss.measure.ExpecVal.forward": [[23, 2, 2, 0, "decompose", "Defaults to False."], [23, 2, 2, 0, "state", "The input state which will be used to compute the expectation value."]], "quairkit.loss.measure.Measure": [[23, 3, 1, 0, "forward", "Compute the probability of measurement to the input state."]], "quairkit.loss.measure.Measure.__init__": [[23, 2, 2, 0, "measure_op", "Specify the basis of the measurement."]], "quairkit.loss.measure.Measure.forward": [[23, 2, 2, 0, "desired_result", "Specify the results of the measurement to return."], [23, 2, 2, 0, "keep_state", "Whether return the measured state."], [23, 2, 2, 0, "state", "The quantum state to be measured."], [23, 2, 2, 0, "system_idx", "The index of the systems to be measured."]], "quairkit.operator": [[25, 0, 0, 1, "channel", ""], [29, 0, 0, 1, "gate", ""], [36, 0, 0, 1, "special", ""]], "quairkit.operator.channel": [[26, 0, 0, 1, "base", ""], [27, 0, 0, 1, "common", ""], [28, 0, 0, 1, "custom", ""]], "quairkit.operator.channel.base": [[26, 1, 1, 0, "Channel", "Basic class for quantum channels."]], "quairkit.operator.channel.base.Channel": [[26, 4, 1, 0, "choi_repr", "Choi representation of a channel"], [26, 4, 1, 0, "dim", "Dimension of the input/output system of this channel"], [26, 4, 1, 0, "kraus_repr", "Kraus representation of a channel"], [26, 4, 1, 0, "stinespring_repr", "Stinespring representation of a channel"]], "quairkit.operator.channel.base.Channel.__init__": [[26, 2, 2, 0, "acted_system_dim", "dimension of systems that this channel acts on."], [26, 2, 2, 0, "check_legality", "whether check the completeness of the representation if provided."], [26, 2, 2, 0, "representation", "the representation of this channel."], [26, 2, 2, 0, "system_idx", "indices of the system on which this channel acts on."], [26, 2, 2, 0, "type_repr", "type of a representation."]], "quairkit.operator.channel.common": [[27, 1, 1, 0, "AmplitudeDamping", "A collection of amplitude damping channels."], [27, 1, 1, 0, "BitFlip", "A collection of bit flip channels."], [27, 1, 1, 0, "BitPhaseFlip", "A collection of bit phase flip channels."], [27, 1, 1, 0, "Depolarizing", "A collection of depolarizing channels."], [27, 1, 1, 0, "GeneralizedAmplitudeDamping", "A collection of generalized amplitude damping channels."], [27, 1, 1, 0, "GeneralizedDepolarizing", "A generalized depolarizing channel."], [27, 1, 1, 0, "PauliChannel", "A collection of Pauli channels."], [27, 1, 1, 0, "PhaseDamping", "A collection of phase damping channels."], [27, 1, 1, 0, "PhaseFlip", "A collection of phase flip channels."], [27, 1, 1, 0, "ReplacementChannel", "A collection of quantum replacement channels."], [27, 1, 1, 0, "ResetChannel", "A collection of reset channels."], [27, 1, 1, 0, "ThermalRelaxation", "A collection of thermal relaxation channels."]], "quairkit.operator.channel.common.AmplitudeDamping.__init__": [[27, 2, 2, 0, "gamma", "Damping probability."], [27, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the channels act."]], "quairkit.operator.channel.common.BitFlip.__init__": [[27, 2, 2, 0, "prob", "Probability of a bit flip."], [27, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the channels act."]], "quairkit.operator.channel.common.BitPhaseFlip.__init__": [[27, 2, 2, 0, "prob", "Probability of a bit phase flip."], [27, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the channels act."]], "quairkit.operator.channel.common.Depolarizing.__init__": [[27, 2, 2, 0, "prob", "Parameter of the depolarizing channels."], [27, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the channels act."]], "quairkit.operator.channel.common.GeneralizedAmplitudeDamping.__init__": [[27, 2, 2, 0, "gamma", "Damping probability."], [27, 2, 2, 0, "prob", "Excitation probability."], [27, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the channels act."]], "quairkit.operator.channel.common.GeneralizedDepolarizing.__init__": [[27, 2, 2, 0, "num_qubits", "Total number of qubits."], [27, 2, 2, 0, "prob", "probability p."], [27, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the channels act, the length of which is n. Defaults to be None."]], "quairkit.operator.channel.common.PauliChannel.__init__": [[27, 2, 2, 0, "prob", "Probabilities corresponding to the Pauli X, Y, and Z operators."], [27, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the channels act."]], "quairkit.operator.channel.common.PhaseDamping.__init__": [[27, 2, 2, 0, "gamma", "Parameter of the phase damping channels."], [27, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the channels act."]], "quairkit.operator.channel.common.PhaseFlip.__init__": [[27, 2, 2, 0, "prob", "Probability of a phase flip."], [27, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the channels act."]], "quairkit.operator.channel.common.ReplacementChannel.__init__": [[27, 2, 2, 0, "sigma", "The state to be replaced."], [27, 2, 2, 0, "system_idx", "Indices of the qubits on which the channels act, the length of which is n. Defaults to list(range(# of acted qubits))."]], "quairkit.operator.channel.common.ResetChannel.__init__": [[27, 2, 2, 0, "prob", "Probabilities of resetting to |0\\rangle and to |1\\rangle."], [27, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the channels act."]], "quairkit.operator.channel.common.ThermalRelaxation.__init__": [[27, 2, 2, 0, "const_t", "T_1 and T_2 relaxation time in microseconds."], [27, 2, 2, 0, "exec_time", "Quantum gate execution time in the process of relaxation in nanoseconds."], [27, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the channels act."]], "quairkit.operator.channel.custom": [[28, 1, 1, 0, "ChoiRepr", "A custom channel in Choi representation."], [28, 1, 1, 0, "KrausRepr", "A custom channel in Kraus representation."], [28, 1, 1, 0, "StinespringRepr", "A custom channel in Stinespring representation."]], "quairkit.operator.channel.custom.ChoiRepr.__init__": [[28, 2, 2, 0, "acted_system_dim", "dimension of systems that this channel acts on."], [28, 2, 2, 0, "choi_repr", "Choi operator of this channel."], [28, 2, 2, 0, "system_idx", "Indices of the systems on which this channel acts."]], "quairkit.operator.channel.custom.KrausRepr.__init__": [[28, 2, 2, 0, "acted_system_dim", "dimension of systems that this channel acts on."], [28, 2, 2, 0, "kraus_repr", "list of Kraus operators of this channel."], [28, 2, 2, 0, "system_idx", "Indices of the systems on which this channel acts."]], "quairkit.operator.channel.custom.StinespringRepr.__init__": [[28, 2, 2, 0, "acted_system_dim", "dimension of systems that this channel acts on."], [28, 2, 2, 0, "stinespring_mat", "Stinespring matrix that represents this channel."], [28, 2, 2, 0, "system_idx", "Indices of the systems on which this channel acts."]], "quairkit.operator.gate": [[30, 0, 0, 1, "base", ""], [31, 0, 0, 1, "custom", ""], [33, 0, 0, 1, "multi_qubit_gate", ""], [34, 0, 0, 1, "single_qubit_gate", ""], [35, 0, 0, 1, "visual", ""]], "quairkit.operator.gate.base": [[30, 1, 1, 0, "Gate", "Base class for quantum gates."], [30, 1, 1, 0, "ParamGate", "Base class for quantum parameterized gates."]], "quairkit.operator.gate.base.Gate": [[30, 3, 1, 0, "display_in_circuit", "The display function called by circuit instance when plotting."], [30, 3, 1, 0, "gate_history_generation", "determine self.gate_history"], [30, 4, 1, 0, "matrix", "Unitary matrix of this gate"], [30, 3, 1, 0, "set_gate_info", "the interface to set self.gate_info"]], "quairkit.operator.gate.base.Gate.__init__": [[30, 2, 2, 0, "acted_system_dim", "dimension of systems that this gate acts on."], [30, 2, 2, 0, "check_legality", "whether check the completeness of the matrix if provided."], [30, 2, 2, 0, "gate_info", "information of this gate that will be placed into the gate history or plotted by a Circuit. Defaults to None."], [30, 2, 2, 0, "matrix", "the matrix of this gate."], [30, 2, 2, 0, "system_idx", "indices of the systems that this gate acts on."]], "quairkit.operator.gate.base.Gate.display_in_circuit": [[30, 2, 2, 0, "ax", "the matplotlib.axes.Axes instance"], [30, 2, 2, 0, "x", "the start horizontal position"]], "quairkit.operator.gate.base.Gate.set_gate_info": [[30, 2, 2, 0, "kwargs", "parameters to set self.gate_info"]], "quairkit.operator.gate.base.ParamGate": [[30, 3, 1, 0, "display_in_circuit", "The display function called by circuit instance when plotting."], [30, 3, 1, 0, "gate_history_generation", "determine self.gate_history when gate is parameterized"]], "quairkit.operator.gate.base.ParamGate.__init__": [[30, 2, 2, 0, "acted_system_dim", "dimension of systems that this gate acts on."], [30, 2, 2, 0, "check_legality", "whether check the completeness of the matrix if provided."], [30, 2, 2, 0, "gate_info", "information of this gate that will be placed into the gate history or plotted by a Circuit. Defaults to None."], [30, 2, 2, 0, "generator", "function that generates the unitary matrix of this gate."], [30, 2, 2, 0, "num_acted_param", "the number of parameters required for a single operation."], [30, 2, 2, 0, "param", "input parameters of quantum parameterized gates."], [30, 2, 2, 0, "param_sharing", "whether all operations are shared by the same parameter set."], [30, 2, 2, "quairkit.operator.gate.base.ParamGate", "system_idx", "Base class for quantum parameterized gates."]], "quairkit.operator.gate.base.ParamGate.display_in_circuit": [[30, 2, 2, 0, "ax", "the matplotlib.axes.Axes instance"], [30, 2, 2, 0, "x", "the start horizontal position"]], "quairkit.operator.gate.custom": [[31, 1, 1, 0, "ControlOracle", "A controlled oracle as a gate."], [31, 1, 1, 0, "Oracle", "An oracle as a gate."], [31, 1, 1, 0, "ParamOracle", "An parameterized oracle as a gate"], [31, 1, 1, 0, "UniversalQudits", "A collection of universal qudit gates. One of such a gate requires d^2 - 1 parameters."]], "quairkit.operator.gate.custom.ControlOracle.__init__": [[31, 2, 2, 0, "acted_system_dim", "dimension of systems that this gate acts on."], [31, 2, 2, "quairkit.operator.gate.custom.ControlOracle", "gate_info", "A controlled oracle as a gate."], [31, 2, 2, 0, "oracle", "Unitary oracle to be implemented."], [31, 2, 2, 0, "system_idx", "Indices of the systems on which the gates are applied."]], "quairkit.operator.gate.custom.Oracle.__init__": [[31, 2, 2, 0, "acted_system_dim", "dimension of systems that this gate acts on."], [31, 2, 2, "quairkit.operator.gate.custom.Oracle", "gate_info", "An oracle as a gate."], [31, 2, 2, 0, "oracle", "Unitary oracle to be implemented."], [31, 2, 2, 0, "system_idx", "Indices of the systems on which the gates are applied."]], "quairkit.operator.gate.custom.ParamOracle.__init__": [[31, 2, 2, 0, "acted_system_dim", "dimension of systems that this gate acts on."], [31, 2, 2, 0, "gate_info", "information of this gate that will be placed into the gate history or plotted by a Circuit. Defaults to None."], [31, 2, 2, 0, "generator", "function that generates the oracle."], [31, 2, 2, 0, "num_acted_param", "the number of parameters required for a single operation."], [31, 2, 2, 0, "param", "input parameters of quantum parameterized gates."], [31, 2, 2, 0, "param_sharing", "whether all operations are shared by the same parameter set."], [31, 2, 2, 0, "system_idx", "indices of the system on which this gate acts on."]], "quairkit.operator.gate.custom.UniversalQudits.__init__": [[31, 2, 2, 0, "acted_system_dim", "dimension of systems that this gate acts on."], [31, 2, 2, 0, "param", "Parameters of the gates."], [31, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [31, 2, 2, 0, "system_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.multi_qubit_gate": [[33, 1, 1, 0, "CCX", "A collection of CCX (Toffoli) gates."], [33, 1, 1, 0, "CNOT", "A collection of CNOT gates."], [33, 1, 1, 0, "CP", "A collection of controlled P gates."], [33, 1, 1, 0, "CRX", "A collection of controlled rotation gates about the x-axis."], [33, 1, 1, 0, "CRY", "A collection of controlled rotation gates about the y-axis."], [33, 1, 1, 0, "CRZ", "A collection of controlled rotation gates about the z-axis."], [33, 1, 1, 0, "CSWAP", "A collection of CSWAP (Fredkin) gates."], [33, 1, 1, 0, "CU", "A collection of controlled single-qubit rotation gates."], [33, 6, 1, 0, "CX", "alias of CNOT"], [33, 1, 1, 0, "CY", "A collection of controlled Y gates."], [33, 1, 1, 0, "CZ", "A collection of controlled Z gates."], [33, 1, 1, 0, "MS", "A collection of M\u00f8lmer-S\u00f8rensen (MS) gates for trapped ion devices."], [33, 1, 1, 0, "RXX", "A collection of RXX gates."], [33, 1, 1, 0, "RYY", "A collection of RYY gates."], [33, 1, 1, 0, "RZZ", "A collection of RZZ gates."], [33, 1, 1, 0, "SWAP", "A collection of SWAP gates."], [33, 6, 1, 0, "Toffoli", "alias of CCX"], [33, 1, 1, 0, "UniversalThreeQubits", "A collection of universal three-qubit gates. One of such a gate requires 81 parameters."], [33, 1, 1, 0, "UniversalTwoQubits", "A collection of universal two-qubit gates. One of such a gate requires 15 parameters."]], "quairkit.operator.gate.multi_qubit_gate.CCX.__init__": [[33, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.multi_qubit_gate.CNOT.__init__": [[33, 2, 2, 0, "cnot_idx", "CNOT gate index."], [33, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.multi_qubit_gate.CP.__init__": [[33, 2, 2, 0, "param", "Parameters of the gates."], [33, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [33, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.multi_qubit_gate.CRX.__init__": [[33, 2, 2, 0, "param", "Parameters of the gates."], [33, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [33, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.multi_qubit_gate.CRY.__init__": [[33, 2, 2, 0, "param", "Parameters of the gates."], [33, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [33, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.multi_qubit_gate.CRZ.__init__": [[33, 2, 2, 0, "param", "Parameters of the gates."], [33, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [33, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.multi_qubit_gate.CSWAP.__init__": [[33, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.multi_qubit_gate.CU.__init__": [[33, 2, 2, 0, "param", "Parameters of the gates."], [33, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [33, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.multi_qubit_gate.CY.__init__": [[33, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.multi_qubit_gate.CZ.__init__": [[33, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.multi_qubit_gate.MS.__init__": [[33, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.multi_qubit_gate.RXX.__init__": [[33, 2, 2, 0, "param", "Parameters of the gates."], [33, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [33, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.multi_qubit_gate.RYY.__init__": [[33, 2, 2, 0, "param", "Parameters of the gates."], [33, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [33, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.multi_qubit_gate.RZZ.__init__": [[33, 2, 2, 0, "param", "Parameters of the gates."], [33, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [33, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.multi_qubit_gate.SWAP.__init__": [[33, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.multi_qubit_gate.UniversalThreeQubits.__init__": [[33, 2, 2, 0, "param", "Parameters of the gates."], [33, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [33, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.multi_qubit_gate.UniversalTwoQubits.__init__": [[33, 2, 2, 0, "param", "Parameters of the gates."], [33, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [33, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.single_qubit_gate": [[34, 1, 1, 0, "H", "A collection of single-qubit Hadamard gates."], [34, 1, 1, 0, "P", "A collection of single-qubit P gates."], [34, 1, 1, 0, "RX", "A collection of single-qubit rotation gates about the x-axis."], [34, 1, 1, 0, "RY", "A collection of single-qubit rotation gates about the y-axis."], [34, 1, 1, 0, "RZ", "A collection of single-qubit rotation gates about the z-axis."], [34, 1, 1, 0, "S", "A collection of single-qubit S gates."], [34, 1, 1, 0, "Sdg", "A collection of single-qubit S dagger (S inverse) gates."], [34, 1, 1, 0, "T", "A collection of single-qubit T gates."], [34, 1, 1, 0, "Tdg", "A collection of single-qubit T dagger (T inverse) gates."], [34, 1, 1, 0, "U3", "A collection of single-qubit rotation gates."], [34, 1, 1, 0, "X", "A collection of single-qubit X gates."], [34, 1, 1, 0, "Y", "A collection of single-qubit Y gates."], [34, 1, 1, 0, "Z", "A collection of single-qubit Z gates."]], "quairkit.operator.gate.single_qubit_gate.H.__init__": [[34, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.single_qubit_gate.P.__init__": [[34, 2, 2, 0, "param", "Parameters of the gates."], [34, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [34, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.single_qubit_gate.RX.__init__": [[34, 2, 2, 0, "param", "Parameters of the gates."], [34, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [34, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.single_qubit_gate.RY.__init__": [[34, 2, 2, 0, "param", "Parameters of the gates."], [34, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [34, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.single_qubit_gate.RZ.__init__": [[34, 2, 2, 0, "param", "Parameters of the gates."], [34, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [34, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.single_qubit_gate.S.__init__": [[34, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.single_qubit_gate.Sdg.__init__": [[34, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.single_qubit_gate.T.__init__": [[34, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.single_qubit_gate.Tdg.__init__": [[34, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.single_qubit_gate.U3.__init__": [[34, 2, 2, 0, "param", "Parameters of the gates."], [34, 2, 2, 0, "param_sharing", "Whether gates in the same layer share a parameter."], [34, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.single_qubit_gate.X.__init__": [[34, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.single_qubit_gate.Y.__init__": [[34, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.single_qubit_gate.Z.__init__": [[34, 2, 2, 0, "qubits_idx", "Indices of the qubits on which the gates are applied."]], "quairkit.operator.gate.visual": [[35, 5, 1, 0, "get_circuit_plot_param", "The output function of __CIRCUIT_PLOT_PARAM dictionary"], [35, 5, 1, 0, "reset_circuit_plot_param", "The reset function of __CIRCUIT_PLOT_PARAM dictionary"], [35, 5, 1, 0, "scale_circuit_plot_param", "The scale function of __CIRCUIT_PLOT_PARAM dictionary"], [35, 5, 1, 0, "set_circuit_plot_param", "The set function of __CIRCUIT_PLOT_PARAM dictionary"]], "quairkit.operator.gate.visual.scale_circuit_plot_param": [[35, 2, 2, 0, "scale", "the scalar for scaling the elements in the figure"]], "quairkit.operator.gate.visual.set_circuit_plot_param": [[35, 2, 2, 0, "kwargs", "parameters to update the __CIRCUIT_PLOT_PARAM dictionary"]], "quairkit.operator.special": [[36, 1, 1, 0, "Collapse", "The class to compute the collapse of the quantum state."], [36, 1, 1, 0, "ResetState", "The class to reset the quantum state. It will be implemented soon."]], "quairkit.operator.special.Collapse": [[36, 3, 1, 0, "forward", "Compute the collapse of the input state."]], "quairkit.operator.special.Collapse.__init__": [[36, 2, 2, 0, "desired_result", "The desired result you want to collapse."], [36, 2, 2, 0, "if_print", "whether print the information about the collapsed state."], [36, 2, 2, 0, "measure_basis", "The basis of the measurement."], [36, 2, 2, 0, "system_idx", "list of systems to be collapsed."]], "quairkit.operator.special.Collapse.forward": [[36, 2, 2, 0, "state", "The input state, which will be collapsed"]], "quairkit.operator.special.ResetState": [[36, 3, 1, 0, "forward", "The forward function."]], "quairkit.operator.special.ResetState.forward": [[36, 2, 2, "quairkit.operator.special.ResetState.forward", "inputs", "The forward function."], [36, 2, 2, "quairkit.operator.special.ResetState.forward", "kwargs", "The forward function."]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "parameter", "Python parameter"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:parameter", "3": "py:method", "4": "py:property", "5": "py:function", "6": "py:attribute"}, "terms": {"": [2, 4, 7, 9, 10, 11, 12, 14, 16, 17, 20, 27, 29, 34], "0": [2, 4, 7, 9, 12, 13, 15, 16, 17, 18, 20, 27, 33, 34], "00": 20, "0000ff": 13, "0001": [9, 12], "00633": 3, "02109": 27, "0609050v2": 17, "1": [3, 4, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 27, 30, 31, 33, 34], "10": 27, "100": 4, "1017": 27, "102": 27, "10876": 3, "10th": 27, "11": 20, "15": [4, 16, 33], "1804": 3, "1905": 3, "1j": [4, 33], "2": [2, 4, 7, 12, 15, 16, 17, 19, 20, 26, 28, 30, 31, 33, 34], "2010": 27, "2101": 27, "283185307179586": 2, "3": [7, 12, 13, 15, 16, 17, 19, 20], "30": 13, "360": 13, "3p": [18, 27], "3x": 17, "4": [3, 4, 16, 18, 19, 20, 27, 34], "45": 13, "5": [16, 17], "5772": 4, "5y": 17, "6": 2, "7": 13, "8": 27, "81": [4, 16, 33], "A": [3, 7, 15, 16, 19, 20, 27, 28, 31, 33, 34], "For": [4, 12, 16, 27, 33], "If": [4, 7, 9, 16, 17, 20, 23, 36], "Ising": 15, "It": [20, 36], "Its": [4, 20, 27], "Of": [14, 16], "One": [4, 31, 33], "Such": [17, 27], "The": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37], "These": 19, "To": 13, "__circuit_plot_param": 35, "_data": 9, "ab": [3, 27], "about": [4, 9, 33, 34, 36], "abstract": 9, "access": 19, "act": [4, 7, 9, 26, 27, 28, 30, 31], "acted_system_dim": [26, 28, 30, 31], "ad": 2, "add": 4, "adjust": 12, "after": 9, "alia": [4, 17, 19, 20, 33], "align": [4, 15, 16, 33, 34], "all": [2, 3, 4, 7, 9, 17, 19, 20, 23, 26, 28, 30, 31], "allow": [12, 23], "along": [9, 19], "alpha_": 15, "also": 9, "amplitud": [4, 18, 27], "amplitude_damp": 4, "amplitude_damping_krau": [14, 18], "amplitudedamp": [25, 27], "an": [2, 4, 9, 12, 13, 17, 18, 19, 20, 26, 28, 30, 31], "angl": [3, 4, 13], "ani": [30, 35], "anniversari": 27, "ansatz": [0, 35], "answer": 4, "append": 2, "appli": [3, 4, 9, 16, 31, 33, 34], "ar": [4, 9, 12, 19, 20, 23, 27, 30, 31, 33, 34], "are_qubit": 9, "are_qutrit": 9, "arg": 12, "arg0": 2, "arg1": 2, "argument": [2, 16], "arrai": [9, 10, 11], "arrow": 13, "arxiv": [3, 17, 27], "assert": 9, "assum": [4, 26], "automat": [7, 12], "avail": 9, "ax": 30, "axi": [4, 33, 34], "b": [19, 20], "backend": [4, 5, 6, 8, 12, 17, 20, 22, 23], "bar": 13, "base": [2, 3, 4, 5, 9, 16, 24, 25, 29, 36], "basi": [4, 7, 9, 16, 19, 20, 23, 36], "basic": [6, 26, 30], "batch": [9, 12, 17], "batch_dim": 9, "been": 27, "befor": 16, "begin": [4, 15, 16, 18, 27, 33, 34], "bell": [19, 20], "bell_basi": [14, 19], "bell_diagonal_st": [14, 20], "bell_stat": [14, 20], "below": 16, "beta_": 15, "beta_k": 15, "between": [12, 13, 22], "bit": [4, 18, 27], "bit_flip": 4, "bit_flip_krau": [14, 18], "bit_phase_flip": 4, "bit_phase_flip_krau": [14, 18], "bitflip": [25, 27], "bitphaseflip": [25, 27], "black": 13, "bloch": 13, "block": 17, "blue": 13, "bmatrix": [4, 16, 18, 27, 33, 34], "bool": [4, 7, 9, 13, 17, 23, 26, 30, 31, 33, 34, 36], "boolean": 16, "both": 9, "bra": 9, "broadcast": 9, "c": 19, "calcul": [4, 7, 12, 16, 36], "call": 30, "callabl": [4, 16, 30, 31], "cambridg": 27, "can": [2, 4, 6, 7, 9, 12, 17, 19, 20, 22, 23, 26, 28, 30, 31], "cannot": [4, 9], "care": 12, "case": [4, 9, 17, 19, 20, 28, 30, 31], "caus": 4, "cbo9780511976667": 27, "ccx": [4, 29, 33], "cdot": 16, "chang": 9, "channel": [4, 17, 18, 24], "check": [7, 9, 12, 26, 30], "check_leg": [26, 30], "choi": [4, 17, 18, 26, 28], "choi_channel": 4, "choi_repr": [4, 26, 28], "choirepr": [25, 28], "choos": [4, 36], "chuang": 27, "cir": 4, "circuit": [0, 3, 30, 31, 33, 35], "class": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 22, 23, 26, 27, 28, 30, 31, 33, 34, 36], "classifi": 6, "clone": 9, "cmap": 13, "cnot": [3, 4, 14, 16, 29, 33], "cnot_gat": [14, 16], "cnot_idx": 33, "co": [4, 16, 33, 34], "coeffici": [4, 7, 18], "collaps": [4, 9, 24, 36], "collect": [27, 31, 33, 34], "color": 13, "color_schem": 13, "com": [4, 16], "common": [12, 15, 20, 24, 25], "complet": [20, 26, 30], "completely_mixed_comput": [14, 20], "complex": 3, "complex128": 6, "complex64": [6, 16], "complex_block_lay": 4, "complex_entangled_lay": 4, "complexblocklay": [1, 3], "complexentangledlay": [1, 3], "compos": [19, 23], "compress": 7, "comput": [9, 15, 19, 20, 22, 23, 27, 36, 37], "computational_st": [14, 20], "concaten": 4, "consid": 9, "consist": [3, 4], "const_t": [4, 18, 27], "construct": [7, 16], "construct_h_matrix": 7, "constructor": 2, "consult": 13, "contain": [1, 7, 9, 17, 20], "control": [4, 31, 33], "control_oracl": 4, "controloracl": [29, 31], "convert": 9, "copi": [9, 35], "core": 0, "correspond": [4, 7, 9, 18, 27, 36], "could": [7, 30], "cp": [4, 14, 16, 29, 33], "cp_gate": [14, 16], "cr_x": [4, 16], "cr_y": [4, 16], "cr_z": [4, 16], "creat": 7, "crx": [4, 14, 16, 29, 33], "crx_gate": [14, 16], "cry": [4, 14, 16, 29, 33], "cry_gat": [14, 16], "crz": [4, 14, 16, 29, 33], "crz_gate": [14, 16], "cswap": [4, 14, 16, 29, 33], "cswap_gat": [14, 16], "cu": [4, 14, 16, 29, 33], "cu_gat": [14, 16], "cuda": 6, "cumul": 16, "current": [2, 6, 9, 27], "custom": [4, 24, 25, 29, 30], "cx": [29, 33], "cy": [4, 14, 16, 29, 33], "cy_gat": [14, 16], "cycl": 4, "cz": [4, 14, 16, 29, 33], "cz_gate": [14, 16], "d": [4, 9, 10, 11, 12, 16, 17, 18, 19, 20, 27, 31], "d1": 12, "d_": 26, "dagger": [4, 9, 16, 34], "damp": [4, 18, 27], "data": [6, 9, 10, 11, 12, 14, 16, 17, 18, 26], "databas": 0, "datatyp": 12, "decid": 7, "decompos": [7, 9, 23], "decompose_pauli_word": 7, "decompose_with_sit": 7, "default": [2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 23, 26, 27, 28, 30, 31, 33, 34, 36], "defin": [19, 27], "densiti": [9, 10, 12, 13, 17, 20, 26], "density_matrix": [8, 9, 12, 13], "depend": 4, "depolar": [4, 18, 25, 27], "depolarizing_krau": [14, 18], "depth": [3, 4], "desir": [4, 36], "desired_result": [4, 23, 36], "detail": 4, "determin": [7, 12, 30], "devic": [6, 9, 27, 33], "diagon": 20, "dict": [2, 3, 4, 23, 30, 31, 35], "dictionari": 35, "differ": 7, "dim": [9, 16, 17, 19, 26], "dim0": 13, "dim1": 13, "dimens": [4, 9, 10, 11, 12, 16, 17, 19, 20, 26, 28, 30, 31], "dimension": 16, "disabl": 12, "displai": [4, 13, 30, 35], "display_in_circuit": 30, "distanc": [13, 21], "distinguish": 9, "distort": 4, "divid": 17, "dn": 12, "doe": [4, 9, 36], "doi": 27, "dot": 4, "dpi": 4, "drive": 3, "dtype": [6, 9, 12, 16, 18], "dynam": 4, "e": [3, 4, 7, 9, 15, 16, 19, 23, 26, 30, 31, 33, 34], "e_": 20, "e_0": [18, 27], "e_1": [18, 27], "e_2": [18, 27], "e_3": [18, 27], "e_4": [18, 27], "e_k": [18, 27], "each": [4, 7, 9, 10, 11, 13, 19, 20, 23, 27], "edg": [3, 15], "edit": 27, "eigenbasi": 19, "eigenst": [4, 36], "eigenvector": 19, "element": [7, 9, 13, 20, 35], "empti": 16, "encod": [12, 17, 24, 29], "end": [2, 4, 13, 15, 16, 18, 27, 33, 34], "entangl": [3, 4], "entir": 19, "entri": 4, "ep": [9, 12], "equal": [13, 27], "evolv": 9, "exampl": [12, 16], "except": 20, "excit": [4, 27], "exclud": 7, "exec_tim": [4, 18, 27], "execut": [4, 18, 27], "exp": 16, "expand": 9, "expand_a": 9, "expec_v": 9, "expect": [9, 13, 23], "expecv": [21, 23], "extend": [2, 3, 4], "ey": [14, 16], "eye_g": [14, 16], "f": 16, "fals": [4, 7, 9, 13, 17, 23, 30, 31, 33, 34, 36], "featur": 27, "fidel": 22, "figur": [4, 35], "file": [2, 3, 4, 10, 11, 12, 13, 22, 23, 26, 27, 28, 30, 31, 33, 34, 36], "filenam": 13, "first": [2, 12, 13, 19, 31, 33, 34], "fit": 9, "flag": 4, "flatten": 2, "flip": [4, 18, 27], "float": [2, 3, 4, 6, 7, 9, 12, 13, 18, 20, 27, 30, 31, 33, 34, 35], "follow": [3, 6, 7, 17], "font": 4, "form": [4, 7, 9, 10, 11, 13, 16, 17, 18, 20, 30, 33, 34], "format": 9, "formula": 27, "forward": [4, 22, 23, 36], "four": 19, "fourier": [16, 19], "frac": [4, 16, 20, 33, 34], "fredkin": [4, 33], "from": [3, 9, 10, 11, 13, 16, 17], "full": [4, 17, 23], "fulli": 13, "function": [4, 5, 6, 9, 12, 13, 14, 16, 17, 20, 22, 23, 30, 31, 35, 36, 37], "futur": [4, 36], "g": [7, 16], "galleri": 4, "gamma": [4, 16, 18, 27, 33], "gamma_": 15, "gate": [3, 4, 16, 18, 24, 27], "gate_histori": [3, 4, 30], "gate_history_gener": 30, "gate_info": [30, 31], "gate_nam": 4, "gell": 19, "gell_mann": [14, 19], "gellmann": 16, "gener": [4, 9, 12, 14, 16, 17, 18, 19, 20, 27, 30, 31], "generalized_amplitude_damp": 4, "generalized_amplitude_damping_krau": [14, 18], "generalized_depolar": 4, "generalized_depolarizing_krau": [14, 18], "generalizedamplitudedamp": [25, 27], "generalizeddepolar": [25, 27], "generalizedgel": 16, "get": [4, 6, 9, 19], "get_backend": [5, 6], "get_circuit_plot_param": [29, 35], "get_devic": [5, 6], "get_dtyp": [5, 6], "get_float_dtyp": [5, 6], "get_se": [5, 6], "ghz": 20, "ghz_state": [14, 20], "gif": 13, "give": 19, "given": [2, 9, 19], "global": [6, 12], "go": 0, "grad": 2, "gradient": [2, 4, 13, 36], "graph": 3, "greater": 13, "group": 19, "grover": 16, "grover_matrix": [14, 16], "h": [4, 14, 16, 29, 34], "h_": 15, "h_gate": [14, 16], "ha": [13, 27], "haar": 17, "haar_density_oper": [14, 17], "haar_orthogon": [14, 17], "haar_state_vector": [14, 17], "haar_unitari": [14, 17], "hadamard": [3, 4, 34], "hamiltonian": [5, 9, 14, 17, 23], "happen": 4, "have": 4, "heisenberg": [15, 19], "heisenberg_hamiltonian": [14, 15], "heisenberg_weyl": [14, 19], "here": [4, 9, 16], "hermitian": 17, "histori": [2, 3, 4, 30, 31], "home": 0, "horizont": 30, "howev": 9, "html": [4, 16], "http": [3, 4, 16, 27], "i": [3, 4, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 26, 27, 30, 31, 33, 34, 36], "idx": 2, "if_print": [4, 36], "iix": 7, "imag": [4, 12], "image_filepath": 12, "image_to_density_matrix": [8, 12], "implement": [4, 6, 8, 9, 17, 20, 27, 31, 36], "inch": 4, "index": [2, 4, 7, 9, 13, 19, 20, 23, 33], "index_select": 9, "indic": [3, 4, 7, 9, 19, 26, 27, 28, 30, 31, 33, 34], "inform": [3, 4, 7, 9, 27, 30, 31, 36, 37], "init_st": 13, "initi": [2, 4, 13, 16], "input": [4, 7, 9, 12, 13, 16, 22, 23, 26, 27, 30, 31, 36], "instal": 4, "instanc": [3, 4, 12, 26, 30], "instanti": 7, "int": [2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 23, 26, 27, 28, 30, 31, 33, 34, 36], "integ": [9, 12, 19], "interfac": [22, 23, 30], "invers": [4, 34], "ion": 33, "is_povm": 9, "is_real": 17, "is_unitari": 17, "isdynam": 4, "ising_hamiltonian": [14, 15], "isotrop": 20, "isotropic_st": [14, 20], "item": [7, 16], "iter": [2, 3, 4, 7, 16, 23, 26, 27, 28, 30, 31, 33, 34, 36], "its": [9, 17], "izn": 20, "j": [4, 9, 20], "k": [15, 18, 27], "keep": 9, "keep_stat": [9, 23], "ket": 9, "krau": [4, 9, 17, 18, 26, 27, 28], "kraus_channel": 4, "kraus_op": 4, "kraus_repr": [26, 28], "krausrepr": [25, 28], "kroneck": 12, "kwarg": [30, 35, 36], "l": 27, "lam": 13, "lambda": [4, 16, 33, 34], "langl": [4, 9, 16, 20, 33], "langle00": 20, "langle11": 20, "latex": 4, "latex_nam": 4, "layer": [1, 2, 4, 31, 33, 34], "le": 27, "least": 12, "left": [16, 17], "legitimaci": 7, "length": [16, 27], "less": 27, "librari": [14, 15, 17, 20, 37], "linalg": 12, "linear": [3, 4, 9], "linear_entangled_lay": 4, "linearentangledlay": [1, 3], "list": [2, 3, 4, 7, 9, 10, 11, 12, 13, 17, 18, 19, 20, 23, 26, 27, 28, 30, 31, 33, 36], "log": 9, "logarithm": 9, "logic": 27, "long": 4, "loss": 0, "m": [4, 14, 16, 27, 29, 33], "mai": [4, 9], "make": [22, 23], "mann": 19, "mannmatrix": 16, "map": 16, "math": [17, 20], "mathbb": 19, "mathemat": 3, "mathit": [4, 16], "mathworld": 16, "matplotlib": [4, 30], "matric": [7, 16, 19], "matrix": [3, 4, 7, 9, 10, 12, 13, 14, 17, 19, 20, 26, 28, 30, 33, 34], "maxcut": 3, "mean": [4, 6, 9, 12, 17, 23, 36], "measur": [4, 9, 21, 36], "measure_basi": [4, 36], "measure_op": 23, "measured_op": 9, "memori": 9, "merg": 7, "method": 2, "microsecond": [4, 18, 27], "mix": [9, 10, 20], "mixedst": [9, 10], "mixtur": 27, "mode": 26, "modul": [1, 2, 6, 7, 8, 9, 21, 24, 25, 29], "more": [4, 9], "ms_gate": [14, 16], "multi": [13, 33], "multi_qubit_g": [24, 29], "must": [4, 27, 33, 34], "m\u00f8lmer": [4, 33], "n": [9, 10, 11, 16, 17, 18, 19, 20, 27], "n_qubit": 7, "n_term": 7, "name": [2, 4, 6, 13], "nanosecond": [4, 18, 27], "ndarrai": [2, 7, 9, 12, 13, 18], "need": [3, 12, 26, 30], "new": [2, 9], "niel": 4, "nielsen": 27, "nkron": 12, "node": 3, "noisi": 26, "none": [2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 16, 17, 18, 23, 26, 27, 28, 30, 31, 33, 34, 36], "normal": [2, 9], "notimpl": 36, "notimplementederror": [4, 17, 20, 22, 23, 26, 36], "np": 13, "num_acted_param": [4, 30, 31], "num_acted_qubit": 30, "num_qubit": [3, 4, 9, 16, 17, 18, 19, 20, 27], "num_qutrit": 4, "num_system": [4, 9, 17, 19, 20, 31], "number": [3, 4, 7, 9, 13, 16, 17, 18, 19, 20, 26, 27, 30, 31], "numel": 9, "numer": 9, "numpi": [6, 9, 12], "o": [4, 17], "observ": [7, 9, 17, 19, 23], "obtain": 12, "occupi": 30, "of_gat": [14, 16], "omega_n": 16, "omit": 4, "one": [2, 4, 20, 36], "one_st": [14, 20], "onli": [2, 3, 9, 12, 17, 19, 26], "op": [2, 9], "oper": [0, 2, 4, 5, 6, 7, 9, 16, 18, 19], "oper_histori": 2, "operatorlist": [1, 2, 4], "oplu": 16, "optim": [22, 23], "option": 9, "oracl": [4, 16, 29, 31], "order": [2, 9, 10, 11], "org": [3, 4, 27], "orthogon": 17, "other": [4, 9, 12, 20, 36], "otim": [4, 16, 17, 33], "out": [9, 26], "output": [4, 18, 26, 35], "overload": 30, "overridden": 9, "p": [4, 14, 16, 18, 20, 27, 29, 33, 34], "p_": 20, "p_gate": [14, 16], "pair": 2, "paper": 3, "param": [2, 4, 16, 30, 31, 33, 34], "param_oracl": 4, "param_shar": [4, 30, 31, 33, 34], "paramet": [2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 26, 27, 28, 30, 31, 33, 34, 35, 36], "parameter": [4, 30, 31], "paramg": [29, 30], "paramoracl": [29, 31], "partial": 9, "pass": 2, "patch": 4, "path": [4, 12], "pauli": [4, 7, 18, 19, 27], "pauli_basi": [14, 19], "pauli_channel": 4, "pauli_group": [14, 19], "pauli_krau": [14, 18], "pauli_str": [7, 19], "pauli_str_basi": [14, 19], "pauli_str_povm": [14, 19], "pauli_word": 7, "pauli_words_matrix": 7, "pauli_words_r": 7, "paulichannel": [25, 27], "pdf": 3, "per": [4, 9], "permut": 9, "ph": 17, "phase": [4, 14, 16, 18, 19, 27], "phase_damp": 4, "phase_damping_krau": [14, 18], "phase_flip": 4, "phase_flip_krau": [14, 18], "phase_g": [14, 16], "phase_space_point": [14, 19], "phasedamp": [25, 27], "phaseflip": [25, 27], "phi": [4, 13, 16, 20, 33, 34], "phi_": 20, "pi": [2, 3, 4, 16, 19, 33, 34], "pictur": 13, "place": [16, 30, 31], "plane": 13, "pleas": 27, "plot": [4, 13, 30, 31], "plot_density_matrix_graph": [5, 13], "plot_multi_qubits_state_in_bloch_spher": [5, 13], "plot_rotation_in_bloch_spher": [5, 13], "plot_state_in_bloch_spher": [5, 13], "plot_width": 4, "plt": 4, "point": 19, "posit": [19, 30], "povm": [9, 19], "pre": 21, "present": 16, "press": 27, "print": [4, 36], "prob": [4, 18, 20, 27], "probabl": [4, 9, 18, 23, 27], "problem": 3, "process": [4, 18, 27], "product": 12, "project": 23, "projector": 17, "properli": 4, "properti": [2, 3, 4, 7, 9, 10, 11, 26, 30], "proport": 4, "provid": [21, 26, 30], "psi": 20, "pure": [9, 11, 20], "purest": [9, 11], "pvm": 23, "q": [18, 27], "qaoa": 3, "qaoalay": [1, 3], "qaoalayerweight": [1, 3], "qft": [16, 19], "qft_basi": [14, 19], "qft_matrix": [14, 16], "qinfo": 0, "quantum": [3, 4, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 23, 25, 26, 27, 28, 29, 30, 31, 33, 36, 37], "quantumcomput": 4, "qubit": [3, 4, 7, 9, 12, 13, 16, 17, 18, 19, 20, 23, 27, 28, 30, 31, 33, 34], "qubit_num": 7, "qubits_idx": [3, 4, 27, 30, 33, 34], "qudit": [4, 16, 19, 31], "quleaf": 23, "qutrit": [4, 9, 12], "r": [20, 26, 27], "r_": [4, 16], "r_state": [14, 20], "r_x": [4, 16], "r_y": [4, 16], "r_z": [4, 16], "rais": [4, 6, 9, 13, 17, 20, 22, 23, 26, 30, 33, 34, 36], "random": [2, 4, 6, 14, 30, 31], "random_channel": [14, 17], "random_density_matrix": [14, 17], "random_hamiltonian_gener": [14, 17], "random_hermitian": [14, 17], "random_orthogonal_project": [14, 17], "random_pauli_str_gener": [14, 17], "random_st": [14, 17], "random_unitari": [14, 17], "random_unitary_hermitian": [14, 17], "random_unitary_with_hermitian_block": [14, 17], "randomize_param": 2, "randomli": [4, 17, 36], "rang": [4, 26, 27, 30, 31], "rangl": [4, 9, 16, 18, 20, 27, 33], "rangle_": 20, "rank": [9, 17, 26], "ratio": 4, "readi": 2, "real": [3, 17], "real_block_lay": 4, "real_entangled_lay": 4, "realblocklay": [1, 3], "realentangledlay": [1, 3], "red": 13, "reduc": 16, "reduce_g": [14, 16], "refer": [2, 9, 16, 17, 27], "referenc": 17, "relax": [4, 18, 27], "replac": [2, 18, 27], "replacement_choi": [14, 18], "replacementchannel": [25, 27], "repr_typ": 9, "repres": [4, 17, 19, 20, 26, 28, 30, 31], "represent": [3, 4, 9, 10, 11, 12, 14, 17, 26, 28], "requir": [4, 13, 30, 31, 33], "reset": [4, 9, 18, 27, 35, 36], "reset_channel": 4, "reset_circuit_plot_param": [29, 35], "reset_krau": [14, 18], "reset_sequ": 9, "resetchannel": [25, 27], "resetst": [24, 36], "resolut": 4, "respect": [2, 7, 9, 13, 19, 23], "result": [4, 9, 23, 36], "return": [2, 3, 4, 6, 7, 9, 12, 15, 16, 17, 18, 19, 20, 22, 23, 26, 30, 35, 36], "rho": 27, "right": 16, "root": 9, "rotat": [3, 4, 13, 16, 33, 34], "rotating_angl": 13, "rule": 9, "run": [9, 26], "rx": [4, 14, 16, 29, 33, 34], "rx_gate": [14, 16], "rxx": [4, 14, 16, 29, 33], "rxx_gate": [14, 16], "ry": [3, 4, 14, 16, 29, 33, 34], "ry_gat": [14, 16], "ryi": [4, 14, 16, 29, 33], "ryy_gat": [14, 16], "rz": [3, 4, 14, 16, 29, 33, 34], "rz_gate": [14, 16], "rzz": [4, 14, 16, 29, 33], "rzz_gate": [14, 16], "s_gate": [14, 16], "s_state": [14, 20], "same": [4, 9, 26, 30, 31, 33, 34], "sampl": [2, 17, 23], "satisfi": 27, "save": [4, 6, 9], "save_gif": 13, "save_p": 13, "save_path": 4, "scalar": 35, "scale": [4, 35], "scale_circuit_plot_param": [29, 35], "sdg": [4, 14, 16, 29, 34], "sdg_gate": [14, 16], "second": [12, 13], "see": [4, 9, 27], "seed": 6, "self": 30, "sequenc": [4, 9, 16], "sequenti": 2, "serv": 16, "set": [2, 4, 6, 12, 13, 14, 30, 31, 35], "set_backend": [5, 6], "set_circuit_plot_param": [29, 35], "set_color": 13, "set_devic": [5, 6], "set_dtyp": [5, 6], "set_gate_info": 30, "set_se": [5, 6], "setup": 12, "shape": [9, 10, 11, 15, 16, 19, 26], "share": [4, 30, 31, 33, 34], "shift": [14, 16], "shift_gat": [14, 16], "shot": 9, "should": [4, 6, 17, 20, 26, 27], "show": [4, 13], "show_arrow": 13, "sigma": [18, 27], "sigma_k": [18, 27], "sigx_p": 7, "sigy_p": 7, "sigz_p": 7, "simpli": 7, "simplifi": 7, "simul": 27, "sin": [4, 16, 33, 34], "sinc": 9, "singl": [3, 4, 12, 16, 30, 31, 33, 34], "single_qubit_g": [24, 29], "site": 7, "size": [7, 9, 13, 17], "so": 16, "some": 4, "soon": 36, "sourc": [2, 3, 4, 10, 11, 22, 23, 26, 27, 28, 30, 31, 33, 34, 36], "space": 19, "span": 19, "spars": 7, "special": 24, "specif": 9, "specifi": [9, 12, 13, 23, 26, 30], "sphere": 13, "spin": 7, "spinop": [5, 7], "sqrt": [4, 9, 16, 18, 20, 27, 33, 34], "squar": 9, "st": 16, "stabl": 4, "stackexchang": 4, "standard": 19, "start": [13, 30], "state": [4, 5, 13, 14, 17, 18, 19, 22, 23, 27, 36], "state_a": 12, "state_b": 12, "state_backend": [9, 12], "state_vector": [8, 9, 12, 20], "statefidel": [21, 22], "statevector": 9, "static": 9, "std_basi": [14, 19], "stinespr": [4, 17, 26, 28], "stinespring_channel": 4, "stinespring_mat": 28, "stinespring_repr": [4, 26], "stinespringrepr": [25, 28], "stop_gradi": 2, "store": [10, 11, 13], "str": [2, 3, 4, 6, 7, 9, 12, 13, 17, 18, 19, 23, 26, 27, 31, 33, 34, 36], "string": [7, 19, 23], "strongli": [3, 4], "sublay": 2, "subsystem": 9, "sum": 27, "sum_": [15, 20], "superconduct": 27, "superposition_lay": 4, "superpositionlay": [1, 3], "support": [2, 4, 9, 22, 23, 36], "swap": [4, 14, 16, 29, 33], "swap_gat": [14, 16], "sys_dim": [9, 10, 11], "sys_idx": 9, "system": [4, 7, 9, 10, 11, 12, 17, 19, 20, 23, 26, 28, 30, 31, 36], "system_dim": [4, 9, 12, 17, 19, 20], "system_histori": 4, "system_idx": [4, 23, 26, 27, 28, 30, 31, 36], "system_seq": [9, 10, 11], "s\u00f8rensen": [4, 33], "t": [4, 14, 16, 19, 29, 34], "t_1": [4, 18, 27], "t_2": [4, 18, 27], "t_gate": [14, 16], "tabl": [12, 13], "target": [9, 17, 22], "target_seq": 9, "target_st": 22, "tdg": [4, 14, 16, 29, 34], "tdg_gate": [14, 16], "templat": 3, "tensor": [2, 4, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 22, 23, 26, 27, 28, 30, 31, 33, 34, 36], "tensor_st": [8, 12], "term": [7, 9, 17, 23], "tex": 4, "tex_demo": 4, "text": [16, 18, 26, 27], "text_labels_and_annot": 4, "textrm": 9, "th": [4, 20], "than": [13, 27], "thei": 19, "theori": 37, "thermal": [4, 18, 27], "thermal_relax": 4, "thermal_relaxation_krau": [14, 18], "thermalrelax": [25, 27], "theta": [2, 4, 13, 16, 33, 34], "theta2": [4, 16, 33, 34], "thi": [2, 3, 4, 9, 10, 11, 12, 16, 17, 18, 19, 20, 22, 23, 26, 27, 28, 30, 31], "three": [4, 16, 18, 27, 33], "time": [4, 17, 18, 19, 27], "to_stat": [8, 12], "toffoli": [4, 14, 16, 29, 33], "toffoli_g": [14, 16], "toler": [9, 12], "too": 4, "tool": 13, "torch": [4, 6, 9, 12, 13, 16, 23, 33, 34], "total": [3, 27, 30], "tr": 27, "trace": [9, 13, 22], "trace_idx": 9, "tracedist": [21, 22], "transfer_stat": 2, "transform": [9, 19], "transpos": [9, 16], "transpose_idx": 9, "trap": 33, "true": [2, 4, 7, 9, 13, 23, 26, 30], "tupl": [3, 4, 7, 9, 13, 23], "tutori": 17, "two": [4, 7, 12, 16, 18, 27, 33], "type": [4, 6, 7, 9, 12, 15, 16, 17, 18, 19, 20, 22, 23, 26, 30, 35, 36], "type_repr": 26, "typeerror": [4, 13, 26], "u": [15, 16], "u3": [4, 14, 16, 29, 34], "u3_gat": [14, 16], "u_3": [4, 16], "uf": [14, 16], "uf_gat": [14, 16], "unabl": 4, "unexpect": 26, "uniform": 2, "unitari": [3, 4, 9, 16, 17, 30, 31], "unitary_matrix": 4, "univers": [4, 16, 27, 31, 33], "universal2": [14, 16], "universal2_g": [14, 16], "universal3": [14, 16], "universal3_g": [14, 16], "universal_qudit": [4, 14, 16], "universal_three_qubit": 4, "universal_two_qubit": 4, "universalqudit": [29, 31], "universalthreequbit": [29, 33], "universaltwoqubit": [29, 33], "unknown": 4, "unnorm": 19, "unsupport": 26, "updat": [27, 35], "update_param": 2, "upper": 17, "us": [3, 4, 6, 7, 12, 16, 22, 23], "use_spars": 7, "user": [7, 30], "userwarn": 9, "uv": 15, "v": 15, "valid": [9, 12], "valu": [4, 6, 9, 16, 22, 23, 27], "valueerror": [4, 6, 13, 26, 30, 33, 34], "variat": 1, "variou": 9, "vec": 9, "vector": [9, 11, 13, 17, 19], "version": 27, "vertic": 15, "view": 13, "view_angl": 13, "view_dist": 13, "visual": [5, 24, 29], "w": 20, "w_state": [14, 20], "want": [4, 36], "we": [2, 9], "weak_superposition_lay": 4, "weakli": [3, 4], "weaksuperpositionlay": [1, 3], "weight": 3, "were": 16, "weyl": 19, "when": [4, 9, 12, 16, 19, 30, 33, 36], "where": [4, 15, 18, 19, 26, 27], "whether": [4, 7, 9, 13, 17, 23, 26, 30, 31, 33, 34, 36], "which": [3, 4, 6, 7, 9, 13, 17, 22, 23, 26, 27, 28, 30, 31, 33, 34, 36], "which_qubit": 13, "whose": 20, "width": [4, 13, 30], "wolfram": 16, "word": 7, "work": 3, "wrong": [17, 20, 22, 23], "x": [4, 7, 13, 14, 16, 18, 19, 23, 27, 29, 30, 33, 34], "x0": 17, "x3": 7, "x_gate": [14, 16], "x_i": 7, "x_k": 15, "x_u": 15, "x_v": 15, "xx": [4, 16], "xy": 15, "xy_hamiltonian": [14, 15], "y": [4, 13, 14, 16, 18, 19, 23, 27, 29, 33, 34], "y0": 17, "y_gate": [14, 16], "y_i": 7, "y_u": 15, "y_v": 15, "you": [4, 16, 22, 23, 36], "your": 4, "yy": [4, 16], "z": [4, 7, 13, 14, 16, 17, 18, 19, 23, 27, 29, 33, 34, 36], "z0": 7, "z1": 7, "z2": 17, "z_gate": [14, 16], "z_i": 7, "z_u": 15, "z_v": 15, "zero": 20, "zero_st": [14, 20], "ziz": 7, "zxzz": 7, "zz": [4, 16], "zzix": 7, "zzx": 7}, "titles": ["Welcome to QuAIRKit\u2019s documentation!", "quairkit.ansatz", "quairkit.ansatz.container", "quairkit.ansatz.layer", "quairkit.circuit", "quairkit.core", "quairkit.core.base", "quairkit.core.hamiltonian", "quairkit.core.state", "quairkit.core.state.backend", "quairkit.core.state.backend.density_matrix", "quairkit.core.state.backend.state_vector", "quairkit.core.state.state", "quairkit.core.visual", "quairkit.database", "quairkit.database.hamiltonian", "quairkit.database.matrix", "quairkit.database.random", "quairkit.database.representation", "quairkit.database.set", "quairkit.database.state", "quairkit.loss", "quairkit.loss.distance", "quairkit.loss.measure", "quairkit.operator", "quairkit.operator.channel", "quairkit.operator.channel.base", "quairkit.operator.channel.common", "quairkit.operator.channel.custom", "quairkit.operator.gate", "quairkit.operator.gate.base", "quairkit.operator.gate.custom", "quairkit.operator.gate.encoding", "quairkit.operator.gate.multi_qubit_gate", "quairkit.operator.gate.single_qubit_gate", "quairkit.operator.gate.visual", "quairkit.operator.special", "quairkit.qinfo"], "titleterms": {"": 0, "ansatz": [1, 2, 3], "backend": [9, 10, 11], "base": [6, 26, 30], "channel": [25, 26, 27, 28], "circuit": 4, "common": 27, "contain": 2, "core": [5, 6, 7, 8, 9, 10, 11, 12, 13], "custom": [28, 31], "databas": [14, 15, 16, 17, 18, 19, 20], "density_matrix": 10, "distanc": 22, "document": 0, "encod": 32, "gate": [29, 30, 31, 32, 33, 34, 35], "hamiltonian": [7, 15], "layer": 3, "loss": [21, 22, 23], "matrix": 16, "measur": 23, "multi_qubit_g": 33, "note": [2, 3, 4, 6, 7, 9, 10, 11, 12, 23, 26, 27, 30, 36], "oper": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "qinfo": 37, "quairkit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "random": 17, "represent": 18, "set": 19, "single_qubit_g": 34, "special": 36, "state": [8, 9, 10, 11, 12, 20], "state_vector": 11, "visual": [13, 35], "welcom": 0}})